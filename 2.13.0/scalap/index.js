Index.PACKAGES = {"scala.tools.scalap" : [{"name" : "scala.tools.scalap.Arguments", "shortDescription" : "", "object" : "scala\/tools\/scalap\/Arguments$.html", "members_class" : [{"label" : "+", "tail" : "(other: String): String", "member" : "scala.Predef.any2stringadd.+", "link" : "scala\/tools\/scalap\/Arguments.html#+(other:String):String", "kind" : "def"}, {"label" : "formatted", "tail" : "(fmtstr: String): String", "member" : "scala.Predef.StringFormat.formatted", "link" : "scala\/tools\/scalap\/Arguments.html#formatted(fmtstr:String):String", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: (Arguments) => Boolean, msg: => Any): Arguments", "member" : "scala.Predef.Ensuring.ensuring", "link" : "scala\/tools\/scalap\/Arguments.html#ensuring(cond:A=>Boolean,msg:=>Any):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: (Arguments) => Boolean): Arguments", "member" : "scala.Predef.Ensuring.ensuring", "link" : "scala\/tools\/scalap\/Arguments.html#ensuring(cond:A=>Boolean):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: Boolean, msg: => Any): Arguments", "member" : "scala.Predef.Ensuring.ensuring", "link" : "scala\/tools\/scalap\/Arguments.html#ensuring(cond:Boolean,msg:=>Any):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: Boolean): Arguments", "member" : "scala.Predef.Ensuring.ensuring", "link" : "scala\/tools\/scalap\/Arguments.html#ensuring(cond:Boolean):A", "kind" : "def"}, {"label" : "→", "tail" : "(y: B): (Arguments, B)", "member" : "scala.Predef.ArrowAssoc.→", "link" : "scala\/tools\/scalap\/Arguments.html#→[B](y:B):(A,B)", "kind" : "def"}, {"label" : "->", "tail" : "(y: B): (Arguments, B)", "member" : "scala.Predef.ArrowAssoc.->", "link" : "scala\/tools\/scalap\/Arguments.html#->[B](y:B):(A,B)", "kind" : "def"}, {"label" : "getOthers", "tail" : "(): List[String]", "member" : "scala.tools.scalap.Arguments.getOthers", "link" : "scala\/tools\/scalap\/Arguments.html#getOthers:List[String]", "kind" : "def"}, {"label" : "getBinding", "tail" : "(option: String, key: String): Option[String]", "member" : "scala.tools.scalap.Arguments.getBinding", "link" : "scala\/tools\/scalap\/Arguments.html#getBinding(option:String,key:String):Option[String]", "kind" : "def"}, {"label" : "getBindings", "tail" : "(tag: String): Map[String, String]", "member" : "scala.tools.scalap.Arguments.getBindings", "link" : "scala\/tools\/scalap\/Arguments.html#getBindings(tag:String):scala.collection.mutable.Map[String,String]", "kind" : "def"}, {"label" : "containsSuffix", "tail" : "(prefix: String, suffix: String): Boolean", "member" : "scala.tools.scalap.Arguments.containsSuffix", "link" : "scala\/tools\/scalap\/Arguments.html#containsSuffix(prefix:String,suffix:String):Boolean", "kind" : "def"}, {"label" : "getSuffixes", "tail" : "(prefix: String): Set[String]", "member" : "scala.tools.scalap.Arguments.getSuffixes", "link" : "scala\/tools\/scalap\/Arguments.html#getSuffixes(prefix:String):scala.collection.mutable.Set[String]", "kind" : "def"}, {"label" : "getArgument", "tail" : "(option: String): Option[String]", "member" : "scala.tools.scalap.Arguments.getArgument", "link" : "scala\/tools\/scalap\/Arguments.html#getArgument(option:String):Option[String]", "kind" : "def"}, {"label" : "contains", "tail" : "(option: String): Boolean", "member" : "scala.tools.scalap.Arguments.contains", "link" : "scala\/tools\/scalap\/Arguments.html#contains(option:String):Boolean", "kind" : "def"}, {"label" : "addOther", "tail" : "(arg: String): Unit", "member" : "scala.tools.scalap.Arguments.addOther", "link" : "scala\/tools\/scalap\/Arguments.html#addOther(arg:String):Unit", "kind" : "def"}, {"label" : "addBinding", "tail" : "(tag: String, binding: (String, String)): Unit", "member" : "scala.tools.scalap.Arguments.addBinding", "link" : "scala\/tools\/scalap\/Arguments.html#addBinding(tag:String,binding:(String,String)):Unit", "kind" : "def"}, {"label" : "addBinding", "tail" : "(tag: String, key: String, value: String): Unit", "member" : "scala.tools.scalap.Arguments.addBinding", "link" : "scala\/tools\/scalap\/Arguments.html#addBinding(tag:String,key:String,value:String):Unit", "kind" : "def"}, {"label" : "addPrefixed", "tail" : "(prefix: String, arg: String): Unit", "member" : "scala.tools.scalap.Arguments.addPrefixed", "link" : "scala\/tools\/scalap\/Arguments.html#addPrefixed(prefix:String,arg:String):Unit", "kind" : "def"}, {"label" : "addArgument", "tail" : "(option: String, arg: String): Unit", "member" : "scala.tools.scalap.Arguments.addArgument", "link" : "scala\/tools\/scalap\/Arguments.html#addArgument(option:String,arg:String):Unit", "kind" : "def"}, {"label" : "addOption", "tail" : "(option: String): Unit", "member" : "scala.tools.scalap.Arguments.addOption", "link" : "scala\/tools\/scalap\/Arguments.html#addOption(option:String):Unit", "kind" : "def"}, {"member" : "scala.tools.scalap.Arguments#<init>", "error" : "unsupported entity"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "scala\/tools\/scalap\/Arguments.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "scala\/tools\/scalap\/Arguments.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "scala\/tools\/scalap\/Arguments.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "scala\/tools\/scalap\/Arguments.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "scala\/tools\/scalap\/Arguments.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "scala\/tools\/scalap\/Arguments.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "scala\/tools\/scalap\/Arguments.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "scala\/tools\/scalap\/Arguments.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "scala\/tools\/scalap\/Arguments.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "scala\/tools\/scalap\/Arguments.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "scala\/tools\/scalap\/Arguments.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "scala\/tools\/scalap\/Arguments.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "scala\/tools\/scalap\/Arguments.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "scala\/tools\/scalap\/Arguments.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "scala\/tools\/scalap\/Arguments.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "scala\/tools\/scalap\/Arguments.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "scala\/tools\/scalap\/Arguments.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "scala\/tools\/scalap\/Arguments.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "scala\/tools\/scalap\/Arguments.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "members_object" : [{"label" : "parse", "tail" : "(options: String*)(args: Array[String]): Arguments", "member" : "scala.tools.scalap.Arguments.parse", "link" : "scala\/tools\/scalap\/Arguments$.html#parse(options:String*)(args:Array[String]):scala.tools.scalap.Arguments", "kind" : "def"}, {"label" : "Parser", "tail" : "", "member" : "scala.tools.scalap.Arguments.Parser", "link" : "scala\/tools\/scalap\/Arguments$.html#ParserextendsProductwithSerializable", "kind" : "case class"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "scala\/tools\/scalap\/Arguments$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "scala\/tools\/scalap\/Arguments$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "scala\/tools\/scalap\/Arguments$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "scala\/tools\/scalap\/Arguments$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "scala\/tools\/scalap\/Arguments$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "scala\/tools\/scalap\/Arguments$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "scala\/tools\/scalap\/Arguments$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "scala\/tools\/scalap\/Arguments$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "scala\/tools\/scalap\/Arguments$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "scala\/tools\/scalap\/Arguments$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "scala\/tools\/scalap\/Arguments$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "scala\/tools\/scalap\/Arguments$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "scala\/tools\/scalap\/Arguments$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "scala\/tools\/scalap\/Arguments$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "scala\/tools\/scalap\/Arguments$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "scala\/tools\/scalap\/Arguments$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "scala\/tools\/scalap\/Arguments$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "scala\/tools\/scalap\/Arguments$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "scala\/tools\/scalap\/Arguments$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "scala\/tools\/scalap\/Arguments.html", "kind" : "object"}, {"name" : "scala.tools.scalap.ByteArrayReader", "shortDescription" : "", "members_class" : [{"label" : "+", "tail" : "(other: String): String", "member" : "scala.Predef.any2stringadd.+", "link" : "scala\/tools\/scalap\/ByteArrayReader.html#+(other:String):String", "kind" : "def"}, {"label" : "formatted", "tail" : "(fmtstr: String): String", "member" : "scala.Predef.StringFormat.formatted", "link" : "scala\/tools\/scalap\/ByteArrayReader.html#formatted(fmtstr:String):String", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: (ByteArrayReader) => Boolean, msg: => Any): ByteArrayReader", "member" : "scala.Predef.Ensuring.ensuring", "link" : "scala\/tools\/scalap\/ByteArrayReader.html#ensuring(cond:A=>Boolean,msg:=>Any):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: (ByteArrayReader) => Boolean): ByteArrayReader", "member" : "scala.Predef.Ensuring.ensuring", "link" : "scala\/tools\/scalap\/ByteArrayReader.html#ensuring(cond:A=>Boolean):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: Boolean, msg: => Any): ByteArrayReader", "member" : "scala.Predef.Ensuring.ensuring", "link" : "scala\/tools\/scalap\/ByteArrayReader.html#ensuring(cond:Boolean,msg:=>Any):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: Boolean): ByteArrayReader", "member" : "scala.Predef.Ensuring.ensuring", "link" : "scala\/tools\/scalap\/ByteArrayReader.html#ensuring(cond:Boolean):A", "kind" : "def"}, {"label" : "→", "tail" : "(y: B): (ByteArrayReader, B)", "member" : "scala.Predef.ArrowAssoc.→", "link" : "scala\/tools\/scalap\/ByteArrayReader.html#→[B](y:B):(A,B)", "kind" : "def"}, {"label" : "->", "tail" : "(y: B): (ByteArrayReader, B)", "member" : "scala.Predef.ArrowAssoc.->", "link" : "scala\/tools\/scalap\/ByteArrayReader.html#->[B](y:B):(A,B)", "kind" : "def"}, {"label" : "skip", "tail" : "(n: Int): Unit", "member" : "scala.tools.scalap.ByteArrayReader.skip", "link" : "scala\/tools\/scalap\/ByteArrayReader.html#skip(n:Int):Unit", "kind" : "def"}, {"label" : "getDouble", "tail" : "(bp: Int): Double", "member" : "scala.tools.scalap.ByteArrayReader.getDouble", "link" : "scala\/tools\/scalap\/ByteArrayReader.html#getDouble(bp:Int):Double", "kind" : "def"}, {"label" : "getFloat", "tail" : "(bp: Int): Float", "member" : "scala.tools.scalap.ByteArrayReader.getFloat", "link" : "scala\/tools\/scalap\/ByteArrayReader.html#getFloat(bp:Int):Float", "kind" : "def"}, {"label" : "getLong", "tail" : "(bp: Int): Long", "member" : "scala.tools.scalap.ByteArrayReader.getLong", "link" : "scala\/tools\/scalap\/ByteArrayReader.html#getLong(bp:Int):Long", "kind" : "def"}, {"label" : "getInt", "tail" : "(bp: Int): Int", "member" : "scala.tools.scalap.ByteArrayReader.getInt", "link" : "scala\/tools\/scalap\/ByteArrayReader.html#getInt(bp:Int):Int", "kind" : "def"}, {"label" : "getChar", "tail" : "(bp: Int): Char", "member" : "scala.tools.scalap.ByteArrayReader.getChar", "link" : "scala\/tools\/scalap\/ByteArrayReader.html#getChar(bp:Int):Char", "kind" : "def"}, {"label" : "nextUTF8", "tail" : "(len: Int): String", "member" : "scala.tools.scalap.ByteArrayReader.nextUTF8", "link" : "scala\/tools\/scalap\/ByteArrayReader.html#nextUTF8(len:Int):String", "kind" : "def"}, {"label" : "nextDouble", "tail" : "(): Double", "member" : "scala.tools.scalap.ByteArrayReader.nextDouble", "link" : "scala\/tools\/scalap\/ByteArrayReader.html#nextDouble:Double", "kind" : "def"}, {"label" : "nextFloat", "tail" : "(): Float", "member" : "scala.tools.scalap.ByteArrayReader.nextFloat", "link" : "scala\/tools\/scalap\/ByteArrayReader.html#nextFloat:Float", "kind" : "def"}, {"label" : "nextLong", "tail" : "(): Long", "member" : "scala.tools.scalap.ByteArrayReader.nextLong", "link" : "scala\/tools\/scalap\/ByteArrayReader.html#nextLong:Long", "kind" : "def"}, {"label" : "nextInt", "tail" : "(): Int", "member" : "scala.tools.scalap.ByteArrayReader.nextInt", "link" : "scala\/tools\/scalap\/ByteArrayReader.html#nextInt:Int", "kind" : "def"}, {"label" : "nextChar", "tail" : "(): Char", "member" : "scala.tools.scalap.ByteArrayReader.nextChar", "link" : "scala\/tools\/scalap\/ByteArrayReader.html#nextChar:Char", "kind" : "def"}, {"label" : "nextBytes", "tail" : "(len: Int): Array[Byte]", "member" : "scala.tools.scalap.ByteArrayReader.nextBytes", "link" : "scala\/tools\/scalap\/ByteArrayReader.html#nextBytes(len:Int):Array[Byte]", "kind" : "def"}, {"label" : "nextByte", "tail" : "(): Byte", "member" : "scala.tools.scalap.ByteArrayReader.nextByte", "link" : "scala\/tools\/scalap\/ByteArrayReader.html#nextByte:Byte", "kind" : "def"}, {"label" : "byteAt", "tail" : "(pos: Int): Byte", "member" : "scala.tools.scalap.ByteArrayReader.byteAt", "link" : "scala\/tools\/scalap\/ByteArrayReader.html#byteAt(pos:Int):Byte", "kind" : "def"}, {"label" : "bp", "tail" : ": Int", "member" : "scala.tools.scalap.ByteArrayReader.bp", "link" : "scala\/tools\/scalap\/ByteArrayReader.html#bp:Int", "kind" : "var"}, {"label" : "buf", "tail" : ": Array[Byte]", "member" : "scala.tools.scalap.ByteArrayReader.buf", "link" : "scala\/tools\/scalap\/ByteArrayReader.html#buf:Array[Byte]", "kind" : "val"}, {"member" : "scala.tools.scalap.ByteArrayReader#<init>", "error" : "unsupported entity"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "scala\/tools\/scalap\/ByteArrayReader.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "scala\/tools\/scalap\/ByteArrayReader.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "scala\/tools\/scalap\/ByteArrayReader.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "scala\/tools\/scalap\/ByteArrayReader.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "scala\/tools\/scalap\/ByteArrayReader.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "scala\/tools\/scalap\/ByteArrayReader.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "scala\/tools\/scalap\/ByteArrayReader.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "scala\/tools\/scalap\/ByteArrayReader.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "scala\/tools\/scalap\/ByteArrayReader.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "scala\/tools\/scalap\/ByteArrayReader.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "scala\/tools\/scalap\/ByteArrayReader.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "scala\/tools\/scalap\/ByteArrayReader.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "scala\/tools\/scalap\/ByteArrayReader.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "scala\/tools\/scalap\/ByteArrayReader.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "scala\/tools\/scalap\/ByteArrayReader.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "scala\/tools\/scalap\/ByteArrayReader.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "scala\/tools\/scalap\/ByteArrayReader.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "scala\/tools\/scalap\/ByteArrayReader.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "scala\/tools\/scalap\/ByteArrayReader.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "scala\/tools\/scalap\/ByteArrayReader.html", "kind" : "class"}, {"name" : "scala.tools.scalap.Classfile", "shortDescription" : "", "members_class" : [{"label" : "+", "tail" : "(other: String): String", "member" : "scala.Predef.any2stringadd.+", "link" : "scala\/tools\/scalap\/Classfile.html#+(other:String):String", "kind" : "def"}, {"label" : "formatted", "tail" : "(fmtstr: String): String", "member" : "scala.Predef.StringFormat.formatted", "link" : "scala\/tools\/scalap\/Classfile.html#formatted(fmtstr:String):String", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: (Classfile) => Boolean, msg: => Any): Classfile", "member" : "scala.Predef.Ensuring.ensuring", "link" : "scala\/tools\/scalap\/Classfile.html#ensuring(cond:A=>Boolean,msg:=>Any):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: (Classfile) => Boolean): Classfile", "member" : "scala.Predef.Ensuring.ensuring", "link" : "scala\/tools\/scalap\/Classfile.html#ensuring(cond:A=>Boolean):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: Boolean, msg: => Any): Classfile", "member" : "scala.Predef.Ensuring.ensuring", "link" : "scala\/tools\/scalap\/Classfile.html#ensuring(cond:Boolean,msg:=>Any):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: Boolean): Classfile", "member" : "scala.Predef.Ensuring.ensuring", "link" : "scala\/tools\/scalap\/Classfile.html#ensuring(cond:Boolean):A", "kind" : "def"}, {"label" : "→", "tail" : "(y: B): (Classfile, B)", "member" : "scala.Predef.ArrowAssoc.→", "link" : "scala\/tools\/scalap\/Classfile.html#→[B](y:B):(A,B)", "kind" : "def"}, {"label" : "->", "tail" : "(y: B): (Classfile, B)", "member" : "scala.Predef.ArrowAssoc.->", "link" : "scala\/tools\/scalap\/Classfile.html#->[B](y:B):(A,B)", "kind" : "def"}, {"label" : "Attribute", "tail" : "", "member" : "scala.tools.scalap.Classfile.Attribute", "link" : "scala\/tools\/scalap\/Classfile.html#AttributeextendsProductwithSerializable", "kind" : "case class"}, {"label" : "Member", "tail" : "", "member" : "scala.tools.scalap.Classfile.Member", "link" : "scala\/tools\/scalap\/Classfile.html#MemberextendsProductwithSerializable", "kind" : "case class"}, {"label" : "Pool", "tail" : "", "member" : "scala.tools.scalap.Classfile.Pool", "link" : "scala\/tools\/scalap\/Classfile.html#PoolextendsAnyRef", "kind" : "class"}, {"label" : "readInterfaces", "tail" : "(): List[Int]", "member" : "scala.tools.scalap.Classfile.readInterfaces", "link" : "scala\/tools\/scalap\/Classfile.html#readInterfaces:List[Int]", "kind" : "def"}, {"label" : "readMembers", "tail" : "(field: Boolean): List[Member]", "member" : "scala.tools.scalap.Classfile.readMembers", "link" : "scala\/tools\/scalap\/Classfile.html#readMembers(field:Boolean):List[Classfile.this.Member]", "kind" : "def"}, {"label" : "readAttribs", "tail" : "(): List[Attribute]", "member" : "scala.tools.scalap.Classfile.readAttribs", "link" : "scala\/tools\/scalap\/Classfile.html#readAttribs:List[Classfile.this.Attribute]", "kind" : "def"}, {"label" : "scalaSigAttribute", "tail" : "(): Option[Attribute]", "member" : "scala.tools.scalap.Classfile.scalaSigAttribute", "link" : "scala\/tools\/scalap\/Classfile.html#scalaSigAttribute:Option[Classfile.this.Attribute]", "kind" : "def"}, {"label" : "attribs", "tail" : ": List[Attribute]", "member" : "scala.tools.scalap.Classfile.attribs", "link" : "scala\/tools\/scalap\/Classfile.html#attribs:List[Classfile.this.Attribute]", "kind" : "val"}, {"label" : "methods", "tail" : ": List[Member]", "member" : "scala.tools.scalap.Classfile.methods", "link" : "scala\/tools\/scalap\/Classfile.html#methods:List[Classfile.this.Member]", "kind" : "val"}, {"label" : "fields", "tail" : ": List[Member]", "member" : "scala.tools.scalap.Classfile.fields", "link" : "scala\/tools\/scalap\/Classfile.html#fields:List[Classfile.this.Member]", "kind" : "val"}, {"label" : "interfaces", "tail" : ": List[Int]", "member" : "scala.tools.scalap.Classfile.interfaces", "link" : "scala\/tools\/scalap\/Classfile.html#interfaces:List[Int]", "kind" : "val"}, {"label" : "superclass", "tail" : ": Char", "member" : "scala.tools.scalap.Classfile.superclass", "link" : "scala\/tools\/scalap\/Classfile.html#superclass:Char", "kind" : "val"}, {"label" : "classname", "tail" : ": Char", "member" : "scala.tools.scalap.Classfile.classname", "link" : "scala\/tools\/scalap\/Classfile.html#classname:Char", "kind" : "val"}, {"label" : "flags", "tail" : ": Char", "member" : "scala.tools.scalap.Classfile.flags", "link" : "scala\/tools\/scalap\/Classfile.html#flags:Char", "kind" : "val"}, {"label" : "pool", "tail" : ": Pool", "member" : "scala.tools.scalap.Classfile.pool", "link" : "scala\/tools\/scalap\/Classfile.html#pool:Classfile.this.Pool", "kind" : "val"}, {"label" : "majorVersion", "tail" : ": Char", "member" : "scala.tools.scalap.Classfile.majorVersion", "link" : "scala\/tools\/scalap\/Classfile.html#majorVersion:Char", "kind" : "val"}, {"label" : "minorVersion", "tail" : ": Char", "member" : "scala.tools.scalap.Classfile.minorVersion", "link" : "scala\/tools\/scalap\/Classfile.html#minorVersion:Char", "kind" : "val"}, {"label" : "UTF8", "tail" : "", "member" : "scala.tools.scalap.Classfile.UTF8", "link" : "scala\/tools\/scalap\/Classfile.html#UTF8=Classfile.this.Pool#UTF8", "kind" : "type"}, {"member" : "scala.tools.scalap.Classfile#<init>", "error" : "unsupported entity"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "scala\/tools\/scalap\/Classfile.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "scala\/tools\/scalap\/Classfile.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "scala\/tools\/scalap\/Classfile.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "scala\/tools\/scalap\/Classfile.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "scala\/tools\/scalap\/Classfile.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "scala\/tools\/scalap\/Classfile.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "scala\/tools\/scalap\/Classfile.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "scala\/tools\/scalap\/Classfile.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "scala\/tools\/scalap\/Classfile.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "scala\/tools\/scalap\/Classfile.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "scala\/tools\/scalap\/Classfile.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "scala\/tools\/scalap\/Classfile.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "scala\/tools\/scalap\/Classfile.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "scala\/tools\/scalap\/Classfile.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "scala\/tools\/scalap\/Classfile.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "scala\/tools\/scalap\/Classfile.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "scala\/tools\/scalap\/Classfile.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "scala\/tools\/scalap\/Classfile.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "scala\/tools\/scalap\/Classfile.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "scala\/tools\/scalap\/Classfile.html", "kind" : "class"}, {"name" : "scala.tools.scalap.Classfiles", "shortDescription" : "", "object" : "scala\/tools\/scalap\/Classfiles$.html", "members_object" : [{"label" : "constantTagToString", "tail" : ": Map[Int, String]", "member" : "scala.tools.scalap.Classfiles.constantTagToString", "link" : "scala\/tools\/scalap\/Classfiles$.html#constantTagToString:scala.collection.immutable.Map[Int,String]", "kind" : "final val"}, {"label" : "CONSTANT_INVDYNAMIC", "tail" : ": Int(18)", "member" : "scala.tools.scalap.Classfiles.CONSTANT_INVDYNAMIC", "link" : "scala\/tools\/scalap\/Classfiles$.html#CONSTANT_INVDYNAMIC:Int(18)", "kind" : "final val"}, {"label" : "CONSTANT_METHODTYPE", "tail" : ": Int(16)", "member" : "scala.tools.scalap.Classfiles.CONSTANT_METHODTYPE", "link" : "scala\/tools\/scalap\/Classfiles$.html#CONSTANT_METHODTYPE:Int(16)", "kind" : "final val"}, {"label" : "CONSTANT_METHODHANDLE", "tail" : ": Int(15)", "member" : "scala.tools.scalap.Classfiles.CONSTANT_METHODHANDLE", "link" : "scala\/tools\/scalap\/Classfiles$.html#CONSTANT_METHODHANDLE:Int(15)", "kind" : "final val"}, {"label" : "CONSTANT_NAMEANDTYPE", "tail" : ": Int(12)", "member" : "scala.tools.scalap.Classfiles.CONSTANT_NAMEANDTYPE", "link" : "scala\/tools\/scalap\/Classfiles$.html#CONSTANT_NAMEANDTYPE:Int(12)", "kind" : "final val"}, {"label" : "CONSTANT_INTFMETHODREF", "tail" : ": Int(11)", "member" : "scala.tools.scalap.Classfiles.CONSTANT_INTFMETHODREF", "link" : "scala\/tools\/scalap\/Classfiles$.html#CONSTANT_INTFMETHODREF:Int(11)", "kind" : "final val"}, {"label" : "CONSTANT_METHODREF", "tail" : ": Int(10)", "member" : "scala.tools.scalap.Classfiles.CONSTANT_METHODREF", "link" : "scala\/tools\/scalap\/Classfiles$.html#CONSTANT_METHODREF:Int(10)", "kind" : "final val"}, {"label" : "CONSTANT_FIELDREF", "tail" : ": Int(9)", "member" : "scala.tools.scalap.Classfiles.CONSTANT_FIELDREF", "link" : "scala\/tools\/scalap\/Classfiles$.html#CONSTANT_FIELDREF:Int(9)", "kind" : "final val"}, {"label" : "CONSTANT_STRING", "tail" : ": Int(8)", "member" : "scala.tools.scalap.Classfiles.CONSTANT_STRING", "link" : "scala\/tools\/scalap\/Classfiles$.html#CONSTANT_STRING:Int(8)", "kind" : "final val"}, {"label" : "CONSTANT_CLASS", "tail" : ": Int(7)", "member" : "scala.tools.scalap.Classfiles.CONSTANT_CLASS", "link" : "scala\/tools\/scalap\/Classfiles$.html#CONSTANT_CLASS:Int(7)", "kind" : "final val"}, {"label" : "CONSTANT_DOUBLE", "tail" : ": Int(6)", "member" : "scala.tools.scalap.Classfiles.CONSTANT_DOUBLE", "link" : "scala\/tools\/scalap\/Classfiles$.html#CONSTANT_DOUBLE:Int(6)", "kind" : "final val"}, {"label" : "CONSTANT_LONG", "tail" : ": Int(5)", "member" : "scala.tools.scalap.Classfiles.CONSTANT_LONG", "link" : "scala\/tools\/scalap\/Classfiles$.html#CONSTANT_LONG:Int(5)", "kind" : "final val"}, {"label" : "CONSTANT_FLOAT", "tail" : ": Int(4)", "member" : "scala.tools.scalap.Classfiles.CONSTANT_FLOAT", "link" : "scala\/tools\/scalap\/Classfiles$.html#CONSTANT_FLOAT:Int(4)", "kind" : "final val"}, {"label" : "CONSTANT_INTEGER", "tail" : ": Int(3)", "member" : "scala.tools.scalap.Classfiles.CONSTANT_INTEGER", "link" : "scala\/tools\/scalap\/Classfiles$.html#CONSTANT_INTEGER:Int(3)", "kind" : "final val"}, {"label" : "CONSTANT_UNICODE", "tail" : ": Int(2)", "member" : "scala.tools.scalap.Classfiles.CONSTANT_UNICODE", "link" : "scala\/tools\/scalap\/Classfiles$.html#CONSTANT_UNICODE:Int(2)", "kind" : "final val"}, {"label" : "CONSTANT_UTF8", "tail" : ": Int(1)", "member" : "scala.tools.scalap.Classfiles.CONSTANT_UTF8", "link" : "scala\/tools\/scalap\/Classfiles$.html#CONSTANT_UTF8:Int(1)", "kind" : "final val"}, {"label" : "JAVA_MINOR_VERSION", "tail" : ": Int(3)", "member" : "scala.tools.scalap.Classfiles.JAVA_MINOR_VERSION", "link" : "scala\/tools\/scalap\/Classfiles$.html#JAVA_MINOR_VERSION:Int(3)", "kind" : "final val"}, {"label" : "JAVA_MAJOR_VERSION", "tail" : ": Int(45)", "member" : "scala.tools.scalap.Classfiles.JAVA_MAJOR_VERSION", "link" : "scala\/tools\/scalap\/Classfiles$.html#JAVA_MAJOR_VERSION:Int(45)", "kind" : "final val"}, {"label" : "JAVA_MAGIC", "tail" : ": Int(-889275714)", "member" : "scala.tools.scalap.Classfiles.JAVA_MAGIC", "link" : "scala\/tools\/scalap\/Classfiles$.html#JAVA_MAGIC:Int(-889275714)", "kind" : "final val"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "scala\/tools\/scalap\/Classfiles$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "scala\/tools\/scalap\/Classfiles$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "scala\/tools\/scalap\/Classfiles$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "scala\/tools\/scalap\/Classfiles$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "scala\/tools\/scalap\/Classfiles$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "scala\/tools\/scalap\/Classfiles$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "scala\/tools\/scalap\/Classfiles$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "scala\/tools\/scalap\/Classfiles$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "scala\/tools\/scalap\/Classfiles$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "scala\/tools\/scalap\/Classfiles$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "scala\/tools\/scalap\/Classfiles$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "scala\/tools\/scalap\/Classfiles$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "scala\/tools\/scalap\/Classfiles$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "scala\/tools\/scalap\/Classfiles$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "scala\/tools\/scalap\/Classfiles$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "scala\/tools\/scalap\/Classfiles$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "scala\/tools\/scalap\/Classfiles$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "scala\/tools\/scalap\/Classfiles$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "scala\/tools\/scalap\/Classfiles$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "scala.tools.scalap.CodeWriter", "shortDescription" : "", "members_class" : [{"label" : "+", "tail" : "(other: String): String", "member" : "scala.Predef.any2stringadd.+", "link" : "scala\/tools\/scalap\/CodeWriter.html#+(other:String):String", "kind" : "def"}, {"label" : "formatted", "tail" : "(fmtstr: String): String", "member" : "scala.Predef.StringFormat.formatted", "link" : "scala\/tools\/scalap\/CodeWriter.html#formatted(fmtstr:String):String", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: (CodeWriter) => Boolean, msg: => Any): CodeWriter", "member" : "scala.Predef.Ensuring.ensuring", "link" : "scala\/tools\/scalap\/CodeWriter.html#ensuring(cond:A=>Boolean,msg:=>Any):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: (CodeWriter) => Boolean): CodeWriter", "member" : "scala.Predef.Ensuring.ensuring", "link" : "scala\/tools\/scalap\/CodeWriter.html#ensuring(cond:A=>Boolean):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: Boolean, msg: => Any): CodeWriter", "member" : "scala.Predef.Ensuring.ensuring", "link" : "scala\/tools\/scalap\/CodeWriter.html#ensuring(cond:Boolean,msg:=>Any):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: Boolean): CodeWriter", "member" : "scala.Predef.Ensuring.ensuring", "link" : "scala\/tools\/scalap\/CodeWriter.html#ensuring(cond:Boolean):A", "kind" : "def"}, {"label" : "→", "tail" : "(y: B): (CodeWriter, B)", "member" : "scala.Predef.ArrowAssoc.→", "link" : "scala\/tools\/scalap\/CodeWriter.html#→[B](y:B):(A,B)", "kind" : "def"}, {"label" : "->", "tail" : "(y: B): (CodeWriter, B)", "member" : "scala.Predef.ArrowAssoc.->", "link" : "scala\/tools\/scalap\/CodeWriter.html#->[B](y:B):(A,B)", "kind" : "def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.tools.scalap.CodeWriter.toString", "link" : "scala\/tools\/scalap\/CodeWriter.html#toString():String", "kind" : "def"}, {"label" : "print", "tail" : "(value: String): CodeWriter", "member" : "scala.tools.scalap.CodeWriter.print", "link" : "scala\/tools\/scalap\/CodeWriter.html#print(value:String):scala.tools.scalap.CodeWriter", "kind" : "def"}, {"label" : "print", "tail" : "(value: Double): CodeWriter", "member" : "scala.tools.scalap.CodeWriter.print", "link" : "scala\/tools\/scalap\/CodeWriter.html#print(value:Double):scala.tools.scalap.CodeWriter", "kind" : "def"}, {"label" : "print", "tail" : "(value: Float): CodeWriter", "member" : "scala.tools.scalap.CodeWriter.print", "link" : "scala\/tools\/scalap\/CodeWriter.html#print(value:Float):scala.tools.scalap.CodeWriter", "kind" : "def"}, {"label" : "print", "tail" : "(value: Long): CodeWriter", "member" : "scala.tools.scalap.CodeWriter.print", "link" : "scala\/tools\/scalap\/CodeWriter.html#print(value:Long):scala.tools.scalap.CodeWriter", "kind" : "def"}, {"label" : "print", "tail" : "(value: Int): CodeWriter", "member" : "scala.tools.scalap.CodeWriter.print", "link" : "scala\/tools\/scalap\/CodeWriter.html#print(value:Int):scala.tools.scalap.CodeWriter", "kind" : "def"}, {"label" : "print", "tail" : "(value: Char): CodeWriter", "member" : "scala.tools.scalap.CodeWriter.print", "link" : "scala\/tools\/scalap\/CodeWriter.html#print(value:Char):scala.tools.scalap.CodeWriter", "kind" : "def"}, {"label" : "print", "tail" : "(value: Short): CodeWriter", "member" : "scala.tools.scalap.CodeWriter.print", "link" : "scala\/tools\/scalap\/CodeWriter.html#print(value:Short):scala.tools.scalap.CodeWriter", "kind" : "def"}, {"label" : "print", "tail" : "(value: Byte): CodeWriter", "member" : "scala.tools.scalap.CodeWriter.print", "link" : "scala\/tools\/scalap\/CodeWriter.html#print(value:Byte):scala.tools.scalap.CodeWriter", "kind" : "def"}, {"label" : "print", "tail" : "(value: Boolean): CodeWriter", "member" : "scala.tools.scalap.CodeWriter.print", "link" : "scala\/tools\/scalap\/CodeWriter.html#print(value:Boolean):scala.tools.scalap.CodeWriter", "kind" : "def"}, {"label" : "println", "tail" : "(value: String): CodeWriter", "member" : "scala.tools.scalap.CodeWriter.println", "link" : "scala\/tools\/scalap\/CodeWriter.html#println(value:String):scala.tools.scalap.CodeWriter", "kind" : "def"}, {"label" : "println", "tail" : "(value: Double): CodeWriter", "member" : "scala.tools.scalap.CodeWriter.println", "link" : "scala\/tools\/scalap\/CodeWriter.html#println(value:Double):scala.tools.scalap.CodeWriter", "kind" : "def"}, {"label" : "println", "tail" : "(value: Float): CodeWriter", "member" : "scala.tools.scalap.CodeWriter.println", "link" : "scala\/tools\/scalap\/CodeWriter.html#println(value:Float):scala.tools.scalap.CodeWriter", "kind" : "def"}, {"label" : "println", "tail" : "(value: Long): CodeWriter", "member" : "scala.tools.scalap.CodeWriter.println", "link" : "scala\/tools\/scalap\/CodeWriter.html#println(value:Long):scala.tools.scalap.CodeWriter", "kind" : "def"}, {"label" : "println", "tail" : "(value: Int): CodeWriter", "member" : "scala.tools.scalap.CodeWriter.println", "link" : "scala\/tools\/scalap\/CodeWriter.html#println(value:Int):scala.tools.scalap.CodeWriter", "kind" : "def"}, {"label" : "println", "tail" : "(value: Char): CodeWriter", "member" : "scala.tools.scalap.CodeWriter.println", "link" : "scala\/tools\/scalap\/CodeWriter.html#println(value:Char):scala.tools.scalap.CodeWriter", "kind" : "def"}, {"label" : "println", "tail" : "(value: Short): CodeWriter", "member" : "scala.tools.scalap.CodeWriter.println", "link" : "scala\/tools\/scalap\/CodeWriter.html#println(value:Short):scala.tools.scalap.CodeWriter", "kind" : "def"}, {"label" : "println", "tail" : "(value: Byte): CodeWriter", "member" : "scala.tools.scalap.CodeWriter.println", "link" : "scala\/tools\/scalap\/CodeWriter.html#println(value:Byte):scala.tools.scalap.CodeWriter", "kind" : "def"}, {"label" : "println", "tail" : "(value: Boolean): CodeWriter", "member" : "scala.tools.scalap.CodeWriter.println", "link" : "scala\/tools\/scalap\/CodeWriter.html#println(value:Boolean):scala.tools.scalap.CodeWriter", "kind" : "def"}, {"label" : "println", "tail" : "(): CodeWriter", "member" : "scala.tools.scalap.CodeWriter.println", "link" : "scala\/tools\/scalap\/CodeWriter.html#println:scala.tools.scalap.CodeWriter", "kind" : "def"}, {"label" : "*", "tail" : "(): Unit", "member" : "scala.tools.scalap.CodeWriter.*", "link" : "scala\/tools\/scalap\/CodeWriter.html#*():Unit", "kind" : "def"}, {"label" : "newspace", "tail" : "(): CodeWriter", "member" : "scala.tools.scalap.CodeWriter.newspace", "link" : "scala\/tools\/scalap\/CodeWriter.html#newspace:scala.tools.scalap.CodeWriter", "kind" : "def"}, {"label" : "newline", "tail" : "(): CodeWriter", "member" : "scala.tools.scalap.CodeWriter.newline", "link" : "scala\/tools\/scalap\/CodeWriter.html#newline:scala.tools.scalap.CodeWriter", "kind" : "def"}, {"label" : "undent", "tail" : "(): CodeWriter", "member" : "scala.tools.scalap.CodeWriter.undent", "link" : "scala\/tools\/scalap\/CodeWriter.html#undent:scala.tools.scalap.CodeWriter", "kind" : "def"}, {"label" : "indent", "tail" : "(): CodeWriter", "member" : "scala.tools.scalap.CodeWriter.indent", "link" : "scala\/tools\/scalap\/CodeWriter.html#indent:scala.tools.scalap.CodeWriter", "kind" : "def"}, {"label" : "setIndentString", "tail" : "(step: String): CodeWriter", "member" : "scala.tools.scalap.CodeWriter.setIndentString", "link" : "scala\/tools\/scalap\/CodeWriter.html#setIndentString(step:String):scala.tools.scalap.CodeWriter", "kind" : "def"}, {"label" : "getIndentString", "tail" : "(): String", "member" : "scala.tools.scalap.CodeWriter.getIndentString", "link" : "scala\/tools\/scalap\/CodeWriter.html#getIndentString:String", "kind" : "def"}, {"label" : "setIndentWidth", "tail" : "(width: Int): CodeWriter", "member" : "scala.tools.scalap.CodeWriter.setIndentWidth", "link" : "scala\/tools\/scalap\/CodeWriter.html#setIndentWidth(width:Int):scala.tools.scalap.CodeWriter", "kind" : "def"}, {"label" : "getIndentWidth", "tail" : "(): Int", "member" : "scala.tools.scalap.CodeWriter.getIndentWidth", "link" : "scala\/tools\/scalap\/CodeWriter.html#getIndentWidth:Int", "kind" : "def"}, {"label" : "setIndentLevel", "tail" : "(level: Int): CodeWriter", "member" : "scala.tools.scalap.CodeWriter.setIndentLevel", "link" : "scala\/tools\/scalap\/CodeWriter.html#setIndentLevel(level:Int):scala.tools.scalap.CodeWriter", "kind" : "def"}, {"label" : "getIndentLevel", "tail" : "(): Int", "member" : "scala.tools.scalap.CodeWriter.getIndentLevel", "link" : "scala\/tools\/scalap\/CodeWriter.html#getIndentLevel:Int", "kind" : "def"}, {"label" : "getWriter", "tail" : "(): Writer", "member" : "scala.tools.scalap.CodeWriter.getWriter", "link" : "scala\/tools\/scalap\/CodeWriter.html#getWriter:java.io.Writer", "kind" : "def"}, {"member" : "scala.tools.scalap.CodeWriter#<init>", "error" : "unsupported entity"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "scala\/tools\/scalap\/CodeWriter.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "scala\/tools\/scalap\/CodeWriter.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "scala\/tools\/scalap\/CodeWriter.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "scala\/tools\/scalap\/CodeWriter.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "scala\/tools\/scalap\/CodeWriter.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "scala\/tools\/scalap\/CodeWriter.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "scala\/tools\/scalap\/CodeWriter.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "scala\/tools\/scalap\/CodeWriter.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "scala\/tools\/scalap\/CodeWriter.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "scala\/tools\/scalap\/CodeWriter.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "scala\/tools\/scalap\/CodeWriter.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "scala\/tools\/scalap\/CodeWriter.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "scala\/tools\/scalap\/CodeWriter.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "scala\/tools\/scalap\/CodeWriter.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "scala\/tools\/scalap\/CodeWriter.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "scala\/tools\/scalap\/CodeWriter.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "scala\/tools\/scalap\/CodeWriter.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "scala\/tools\/scalap\/CodeWriter.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "scala\/tools\/scalap\/CodeWriter.html", "kind" : "class"}, {"name" : "scala.tools.scalap.Decode", "shortDescription" : "Temporary decoder.", "object" : "scala\/tools\/scalap\/Decode$.html", "members_object" : [{"label" : "scalaSigAnnotationBytes", "tail" : "(name: String, classLoader: ScalaClassLoader): Option[Array[Byte]]", "member" : "scala.tools.scalap.Decode.scalaSigAnnotationBytes", "link" : "scala\/tools\/scalap\/Decode$.html#scalaSigAnnotationBytes(name:String,classLoader:scala.reflect.internal.util.ScalaClassLoader):Option[Array[Byte]]", "kind" : "def"}, {"label" : "scalaSigAnnotationBytes", "tail" : "(name: String): Option[Array[Byte]]", "member" : "scala.tools.scalap.Decode.scalaSigAnnotationBytes", "link" : "scala\/tools\/scalap\/Decode$.html#scalaSigAnnotationBytes(name:String):Option[Array[Byte]]", "kind" : "def"}, {"label" : "scalaSigBytes", "tail" : "(name: String, classLoader: ScalaClassLoader): Option[Array[Byte]]", "member" : "scala.tools.scalap.Decode.scalaSigBytes", "link" : "scala\/tools\/scalap\/Decode$.html#scalaSigBytes(name:String,classLoader:scala.reflect.internal.util.ScalaClassLoader):Option[Array[Byte]]", "kind" : "def"}, {"label" : "scalaSigBytes", "tail" : "(name: String): Option[Array[Byte]]", "member" : "scala.tools.scalap.Decode.scalaSigBytes", "link" : "scala\/tools\/scalap\/Decode$.html#scalaSigBytes(name:String):Option[Array[Byte]]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "scala\/tools\/scalap\/Decode$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "scala\/tools\/scalap\/Decode$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "scala\/tools\/scalap\/Decode$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "scala\/tools\/scalap\/Decode$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "scala\/tools\/scalap\/Decode$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "scala\/tools\/scalap\/Decode$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "scala\/tools\/scalap\/Decode$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "scala\/tools\/scalap\/Decode$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "scala\/tools\/scalap\/Decode$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "scala\/tools\/scalap\/Decode$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "scala\/tools\/scalap\/Decode$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "scala\/tools\/scalap\/Decode$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "scala\/tools\/scalap\/Decode$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "scala\/tools\/scalap\/Decode$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "scala\/tools\/scalap\/Decode$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "scala\/tools\/scalap\/Decode$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "scala\/tools\/scalap\/Decode$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "scala\/tools\/scalap\/Decode$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "scala\/tools\/scalap\/Decode$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "scala.tools.scalap.JavaWriter", "shortDescription" : "", "members_class" : [{"label" : "+", "tail" : "(other: String): String", "member" : "scala.Predef.any2stringadd.+", "link" : "scala\/tools\/scalap\/JavaWriter.html#+(other:String):String", "kind" : "def"}, {"label" : "formatted", "tail" : "(fmtstr: String): String", "member" : "scala.Predef.StringFormat.formatted", "link" : "scala\/tools\/scalap\/JavaWriter.html#formatted(fmtstr:String):String", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: (JavaWriter) => Boolean, msg: => Any): JavaWriter", "member" : "scala.Predef.Ensuring.ensuring", "link" : "scala\/tools\/scalap\/JavaWriter.html#ensuring(cond:A=>Boolean,msg:=>Any):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: (JavaWriter) => Boolean): JavaWriter", "member" : "scala.Predef.Ensuring.ensuring", "link" : "scala\/tools\/scalap\/JavaWriter.html#ensuring(cond:A=>Boolean):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: Boolean, msg: => Any): JavaWriter", "member" : "scala.Predef.Ensuring.ensuring", "link" : "scala\/tools\/scalap\/JavaWriter.html#ensuring(cond:Boolean,msg:=>Any):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: Boolean): JavaWriter", "member" : "scala.Predef.Ensuring.ensuring", "link" : "scala\/tools\/scalap\/JavaWriter.html#ensuring(cond:Boolean):A", "kind" : "def"}, {"label" : "→", "tail" : "(y: B): (JavaWriter, B)", "member" : "scala.Predef.ArrowAssoc.→", "link" : "scala\/tools\/scalap\/JavaWriter.html#→[B](y:B):(A,B)", "kind" : "def"}, {"label" : "->", "tail" : "(y: B): (JavaWriter, B)", "member" : "scala.Predef.ArrowAssoc.->", "link" : "scala\/tools\/scalap\/JavaWriter.html#->[B](y:B):(A,B)", "kind" : "def"}, {"label" : "printClass", "tail" : "(): Unit", "member" : "scala.tools.scalap.JavaWriter.printClass", "link" : "scala\/tools\/scalap\/JavaWriter.html#printClass():Unit", "kind" : "def"}, {"label" : "printClassHeader", "tail" : "(): Unit", "member" : "scala.tools.scalap.JavaWriter.printClassHeader", "link" : "scala\/tools\/scalap\/JavaWriter.html#printClassHeader():Unit", "kind" : "def"}, {"label" : "printMethod", "tail" : "(flags: Int, name: Int, tpe: Int, attribs: List[Attribute]): Unit", "member" : "scala.tools.scalap.JavaWriter.printMethod", "link" : "scala\/tools\/scalap\/JavaWriter.html#printMethod(flags:Int,name:Int,tpe:Int,attribs:List[JavaWriter.this.cf.Attribute]):Unit", "kind" : "def"}, {"label" : "printField", "tail" : "(flags: Int, name: Int, tpe: Int, attribs: List[Attribute]): Unit", "member" : "scala.tools.scalap.JavaWriter.printField", "link" : "scala\/tools\/scalap\/JavaWriter.html#printField(flags:Int,name:Int,tpe:Int,attribs:List[JavaWriter.this.cf.Attribute]):Unit", "kind" : "def"}, {"label" : "isConstr", "tail" : "(name: String): Boolean", "member" : "scala.tools.scalap.JavaWriter.isConstr", "link" : "scala\/tools\/scalap\/JavaWriter.html#isConstr(name:String):Boolean", "kind" : "def"}, {"label" : "isInterface", "tail" : "(flags: Int): Boolean", "member" : "scala.tools.scalap.JavaWriter.isInterface", "link" : "scala\/tools\/scalap\/JavaWriter.html#isInterface(flags:Int):Boolean", "kind" : "def"}, {"label" : "isStatic", "tail" : "(flags: Int): Boolean", "member" : "scala.tools.scalap.JavaWriter.isStatic", "link" : "scala\/tools\/scalap\/JavaWriter.html#isStatic(flags:Int):Boolean", "kind" : "def"}, {"label" : "getType", "tail" : "(n: Int): String", "member" : "scala.tools.scalap.JavaWriter.getType", "link" : "scala\/tools\/scalap\/JavaWriter.html#getType(n:Int):String", "kind" : "def"}, {"label" : "getPackage", "tail" : "(n: Int): String", "member" : "scala.tools.scalap.JavaWriter.getPackage", "link" : "scala\/tools\/scalap\/JavaWriter.html#getPackage(n:Int):String", "kind" : "def"}, {"label" : "getSimpleClassName", "tail" : "(n: Int): String", "member" : "scala.tools.scalap.JavaWriter.getSimpleClassName", "link" : "scala\/tools\/scalap\/JavaWriter.html#getSimpleClassName(n:Int):String", "kind" : "def"}, {"label" : "getClassName", "tail" : "(n: Int): String", "member" : "scala.tools.scalap.JavaWriter.getClassName", "link" : "scala\/tools\/scalap\/JavaWriter.html#getClassName(n:Int):String", "kind" : "def"}, {"label" : "getName", "tail" : "(n: Int): String", "member" : "scala.tools.scalap.JavaWriter.getName", "link" : "scala\/tools\/scalap\/JavaWriter.html#getName(n:Int):String", "kind" : "def"}, {"label" : "sigToType0", "tail" : "(str: String, i: Int): (String, Int)", "member" : "scala.tools.scalap.JavaWriter.sigToType0", "link" : "scala\/tools\/scalap\/JavaWriter.html#sigToType0(str:String,i:Int):(String,Int)", "kind" : "def"}, {"label" : "sigToType", "tail" : "(str: String, i: Int): (String, Int)", "member" : "scala.tools.scalap.JavaWriter.sigToType", "link" : "scala\/tools\/scalap\/JavaWriter.html#sigToType(str:String,i:Int):(String,Int)", "kind" : "def"}, {"label" : "sigToType", "tail" : "(str: String): String", "member" : "scala.tools.scalap.JavaWriter.sigToType", "link" : "scala\/tools\/scalap\/JavaWriter.html#sigToType(str:String):String", "kind" : "def"}, {"label" : "nameToPackage", "tail" : "(str: String): String", "member" : "scala.tools.scalap.JavaWriter.nameToPackage", "link" : "scala\/tools\/scalap\/JavaWriter.html#nameToPackage(str:String):String", "kind" : "def"}, {"label" : "nameToSimpleClass", "tail" : "(str: String): String", "member" : "scala.tools.scalap.JavaWriter.nameToSimpleClass", "link" : "scala\/tools\/scalap\/JavaWriter.html#nameToSimpleClass(str:String):String", "kind" : "def"}, {"label" : "nameToClass0", "tail" : "(str: String): String", "member" : "scala.tools.scalap.JavaWriter.nameToClass0", "link" : "scala\/tools\/scalap\/JavaWriter.html#nameToClass0(str:String):String", "kind" : "def"}, {"label" : "nameToClass", "tail" : "(str: String): String", "member" : "scala.tools.scalap.JavaWriter.nameToClass", "link" : "scala\/tools\/scalap\/JavaWriter.html#nameToClass(str:String):String", "kind" : "def"}, {"label" : "flagsToStr", "tail" : "(clazz: Boolean, flags: Int): String", "member" : "scala.tools.scalap.JavaWriter.flagsToStr", "link" : "scala\/tools\/scalap\/JavaWriter.html#flagsToStr(clazz:Boolean,flags:Int):String", "kind" : "def"}, {"label" : "cf", "tail" : ": Classfile", "member" : "scala.tools.scalap.JavaWriter.cf", "link" : "scala\/tools\/scalap\/JavaWriter.html#cf:scala.tools.scalap.Classfile", "kind" : "val"}, {"member" : "scala.tools.scalap.JavaWriter#<init>", "error" : "unsupported entity"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.tools.scalap.CodeWriter.toString", "link" : "scala\/tools\/scalap\/JavaWriter.html#toString():String", "kind" : "def"}, {"label" : "print", "tail" : "(value: String): CodeWriter", "member" : "scala.tools.scalap.CodeWriter.print", "link" : "scala\/tools\/scalap\/JavaWriter.html#print(value:String):scala.tools.scalap.CodeWriter", "kind" : "def"}, {"label" : "print", "tail" : "(value: Double): CodeWriter", "member" : "scala.tools.scalap.CodeWriter.print", "link" : "scala\/tools\/scalap\/JavaWriter.html#print(value:Double):scala.tools.scalap.CodeWriter", "kind" : "def"}, {"label" : "print", "tail" : "(value: Float): CodeWriter", "member" : "scala.tools.scalap.CodeWriter.print", "link" : "scala\/tools\/scalap\/JavaWriter.html#print(value:Float):scala.tools.scalap.CodeWriter", "kind" : "def"}, {"label" : "print", "tail" : "(value: Long): CodeWriter", "member" : "scala.tools.scalap.CodeWriter.print", "link" : "scala\/tools\/scalap\/JavaWriter.html#print(value:Long):scala.tools.scalap.CodeWriter", "kind" : "def"}, {"label" : "print", "tail" : "(value: Int): CodeWriter", "member" : "scala.tools.scalap.CodeWriter.print", "link" : "scala\/tools\/scalap\/JavaWriter.html#print(value:Int):scala.tools.scalap.CodeWriter", "kind" : "def"}, {"label" : "print", "tail" : "(value: Char): CodeWriter", "member" : "scala.tools.scalap.CodeWriter.print", "link" : "scala\/tools\/scalap\/JavaWriter.html#print(value:Char):scala.tools.scalap.CodeWriter", "kind" : "def"}, {"label" : "print", "tail" : "(value: Short): CodeWriter", "member" : "scala.tools.scalap.CodeWriter.print", "link" : "scala\/tools\/scalap\/JavaWriter.html#print(value:Short):scala.tools.scalap.CodeWriter", "kind" : "def"}, {"label" : "print", "tail" : "(value: Byte): CodeWriter", "member" : "scala.tools.scalap.CodeWriter.print", "link" : "scala\/tools\/scalap\/JavaWriter.html#print(value:Byte):scala.tools.scalap.CodeWriter", "kind" : "def"}, {"label" : "print", "tail" : "(value: Boolean): CodeWriter", "member" : "scala.tools.scalap.CodeWriter.print", "link" : "scala\/tools\/scalap\/JavaWriter.html#print(value:Boolean):scala.tools.scalap.CodeWriter", "kind" : "def"}, {"label" : "println", "tail" : "(value: String): CodeWriter", "member" : "scala.tools.scalap.CodeWriter.println", "link" : "scala\/tools\/scalap\/JavaWriter.html#println(value:String):scala.tools.scalap.CodeWriter", "kind" : "def"}, {"label" : "println", "tail" : "(value: Double): CodeWriter", "member" : "scala.tools.scalap.CodeWriter.println", "link" : "scala\/tools\/scalap\/JavaWriter.html#println(value:Double):scala.tools.scalap.CodeWriter", "kind" : "def"}, {"label" : "println", "tail" : "(value: Float): CodeWriter", "member" : "scala.tools.scalap.CodeWriter.println", "link" : "scala\/tools\/scalap\/JavaWriter.html#println(value:Float):scala.tools.scalap.CodeWriter", "kind" : "def"}, {"label" : "println", "tail" : "(value: Long): CodeWriter", "member" : "scala.tools.scalap.CodeWriter.println", "link" : "scala\/tools\/scalap\/JavaWriter.html#println(value:Long):scala.tools.scalap.CodeWriter", "kind" : "def"}, {"label" : "println", "tail" : "(value: Int): CodeWriter", "member" : "scala.tools.scalap.CodeWriter.println", "link" : "scala\/tools\/scalap\/JavaWriter.html#println(value:Int):scala.tools.scalap.CodeWriter", "kind" : "def"}, {"label" : "println", "tail" : "(value: Char): CodeWriter", "member" : "scala.tools.scalap.CodeWriter.println", "link" : "scala\/tools\/scalap\/JavaWriter.html#println(value:Char):scala.tools.scalap.CodeWriter", "kind" : "def"}, {"label" : "println", "tail" : "(value: Short): CodeWriter", "member" : "scala.tools.scalap.CodeWriter.println", "link" : "scala\/tools\/scalap\/JavaWriter.html#println(value:Short):scala.tools.scalap.CodeWriter", "kind" : "def"}, {"label" : "println", "tail" : "(value: Byte): CodeWriter", "member" : "scala.tools.scalap.CodeWriter.println", "link" : "scala\/tools\/scalap\/JavaWriter.html#println(value:Byte):scala.tools.scalap.CodeWriter", "kind" : "def"}, {"label" : "println", "tail" : "(value: Boolean): CodeWriter", "member" : "scala.tools.scalap.CodeWriter.println", "link" : "scala\/tools\/scalap\/JavaWriter.html#println(value:Boolean):scala.tools.scalap.CodeWriter", "kind" : "def"}, {"label" : "println", "tail" : "(): CodeWriter", "member" : "scala.tools.scalap.CodeWriter.println", "link" : "scala\/tools\/scalap\/JavaWriter.html#println:scala.tools.scalap.CodeWriter", "kind" : "def"}, {"label" : "*", "tail" : "(): Unit", "member" : "scala.tools.scalap.CodeWriter.*", "link" : "scala\/tools\/scalap\/JavaWriter.html#*():Unit", "kind" : "def"}, {"label" : "newspace", "tail" : "(): CodeWriter", "member" : "scala.tools.scalap.CodeWriter.newspace", "link" : "scala\/tools\/scalap\/JavaWriter.html#newspace:scala.tools.scalap.CodeWriter", "kind" : "def"}, {"label" : "newline", "tail" : "(): CodeWriter", "member" : "scala.tools.scalap.CodeWriter.newline", "link" : "scala\/tools\/scalap\/JavaWriter.html#newline:scala.tools.scalap.CodeWriter", "kind" : "def"}, {"label" : "undent", "tail" : "(): CodeWriter", "member" : "scala.tools.scalap.CodeWriter.undent", "link" : "scala\/tools\/scalap\/JavaWriter.html#undent:scala.tools.scalap.CodeWriter", "kind" : "def"}, {"label" : "indent", "tail" : "(): CodeWriter", "member" : "scala.tools.scalap.CodeWriter.indent", "link" : "scala\/tools\/scalap\/JavaWriter.html#indent:scala.tools.scalap.CodeWriter", "kind" : "def"}, {"label" : "setIndentString", "tail" : "(step: String): CodeWriter", "member" : "scala.tools.scalap.CodeWriter.setIndentString", "link" : "scala\/tools\/scalap\/JavaWriter.html#setIndentString(step:String):scala.tools.scalap.CodeWriter", "kind" : "def"}, {"label" : "getIndentString", "tail" : "(): String", "member" : "scala.tools.scalap.CodeWriter.getIndentString", "link" : "scala\/tools\/scalap\/JavaWriter.html#getIndentString:String", "kind" : "def"}, {"label" : "setIndentWidth", "tail" : "(width: Int): CodeWriter", "member" : "scala.tools.scalap.CodeWriter.setIndentWidth", "link" : "scala\/tools\/scalap\/JavaWriter.html#setIndentWidth(width:Int):scala.tools.scalap.CodeWriter", "kind" : "def"}, {"label" : "getIndentWidth", "tail" : "(): Int", "member" : "scala.tools.scalap.CodeWriter.getIndentWidth", "link" : "scala\/tools\/scalap\/JavaWriter.html#getIndentWidth:Int", "kind" : "def"}, {"label" : "setIndentLevel", "tail" : "(level: Int): CodeWriter", "member" : "scala.tools.scalap.CodeWriter.setIndentLevel", "link" : "scala\/tools\/scalap\/JavaWriter.html#setIndentLevel(level:Int):scala.tools.scalap.CodeWriter", "kind" : "def"}, {"label" : "getIndentLevel", "tail" : "(): Int", "member" : "scala.tools.scalap.CodeWriter.getIndentLevel", "link" : "scala\/tools\/scalap\/JavaWriter.html#getIndentLevel:Int", "kind" : "def"}, {"label" : "getWriter", "tail" : "(): Writer", "member" : "scala.tools.scalap.CodeWriter.getWriter", "link" : "scala\/tools\/scalap\/JavaWriter.html#getWriter:java.io.Writer", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "scala\/tools\/scalap\/JavaWriter.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "scala\/tools\/scalap\/JavaWriter.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "scala\/tools\/scalap\/JavaWriter.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "scala\/tools\/scalap\/JavaWriter.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "scala\/tools\/scalap\/JavaWriter.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "scala\/tools\/scalap\/JavaWriter.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "scala\/tools\/scalap\/JavaWriter.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "scala\/tools\/scalap\/JavaWriter.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "scala\/tools\/scalap\/JavaWriter.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "scala\/tools\/scalap\/JavaWriter.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "scala\/tools\/scalap\/JavaWriter.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "scala\/tools\/scalap\/JavaWriter.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "scala\/tools\/scalap\/JavaWriter.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "scala\/tools\/scalap\/JavaWriter.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "scala\/tools\/scalap\/JavaWriter.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "scala\/tools\/scalap\/JavaWriter.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "scala\/tools\/scalap\/JavaWriter.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "scala\/tools\/scalap\/JavaWriter.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "scala\/tools\/scalap\/JavaWriter.html", "kind" : "class"}, {"name" : "scala.tools.scalap.Main", "shortDescription" : "The main object used to execute scalap on the command-line.", "object" : "scala\/tools\/scalap\/Main$.html", "members_class" : [{"label" : "+", "tail" : "(other: String): String", "member" : "scala.Predef.any2stringadd.+", "link" : "scala\/tools\/scalap\/Main.html#+(other:String):String", "kind" : "def"}, {"label" : "formatted", "tail" : "(fmtstr: String): String", "member" : "scala.Predef.StringFormat.formatted", "link" : "scala\/tools\/scalap\/Main.html#formatted(fmtstr:String):String", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: (Main) => Boolean, msg: => Any): Main", "member" : "scala.Predef.Ensuring.ensuring", "link" : "scala\/tools\/scalap\/Main.html#ensuring(cond:A=>Boolean,msg:=>Any):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: (Main) => Boolean): Main", "member" : "scala.Predef.Ensuring.ensuring", "link" : "scala\/tools\/scalap\/Main.html#ensuring(cond:A=>Boolean):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: Boolean, msg: => Any): Main", "member" : "scala.Predef.Ensuring.ensuring", "link" : "scala\/tools\/scalap\/Main.html#ensuring(cond:Boolean,msg:=>Any):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: Boolean): Main", "member" : "scala.Predef.Ensuring.ensuring", "link" : "scala\/tools\/scalap\/Main.html#ensuring(cond:Boolean):A", "kind" : "def"}, {"label" : "→", "tail" : "(y: B): (Main, B)", "member" : "scala.Predef.ArrowAssoc.→", "link" : "scala\/tools\/scalap\/Main.html#→[B](y:B):(A,B)", "kind" : "def"}, {"label" : "->", "tail" : "(y: B): (Main, B)", "member" : "scala.Predef.ArrowAssoc.->", "link" : "scala\/tools\/scalap\/Main.html#->[B](y:B):(A,B)", "kind" : "def"}, {"label" : "process", "tail" : "(args: Arguments, path: ClassPath)(classname: String): Unit", "member" : "scala.tools.scalap.Main.process", "link" : "scala\/tools\/scalap\/Main.html#process(args:scala.tools.scalap.Arguments,path:scala.tools.nsc.util.ClassPath)(classname:String):Unit", "kind" : "def"}, {"label" : "decompileScala", "tail" : "(bytes: Array[Byte], isPackageObject: Boolean): String", "member" : "scala.tools.scalap.Main.decompileScala", "link" : "scala\/tools\/scalap\/Main.html#decompileScala(bytes:Array[Byte],isPackageObject:Boolean):String", "kind" : "def"}, {"label" : "parseScalaSignature", "tail" : "(scalaSig: ScalaSig, isPackageObject: Boolean): String", "member" : "scala.tools.scalap.Main.parseScalaSignature", "link" : "scala\/tools\/scalap\/Main.html#parseScalaSignature(scalaSig:scala.tools.scalap.scalax.rules.scalasig.ScalaSig,isPackageObject:Boolean):String", "kind" : "def"}, {"label" : "isPackageObjectFile", "tail" : "(s: String): Boolean", "member" : "scala.tools.scalap.Main.isPackageObjectFile", "link" : "scala\/tools\/scalap\/Main.html#isPackageObjectFile(s:String):Boolean", "kind" : "def"}, {"label" : "processJavaClassFile", "tail" : "(clazz: Classfile): Unit", "member" : "scala.tools.scalap.Main.processJavaClassFile", "link" : "scala\/tools\/scalap\/Main.html#processJavaClassFile(clazz:scala.tools.scalap.Classfile):Unit", "kind" : "def"}, {"label" : "isScalaFile", "tail" : "(bytes: Array[Byte]): Boolean", "member" : "scala.tools.scalap.Main.isScalaFile", "link" : "scala\/tools\/scalap\/Main.html#isScalaFile(bytes:Array[Byte]):Boolean", "kind" : "def"}, {"label" : "printPrivates", "tail" : ": Boolean", "member" : "scala.tools.scalap.Main.printPrivates", "link" : "scala\/tools\/scalap\/Main.html#printPrivates:Boolean", "kind" : "var"}, {"label" : "verbose", "tail" : ": Boolean", "member" : "scala.tools.scalap.Main.verbose", "link" : "scala\/tools\/scalap\/Main.html#verbose:Boolean", "kind" : "var"}, {"label" : "versionMsg", "tail" : ": String", "member" : "scala.tools.scalap.Main.versionMsg", "link" : "scala\/tools\/scalap\/Main.html#versionMsg:String", "kind" : "val"}, {"label" : "BYTES_VALUE", "tail" : ": String", "member" : "scala.tools.scalap.Main.BYTES_VALUE", "link" : "scala\/tools\/scalap\/Main.html#BYTES_VALUE:String", "kind" : "val"}, {"label" : "SCALA_LONG_SIG_ANNOTATION", "tail" : ": String", "member" : "scala.tools.scalap.Main.SCALA_LONG_SIG_ANNOTATION", "link" : "scala\/tools\/scalap\/Main.html#SCALA_LONG_SIG_ANNOTATION:String", "kind" : "val"}, {"label" : "SCALA_SIG_ANNOTATION", "tail" : ": String", "member" : "scala.tools.scalap.Main.SCALA_SIG_ANNOTATION", "link" : "scala\/tools\/scalap\/Main.html#SCALA_SIG_ANNOTATION:String", "kind" : "val"}, {"label" : "SCALA_SIG", "tail" : ": String", "member" : "scala.tools.scalap.Main.SCALA_SIG", "link" : "scala\/tools\/scalap\/Main.html#SCALA_SIG:String", "kind" : "val"}, {"member" : "scala.tools.scalap.Main#<init>", "error" : "unsupported entity"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "scala\/tools\/scalap\/Main.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "scala\/tools\/scalap\/Main.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "scala\/tools\/scalap\/Main.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "scala\/tools\/scalap\/Main.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "scala\/tools\/scalap\/Main.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "scala\/tools\/scalap\/Main.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "scala\/tools\/scalap\/Main.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "scala\/tools\/scalap\/Main.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "scala\/tools\/scalap\/Main.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "scala\/tools\/scalap\/Main.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "scala\/tools\/scalap\/Main.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "scala\/tools\/scalap\/Main.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "scala\/tools\/scalap\/Main.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "scala\/tools\/scalap\/Main.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "scala\/tools\/scalap\/Main.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "scala\/tools\/scalap\/Main.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "scala\/tools\/scalap\/Main.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "scala\/tools\/scalap\/Main.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "scala\/tools\/scalap\/Main.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "members_object" : [{"label" : "main", "tail" : "(args: Array[String]): Unit", "member" : "scala.tools.scalap.Main.main", "link" : "scala\/tools\/scalap\/Main$.html#main(args:Array[String]):Unit", "kind" : "def"}, {"label" : "usage", "tail" : "(): Unit", "member" : "scala.tools.scalap.Main.usage", "link" : "scala\/tools\/scalap\/Main$.html#usage():Unit", "kind" : "def"}, {"label" : "process", "tail" : "(args: Arguments, path: ClassPath)(classname: String): Unit", "member" : "scala.tools.scalap.Main.process", "link" : "scala\/tools\/scalap\/Main$.html#process(args:scala.tools.scalap.Arguments,path:scala.tools.nsc.util.ClassPath)(classname:String):Unit", "kind" : "def"}, {"label" : "decompileScala", "tail" : "(bytes: Array[Byte], isPackageObject: Boolean): String", "member" : "scala.tools.scalap.Main.decompileScala", "link" : "scala\/tools\/scalap\/Main$.html#decompileScala(bytes:Array[Byte],isPackageObject:Boolean):String", "kind" : "def"}, {"label" : "parseScalaSignature", "tail" : "(scalaSig: ScalaSig, isPackageObject: Boolean): String", "member" : "scala.tools.scalap.Main.parseScalaSignature", "link" : "scala\/tools\/scalap\/Main$.html#parseScalaSignature(scalaSig:scala.tools.scalap.scalax.rules.scalasig.ScalaSig,isPackageObject:Boolean):String", "kind" : "def"}, {"label" : "isPackageObjectFile", "tail" : "(s: String): Boolean", "member" : "scala.tools.scalap.Main.isPackageObjectFile", "link" : "scala\/tools\/scalap\/Main$.html#isPackageObjectFile(s:String):Boolean", "kind" : "def"}, {"label" : "processJavaClassFile", "tail" : "(clazz: Classfile): Unit", "member" : "scala.tools.scalap.Main.processJavaClassFile", "link" : "scala\/tools\/scalap\/Main$.html#processJavaClassFile(clazz:scala.tools.scalap.Classfile):Unit", "kind" : "def"}, {"label" : "isScalaFile", "tail" : "(bytes: Array[Byte]): Boolean", "member" : "scala.tools.scalap.Main.isScalaFile", "link" : "scala\/tools\/scalap\/Main$.html#isScalaFile(bytes:Array[Byte]):Boolean", "kind" : "def"}, {"label" : "printPrivates", "tail" : ": Boolean", "member" : "scala.tools.scalap.Main.printPrivates", "link" : "scala\/tools\/scalap\/Main$.html#printPrivates:Boolean", "kind" : "var"}, {"label" : "verbose", "tail" : ": Boolean", "member" : "scala.tools.scalap.Main.verbose", "link" : "scala\/tools\/scalap\/Main$.html#verbose:Boolean", "kind" : "var"}, {"label" : "versionMsg", "tail" : ": String", "member" : "scala.tools.scalap.Main.versionMsg", "link" : "scala\/tools\/scalap\/Main$.html#versionMsg:String", "kind" : "val"}, {"label" : "BYTES_VALUE", "tail" : ": String", "member" : "scala.tools.scalap.Main.BYTES_VALUE", "link" : "scala\/tools\/scalap\/Main$.html#BYTES_VALUE:String", "kind" : "val"}, {"label" : "SCALA_LONG_SIG_ANNOTATION", "tail" : ": String", "member" : "scala.tools.scalap.Main.SCALA_LONG_SIG_ANNOTATION", "link" : "scala\/tools\/scalap\/Main$.html#SCALA_LONG_SIG_ANNOTATION:String", "kind" : "val"}, {"label" : "SCALA_SIG_ANNOTATION", "tail" : ": String", "member" : "scala.tools.scalap.Main.SCALA_SIG_ANNOTATION", "link" : "scala\/tools\/scalap\/Main$.html#SCALA_SIG_ANNOTATION:String", "kind" : "val"}, {"label" : "SCALA_SIG", "tail" : ": String", "member" : "scala.tools.scalap.Main.SCALA_SIG", "link" : "scala\/tools\/scalap\/Main$.html#SCALA_SIG:String", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "scala\/tools\/scalap\/Main$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "scala\/tools\/scalap\/Main$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "scala\/tools\/scalap\/Main$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "scala\/tools\/scalap\/Main$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "scala\/tools\/scalap\/Main$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "scala\/tools\/scalap\/Main$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "scala\/tools\/scalap\/Main$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "scala\/tools\/scalap\/Main$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "scala\/tools\/scalap\/Main$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "scala\/tools\/scalap\/Main$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "scala\/tools\/scalap\/Main$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "scala\/tools\/scalap\/Main$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "scala\/tools\/scalap\/Main$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "scala\/tools\/scalap\/Main$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "scala\/tools\/scalap\/Main$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "scala\/tools\/scalap\/Main$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "scala\/tools\/scalap\/Main$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "scala\/tools\/scalap\/Main$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "scala\/tools\/scalap\/Main$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "scala\/tools\/scalap\/Main.html", "kind" : "class"}, {"name" : "scala.tools.scalap.MetaParser", "shortDescription" : "a parser class for parsing meta type information in classfiles generated by pico.", "members_class" : [{"label" : "+", "tail" : "(other: String): String", "member" : "scala.Predef.any2stringadd.+", "link" : "scala\/tools\/scalap\/MetaParser.html#+(other:String):String", "kind" : "def"}, {"label" : "formatted", "tail" : "(fmtstr: String): String", "member" : "scala.Predef.StringFormat.formatted", "link" : "scala\/tools\/scalap\/MetaParser.html#formatted(fmtstr:String):String", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: (MetaParser) => Boolean, msg: => Any): MetaParser", "member" : "scala.Predef.Ensuring.ensuring", "link" : "scala\/tools\/scalap\/MetaParser.html#ensuring(cond:A=>Boolean,msg:=>Any):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: (MetaParser) => Boolean): MetaParser", "member" : "scala.Predef.Ensuring.ensuring", "link" : "scala\/tools\/scalap\/MetaParser.html#ensuring(cond:A=>Boolean):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: Boolean, msg: => Any): MetaParser", "member" : "scala.Predef.Ensuring.ensuring", "link" : "scala\/tools\/scalap\/MetaParser.html#ensuring(cond:Boolean,msg:=>Any):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: Boolean): MetaParser", "member" : "scala.Predef.Ensuring.ensuring", "link" : "scala\/tools\/scalap\/MetaParser.html#ensuring(cond:Boolean):A", "kind" : "def"}, {"label" : "→", "tail" : "(y: B): (MetaParser, B)", "member" : "scala.Predef.ArrowAssoc.→", "link" : "scala\/tools\/scalap\/MetaParser.html#→[B](y:B):(A,B)", "kind" : "def"}, {"label" : "->", "tail" : "(y: B): (MetaParser, B)", "member" : "scala.Predef.ArrowAssoc.->", "link" : "scala\/tools\/scalap\/MetaParser.html#->[B](y:B):(A,B)", "kind" : "def"}, {"label" : "parseConstrField", "tail" : "(): String", "member" : "scala.tools.scalap.MetaParser.parseConstrField", "link" : "scala\/tools\/scalap\/MetaParser.html#parseConstrField:String", "kind" : "def"}, {"label" : "parseMetaField", "tail" : "(): String", "member" : "scala.tools.scalap.MetaParser.parseMetaField", "link" : "scala\/tools\/scalap\/MetaParser.html#parseMetaField:String", "kind" : "def"}, {"label" : "parseMetaMethod", "tail" : "(): String", "member" : "scala.tools.scalap.MetaParser.parseMetaMethod", "link" : "scala\/tools\/scalap\/MetaParser.html#parseMetaMethod:String", "kind" : "def"}, {"label" : "parseMetaClass", "tail" : "(): String", "member" : "scala.tools.scalap.MetaParser.parseMetaClass", "link" : "scala\/tools\/scalap\/MetaParser.html#parseMetaClass:String", "kind" : "def"}, {"label" : "parse", "tail" : "(): Option[String]", "member" : "scala.tools.scalap.MetaParser.parse", "link" : "scala\/tools\/scalap\/MetaParser.html#parse:Option[String]", "kind" : "def"}, {"label" : "parseType", "tail" : "(): Unit", "member" : "scala.tools.scalap.MetaParser.parseType", "link" : "scala\/tools\/scalap\/MetaParser.html#parseType():Unit", "kind" : "def"}, {"label" : "res", "tail" : ": StringBuffer", "member" : "scala.tools.scalap.MetaParser.res", "link" : "scala\/tools\/scalap\/MetaParser.html#res:StringBuffer", "kind" : "val"}, {"label" : "token", "tail" : ": String", "member" : "scala.tools.scalap.MetaParser.token", "link" : "scala\/tools\/scalap\/MetaParser.html#token:String", "kind" : "var"}, {"label" : "scanner", "tail" : ": StringTokenizer", "member" : "scala.tools.scalap.MetaParser.scanner", "link" : "scala\/tools\/scalap\/MetaParser.html#scanner:java.util.StringTokenizer", "kind" : "val"}, {"member" : "scala.tools.scalap.MetaParser#<init>", "error" : "unsupported entity"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "scala\/tools\/scalap\/MetaParser.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "scala\/tools\/scalap\/MetaParser.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "scala\/tools\/scalap\/MetaParser.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "scala\/tools\/scalap\/MetaParser.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "scala\/tools\/scalap\/MetaParser.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "scala\/tools\/scalap\/MetaParser.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "scala\/tools\/scalap\/MetaParser.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "scala\/tools\/scalap\/MetaParser.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "scala\/tools\/scalap\/MetaParser.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "scala\/tools\/scalap\/MetaParser.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "scala\/tools\/scalap\/MetaParser.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "scala\/tools\/scalap\/MetaParser.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "scala\/tools\/scalap\/MetaParser.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "scala\/tools\/scalap\/MetaParser.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "scala\/tools\/scalap\/MetaParser.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "scala\/tools\/scalap\/MetaParser.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "scala\/tools\/scalap\/MetaParser.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "scala\/tools\/scalap\/MetaParser.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "scala\/tools\/scalap\/MetaParser.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "scala\/tools\/scalap\/MetaParser.html", "kind" : "class"}, {"name" : "scala.tools.scalap.Properties", "shortDescription" : "Loads decoder.properties from the jar.", "object" : "scala\/tools\/scalap\/Properties$.html", "members_object" : [{"label" : "pickJarBasedOn", "tail" : "(): Class[Classfile]", "member" : "scala.tools.scalap.Properties.pickJarBasedOn", "link" : "scala\/tools\/scalap\/Properties$.html#pickJarBasedOn:Class[scala.tools.scalap.Classfile]", "kind" : "def"}, {"label" : "propCategory", "tail" : "(): String", "member" : "scala.tools.scalap.Properties.propCategory", "link" : "scala\/tools\/scalap\/Properties$.html#propCategory:String", "kind" : "def"}, {"label" : "main", "tail" : "(args: Array[String]): Unit", "member" : "scala.util.PropertiesTrait.main", "link" : "scala\/tools\/scalap\/Properties$.html#main(args:Array[String]):Unit", "kind" : "def"}, {"label" : "isJavaAtLeast", "tail" : "(version: Int): Boolean", "member" : "scala.util.PropertiesTrait.isJavaAtLeast", "link" : "scala\/tools\/scalap\/Properties$.html#isJavaAtLeast(version:Int):Boolean", "kind" : "def"}, {"label" : "isJavaAtLeast", "tail" : "(version: String): Boolean", "member" : "scala.util.PropertiesTrait.isJavaAtLeast", "link" : "scala\/tools\/scalap\/Properties$.html#isJavaAtLeast(version:String):Boolean", "kind" : "def"}, {"label" : "scalacCmd", "tail" : "(): String", "member" : "scala.util.PropertiesTrait.scalacCmd", "link" : "scala\/tools\/scalap\/Properties$.html#scalacCmd:String", "kind" : "def"}, {"label" : "scalaCmd", "tail" : "(): String", "member" : "scala.util.PropertiesTrait.scalaCmd", "link" : "scala\/tools\/scalap\/Properties$.html#scalaCmd:String", "kind" : "def"}, {"label" : "versionMsg", "tail" : "(): String", "member" : "scala.util.PropertiesTrait.versionMsg", "link" : "scala\/tools\/scalap\/Properties$.html#versionMsg:String", "kind" : "def"}, {"label" : "jdkHome", "tail" : "(): String", "member" : "scala.util.PropertiesTrait.jdkHome", "link" : "scala\/tools\/scalap\/Properties$.html#jdkHome:String", "kind" : "def"}, {"label" : "isLinux", "tail" : "(): Boolean", "member" : "scala.util.PropertiesTrait.isLinux", "link" : "scala\/tools\/scalap\/Properties$.html#isLinux:Boolean", "kind" : "def"}, {"label" : "isMac", "tail" : "(): Boolean", "member" : "scala.util.PropertiesTrait.isMac", "link" : "scala\/tools\/scalap\/Properties$.html#isMac:Boolean", "kind" : "def"}, {"label" : "isWin", "tail" : "(): Boolean", "member" : "scala.util.PropertiesTrait.isWin", "link" : "scala\/tools\/scalap\/Properties$.html#isWin:Boolean", "kind" : "def"}, {"label" : "userName", "tail" : "(): String", "member" : "scala.util.PropertiesTrait.userName", "link" : "scala\/tools\/scalap\/Properties$.html#userName:String", "kind" : "def"}, {"label" : "userHome", "tail" : "(): String", "member" : "scala.util.PropertiesTrait.userHome", "link" : "scala\/tools\/scalap\/Properties$.html#userHome:String", "kind" : "def"}, {"label" : "userDir", "tail" : "(): String", "member" : "scala.util.PropertiesTrait.userDir", "link" : "scala\/tools\/scalap\/Properties$.html#userDir:String", "kind" : "def"}, {"label" : "tmpDir", "tail" : "(): String", "member" : "scala.util.PropertiesTrait.tmpDir", "link" : "scala\/tools\/scalap\/Properties$.html#tmpDir:String", "kind" : "def"}, {"label" : "scalaHome", "tail" : "(): String", "member" : "scala.util.PropertiesTrait.scalaHome", "link" : "scala\/tools\/scalap\/Properties$.html#scalaHome:String", "kind" : "def"}, {"label" : "osName", "tail" : "(): String", "member" : "scala.util.PropertiesTrait.osName", "link" : "scala\/tools\/scalap\/Properties$.html#osName:String", "kind" : "def"}, {"label" : "javaSpecName", "tail" : "(): String", "member" : "scala.util.PropertiesTrait.javaSpecName", "link" : "scala\/tools\/scalap\/Properties$.html#javaSpecName:String", "kind" : "def"}, {"label" : "javaSpecVendor", "tail" : "(): String", "member" : "scala.util.PropertiesTrait.javaSpecVendor", "link" : "scala\/tools\/scalap\/Properties$.html#javaSpecVendor:String", "kind" : "def"}, {"label" : "javaSpecVersion", "tail" : "(): String", "member" : "scala.util.PropertiesTrait.javaSpecVersion", "link" : "scala\/tools\/scalap\/Properties$.html#javaSpecVersion:String", "kind" : "def"}, {"label" : "javaVmVersion", "tail" : "(): String", "member" : "scala.util.PropertiesTrait.javaVmVersion", "link" : "scala\/tools\/scalap\/Properties$.html#javaVmVersion:String", "kind" : "def"}, {"label" : "javaVmVendor", "tail" : "(): String", "member" : "scala.util.PropertiesTrait.javaVmVendor", "link" : "scala\/tools\/scalap\/Properties$.html#javaVmVendor:String", "kind" : "def"}, {"label" : "javaVmName", "tail" : "(): String", "member" : "scala.util.PropertiesTrait.javaVmName", "link" : "scala\/tools\/scalap\/Properties$.html#javaVmName:String", "kind" : "def"}, {"label" : "javaVmInfo", "tail" : "(): String", "member" : "scala.util.PropertiesTrait.javaVmInfo", "link" : "scala\/tools\/scalap\/Properties$.html#javaVmInfo:String", "kind" : "def"}, {"label" : "javaVersion", "tail" : "(): String", "member" : "scala.util.PropertiesTrait.javaVersion", "link" : "scala\/tools\/scalap\/Properties$.html#javaVersion:String", "kind" : "def"}, {"label" : "javaVendor", "tail" : "(): String", "member" : "scala.util.PropertiesTrait.javaVendor", "link" : "scala\/tools\/scalap\/Properties$.html#javaVendor:String", "kind" : "def"}, {"label" : "javaHome", "tail" : "(): String", "member" : "scala.util.PropertiesTrait.javaHome", "link" : "scala\/tools\/scalap\/Properties$.html#javaHome:String", "kind" : "def"}, {"label" : "javaClassPath", "tail" : "(): String", "member" : "scala.util.PropertiesTrait.javaClassPath", "link" : "scala\/tools\/scalap\/Properties$.html#javaClassPath:String", "kind" : "def"}, {"label" : "lineSeparator", "tail" : "(): String", "member" : "scala.util.PropertiesTrait.lineSeparator", "link" : "scala\/tools\/scalap\/Properties$.html#lineSeparator:String", "kind" : "def"}, {"label" : "encodingString", "tail" : "(): String", "member" : "scala.util.PropertiesTrait.encodingString", "link" : "scala\/tools\/scalap\/Properties$.html#encodingString:String", "kind" : "def"}, {"label" : "sourceReader", "tail" : "(): String", "member" : "scala.util.PropertiesTrait.sourceReader", "link" : "scala\/tools\/scalap\/Properties$.html#sourceReader:String", "kind" : "def"}, {"label" : "sourceEncoding", "tail" : "(): String", "member" : "scala.util.PropertiesTrait.sourceEncoding", "link" : "scala\/tools\/scalap\/Properties$.html#sourceEncoding:String", "kind" : "def"}, {"label" : "copyrightString", "tail" : ": String", "member" : "scala.util.PropertiesTrait.copyrightString", "link" : "scala\/tools\/scalap\/Properties$.html#copyrightString:String", "kind" : "val"}, {"label" : "versionString", "tail" : ": String", "member" : "scala.util.PropertiesTrait.versionString", "link" : "scala\/tools\/scalap\/Properties$.html#versionString:String", "kind" : "val"}, {"label" : "versionNumberString", "tail" : "(): String", "member" : "scala.util.PropertiesTrait.versionNumberString", "link" : "scala\/tools\/scalap\/Properties$.html#versionNumberString:String", "kind" : "def"}, {"label" : "developmentVersion", "tail" : ": Option[String]", "member" : "scala.util.PropertiesTrait.developmentVersion", "link" : "scala\/tools\/scalap\/Properties$.html#developmentVersion:Option[String]", "kind" : "val"}, {"label" : "releaseVersion", "tail" : ": Option[String]", "member" : "scala.util.PropertiesTrait.releaseVersion", "link" : "scala\/tools\/scalap\/Properties$.html#releaseVersion:Option[String]", "kind" : "val"}, {"label" : "scalaPropOrNone", "tail" : "(name: String): Option[String]", "member" : "scala.util.PropertiesTrait.scalaPropOrNone", "link" : "scala\/tools\/scalap\/Properties$.html#scalaPropOrNone(name:String):Option[String]", "kind" : "def"}, {"label" : "scalaPropOrEmpty", "tail" : "(name: String): String", "member" : "scala.util.PropertiesTrait.scalaPropOrEmpty", "link" : "scala\/tools\/scalap\/Properties$.html#scalaPropOrEmpty(name:String):String", "kind" : "def"}, {"label" : "scalaPropOrElse", "tail" : "(name: String, alt: => String): String", "member" : "scala.util.PropertiesTrait.scalaPropOrElse", "link" : "scala\/tools\/scalap\/Properties$.html#scalaPropOrElse(name:String,alt:=>String):String", "kind" : "def"}, {"label" : "envOrSome", "tail" : "(name: String, alt: => Option[String]): Option[String]", "member" : "scala.util.PropertiesTrait.envOrSome", "link" : "scala\/tools\/scalap\/Properties$.html#envOrSome(name:String,alt:=>Option[String]):Option[String]", "kind" : "def"}, {"label" : "envOrNone", "tail" : "(name: String): Option[String]", "member" : "scala.util.PropertiesTrait.envOrNone", "link" : "scala\/tools\/scalap\/Properties$.html#envOrNone(name:String):Option[String]", "kind" : "def"}, {"label" : "envOrElse", "tail" : "(name: String, alt: => String): String", "member" : "scala.util.PropertiesTrait.envOrElse", "link" : "scala\/tools\/scalap\/Properties$.html#envOrElse(name:String,alt:=>String):String", "kind" : "def"}, {"label" : "clearProp", "tail" : "(name: String): String", "member" : "scala.util.PropertiesTrait.clearProp", "link" : "scala\/tools\/scalap\/Properties$.html#clearProp(name:String):String", "kind" : "def"}, {"label" : "setProp", "tail" : "(name: String, value: String): String", "member" : "scala.util.PropertiesTrait.setProp", "link" : "scala\/tools\/scalap\/Properties$.html#setProp(name:String,value:String):String", "kind" : "def"}, {"label" : "propOrFalse", "tail" : "(name: String): Boolean", "member" : "scala.util.PropertiesTrait.propOrFalse", "link" : "scala\/tools\/scalap\/Properties$.html#propOrFalse(name:String):Boolean", "kind" : "def"}, {"label" : "propOrNone", "tail" : "(name: String): Option[String]", "member" : "scala.util.PropertiesTrait.propOrNone", "link" : "scala\/tools\/scalap\/Properties$.html#propOrNone(name:String):Option[String]", "kind" : "def"}, {"label" : "propOrNull", "tail" : "(name: String): String", "member" : "scala.util.PropertiesTrait.propOrNull", "link" : "scala\/tools\/scalap\/Properties$.html#propOrNull(name:String):String", "kind" : "def"}, {"label" : "propOrEmpty", "tail" : "(name: String): String", "member" : "scala.util.PropertiesTrait.propOrEmpty", "link" : "scala\/tools\/scalap\/Properties$.html#propOrEmpty(name:String):String", "kind" : "def"}, {"label" : "propOrElse", "tail" : "(name: String, alt: => String): String", "member" : "scala.util.PropertiesTrait.propOrElse", "link" : "scala\/tools\/scalap\/Properties$.html#propOrElse(name:String,alt:=>String):String", "kind" : "def"}, {"label" : "propIsSetTo", "tail" : "(name: String, value: String): Boolean", "member" : "scala.util.PropertiesTrait.propIsSetTo", "link" : "scala\/tools\/scalap\/Properties$.html#propIsSetTo(name:String,value:String):Boolean", "kind" : "def"}, {"label" : "propIsSet", "tail" : "(name: String): Boolean", "member" : "scala.util.PropertiesTrait.propIsSet", "link" : "scala\/tools\/scalap\/Properties$.html#propIsSet(name:String):Boolean", "kind" : "def"}, {"label" : "scalaProps", "tail" : ": Properties", "member" : "scala.util.PropertiesTrait.scalaProps", "link" : "scala\/tools\/scalap\/Properties$.html#scalaProps:java.util.Properties", "kind" : "lazy val"}, {"label" : "propFilename", "tail" : ": String", "member" : "scala.util.PropertiesTrait.propFilename", "link" : "scala\/tools\/scalap\/Properties$.html#propFilename:String", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "scala\/tools\/scalap\/Properties$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "scala\/tools\/scalap\/Properties$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "scala\/tools\/scalap\/Properties$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "scala\/tools\/scalap\/Properties$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "scala\/tools\/scalap\/Properties$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "scala\/tools\/scalap\/Properties$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "scala\/tools\/scalap\/Properties$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "scala\/tools\/scalap\/Properties$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "scala\/tools\/scalap\/Properties$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "scala\/tools\/scalap\/Properties$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "scala\/tools\/scalap\/Properties$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "scala\/tools\/scalap\/Properties$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "scala\/tools\/scalap\/Properties$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "scala\/tools\/scalap\/Properties$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "scala\/tools\/scalap\/Properties$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "scala\/tools\/scalap\/Properties$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "scala\/tools\/scalap\/Properties$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "scala\/tools\/scalap\/Properties$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "scala\/tools\/scalap\/Properties$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}], "scala.tools.scalap.scalax.rules" : [{"name" : "scala.tools.scalap.scalax.rules.Choice", "trait" : "scala\/tools\/scalap\/scalax\/rules\/Choice.html", "kind" : "trait", "members_trait" : [{"label" : "+", "tail" : "(other: String): String", "member" : "scala.Predef.any2stringadd.+", "link" : "scala\/tools\/scalap\/scalax\/rules\/Choice.html#+(other:String):String", "kind" : "def"}, {"label" : "formatted", "tail" : "(fmtstr: String): String", "member" : "scala.Predef.StringFormat.formatted", "link" : "scala\/tools\/scalap\/scalax\/rules\/Choice.html#formatted(fmtstr:String):String", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: (Choice[In, Out, A, X]) => Boolean, msg: => Any): Choice[In, Out, A, X]", "member" : "scala.Predef.Ensuring.ensuring", "link" : "scala\/tools\/scalap\/scalax\/rules\/Choice.html#ensuring(cond:A=>Boolean,msg:=>Any):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: (Choice[In, Out, A, X]) => Boolean): Choice[In, Out, A, X]", "member" : "scala.Predef.Ensuring.ensuring", "link" : "scala\/tools\/scalap\/scalax\/rules\/Choice.html#ensuring(cond:A=>Boolean):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: Boolean, msg: => Any): Choice[In, Out, A, X]", "member" : "scala.Predef.Ensuring.ensuring", "link" : "scala\/tools\/scalap\/scalax\/rules\/Choice.html#ensuring(cond:Boolean,msg:=>Any):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: Boolean): Choice[In, Out, A, X]", "member" : "scala.Predef.Ensuring.ensuring", "link" : "scala\/tools\/scalap\/scalax\/rules\/Choice.html#ensuring(cond:Boolean):A", "kind" : "def"}, {"label" : "→", "tail" : "(y: B): (Choice[In, Out, A, X], B)", "member" : "scala.Predef.ArrowAssoc.→", "link" : "scala\/tools\/scalap\/scalax\/rules\/Choice.html#→[B](y:B):(A,B)", "kind" : "def"}, {"label" : "->", "tail" : "(y: B): (Choice[In, Out, A, X], B)", "member" : "scala.Predef.ArrowAssoc.->", "link" : "scala\/tools\/scalap\/scalax\/rules\/Choice.html#->[B](y:B):(A,B)", "kind" : "def"}, {"label" : "orElse", "tail" : "(other: => Rule[In2, Out2, A2, X2]): Rule[In2, Out2, A2, X2]", "member" : "scala.tools.scalap.scalax.rules.Choice.orElse", "link" : "scala\/tools\/scalap\/scalax\/rules\/Choice.html#orElse[In2<:In,Out2>:Out,A2>:A,X2>:X](other:=>scala.tools.scalap.scalax.rules.Rule[In2,Out2,A2,X2]):scala.tools.scalap.scalax.rules.Rule[In2,Out2,A2,X2]", "kind" : "def"}, {"label" : "apply", "tail" : "(in: In): Result[Out, A, X]", "member" : "scala.tools.scalap.scalax.rules.Choice.apply", "link" : "scala\/tools\/scalap\/scalax\/rules\/Choice.html#apply(in:In):scala.tools.scalap.scalax.rules.Result[Out,A,X]", "kind" : "def"}, {"label" : "^~>~^", "tail" : "(f: (B1, B2, B3) => C)(viewbound_0: (B) => ~[B2, B3]): Rule[In, Out, (B1) => C, X]", "member" : "scala.tools.scalap.scalax.rules.Rule.^~>~^", "link" : "scala\/tools\/scalap\/scalax\/rules\/Choice.html#^~>~^[B1,B2,B3,B>:A,C](f:(B1,B2,B3)=>C)(implicitviewbound_0:B=>B2~B3):scala.tools.scalap.scalax.rules.Rule[In,Out,B1=>C,X]", "kind" : "def"}, {"label" : "^-^", "tail" : "(f: (B1, B2) => C): Rule[In, Out, (B1) => C, X]", "member" : "scala.tools.scalap.scalax.rules.Rule.^-^", "link" : "scala\/tools\/scalap\/scalax\/rules\/Choice.html#^-^[B1,B2>:A,C](f:(B1,B2)=>C):scala.tools.scalap.scalax.rules.Rule[In,Out,B1=>C,X]", "kind" : "def"}, {"label" : ">~>", "tail" : "(f: (B1, B2) => (Out) => Result[Out2, C, X2])(viewbound_0: (B) => ~[B1, B2]): Rule[In, Out2, C, X2]", "member" : "scala.tools.scalap.scalax.rules.Rule.>~>", "link" : "scala\/tools\/scalap\/scalax\/rules\/Choice.html#>~>[Out2,B1,B2,B>:A,C,X2>:X](f:(B1,B2)=>Out=>scala.tools.scalap.scalax.rules.Result[Out2,C,X2])(implicitviewbound_0:B=>B1~B2):scala.tools.scalap.scalax.rules.Rule[In,Out2,C,X2]", "kind" : "def"}, {"label" : "^~~~~~~^", "tail" : "(f: (B1, B2, B3, B4, B5, B6, B7) => C)(viewbound_0: (B) => ~[~[~[~[~[~[B1, B2], B3], B4], B5], B6], B7]): Rule[In, Out, C, X]", "member" : "scala.tools.scalap.scalax.rules.Rule.^~~~~~~^", "link" : "scala\/tools\/scalap\/scalax\/rules\/Choice.html#^~~~~~~^[B1,B2,B3,B4,B5,B6,B7,B>:A,C](f:(B1,B2,B3,B4,B5,B6,B7)=>C)(implicitviewbound_0:B=>B1~B2~B3~B4~B5~B6~B7):scala.tools.scalap.scalax.rules.Rule[In,Out,C,X]", "kind" : "def"}, {"label" : "^~~~~~^", "tail" : "(f: (B1, B2, B3, B4, B5, B6) => C)(viewbound_0: (B) => ~[~[~[~[~[B1, B2], B3], B4], B5], B6]): Rule[In, Out, C, X]", "member" : "scala.tools.scalap.scalax.rules.Rule.^~~~~~^", "link" : "scala\/tools\/scalap\/scalax\/rules\/Choice.html#^~~~~~^[B1,B2,B3,B4,B5,B6,B>:A,C](f:(B1,B2,B3,B4,B5,B6)=>C)(implicitviewbound_0:B=>B1~B2~B3~B4~B5~B6):scala.tools.scalap.scalax.rules.Rule[In,Out,C,X]", "kind" : "def"}, {"label" : "^~~~~^", "tail" : "(f: (B1, B2, B3, B4, B5) => C)(viewbound_0: (B) => ~[~[~[~[B1, B2], B3], B4], B5]): Rule[In, Out, C, X]", "member" : "scala.tools.scalap.scalax.rules.Rule.^~~~~^", "link" : "scala\/tools\/scalap\/scalax\/rules\/Choice.html#^~~~~^[B1,B2,B3,B4,B5,B>:A,C](f:(B1,B2,B3,B4,B5)=>C)(implicitviewbound_0:B=>B1~B2~B3~B4~B5):scala.tools.scalap.scalax.rules.Rule[In,Out,C,X]", "kind" : "def"}, {"label" : "^~~~^", "tail" : "(f: (B1, B2, B3, B4) => C)(viewbound_0: (B) => ~[~[~[B1, B2], B3], B4]): Rule[In, Out, C, X]", "member" : "scala.tools.scalap.scalax.rules.Rule.^~~~^", "link" : "scala\/tools\/scalap\/scalax\/rules\/Choice.html#^~~~^[B1,B2,B3,B4,B>:A,C](f:(B1,B2,B3,B4)=>C)(implicitviewbound_0:B=>B1~B2~B3~B4):scala.tools.scalap.scalax.rules.Rule[In,Out,C,X]", "kind" : "def"}, {"label" : "^~~^", "tail" : "(f: (B1, B2, B3) => C)(viewbound_0: (B) => ~[~[B1, B2], B3]): Rule[In, Out, C, X]", "member" : "scala.tools.scalap.scalax.rules.Rule.^~~^", "link" : "scala\/tools\/scalap\/scalax\/rules\/Choice.html#^~~^[B1,B2,B3,B>:A,C](f:(B1,B2,B3)=>C)(implicitviewbound_0:B=>B1~B2~B3):scala.tools.scalap.scalax.rules.Rule[In,Out,C,X]", "kind" : "def"}, {"label" : "^~^", "tail" : "(f: (B1, B2) => C)(viewbound_0: (B) => ~[B1, B2]): Rule[In, Out, C, X]", "member" : "scala.tools.scalap.scalax.rules.Rule.^~^", "link" : "scala\/tools\/scalap\/scalax\/rules\/Choice.html#^~^[B1,B2,B>:A,C](f:(B1,B2)=>C)(implicitviewbound_0:B=>B1~B2):scala.tools.scalap.scalax.rules.Rule[In,Out,C,X]", "kind" : "def"}, {"label" : "-", "tail" : "(exclude: => Rule[In2, Any, Any, Any]): Rule[In2, Out, A, X]", "member" : "scala.tools.scalap.scalax.rules.Rule.-", "link" : "scala\/tools\/scalap\/scalax\/rules\/Choice.html#-[In2<:In](exclude:=>scala.tools.scalap.scalax.rules.Rule[In2,Any,Any,Any]):scala.tools.scalap.scalax.rules.Rule[In2,Out,A,X]", "kind" : "def"}, {"label" : "-~!", "tail" : "(next: => Rule[Out, Out2, B, X2]): Rule[In, Out2, B, Any]", "member" : "scala.tools.scalap.scalax.rules.Rule.-~!", "link" : "scala\/tools\/scalap\/scalax\/rules\/Choice.html#-~![Out2,B,X2>:X](next:=>scala.tools.scalap.scalax.rules.Rule[Out,Out2,B,X2]):scala.tools.scalap.scalax.rules.Rule[In,Out2,B,Any]", "kind" : "def"}, {"label" : "~-!", "tail" : "(next: => Rule[Out, Out2, B, X2]): Rule[In, Out2, A, Any]", "member" : "scala.tools.scalap.scalax.rules.Rule.~-!", "link" : "scala\/tools\/scalap\/scalax\/rules\/Choice.html#~-![Out2,B,X2>:X](next:=>scala.tools.scalap.scalax.rules.Rule[Out,Out2,B,X2]):scala.tools.scalap.scalax.rules.Rule[In,Out2,A,Any]", "kind" : "def"}, {"label" : "~!", "tail" : "(next: => Rule[Out, Out2, B, X2]): Rule[In, Out2, ~[A, B], Any]", "member" : "scala.tools.scalap.scalax.rules.Rule.~!", "link" : "scala\/tools\/scalap\/scalax\/rules\/Choice.html#~![Out2,B,X2>:X](next:=>scala.tools.scalap.scalax.rules.Rule[Out,Out2,B,X2]):scala.tools.scalap.scalax.rules.Rule[In,Out2,A~B,Any]", "kind" : "def"}, {"label" : "<~:", "tail" : "(prev: => Rule[InPrev, In, (A) => B, X2]): Rule[InPrev, Out, B, X2]", "member" : "scala.tools.scalap.scalax.rules.Rule.<~:", "link" : "scala\/tools\/scalap\/scalax\/rules\/Choice.html#<~:[InPrev,B,X2>:X](prev:=>scala.tools.scalap.scalax.rules.Rule[InPrev,In,A=>B,X2]):scala.tools.scalap.scalax.rules.Rule[InPrev,Out,B,X2]", "kind" : "def"}, {"label" : "~>", "tail" : "(next: => Rule[Out, Out2, (A) => B, X2]): Rule[In, Out2, B, X2]", "member" : "scala.tools.scalap.scalax.rules.Rule.~>", "link" : "scala\/tools\/scalap\/scalax\/rules\/Choice.html#~>[Out2,B,X2>:X](next:=>scala.tools.scalap.scalax.rules.Rule[Out,Out2,A=>B,X2]):scala.tools.scalap.scalax.rules.Rule[In,Out2,B,X2]", "kind" : "def"}, {"label" : "~++", "tail" : "(next: => Rule[Out, Out2, Seq[B], X2]): Rule[In, Out2, collection.immutable.List[B], X2]", "member" : "scala.tools.scalap.scalax.rules.Rule.~++", "link" : "scala\/tools\/scalap\/scalax\/rules\/Choice.html#~++[Out2,B>:A,X2>:X](next:=>scala.tools.scalap.scalax.rules.Rule[Out,Out2,Seq[B],X2]):scala.tools.scalap.scalax.rules.Rule[In,Out2,List[B],X2]", "kind" : "def"}, {"label" : "-~", "tail" : "(next: => Rule[Out, Out2, B, X2]): Rule[In, Out2, B, X2]", "member" : "scala.tools.scalap.scalax.rules.Rule.-~", "link" : "scala\/tools\/scalap\/scalax\/rules\/Choice.html#-~[Out2,B,X2>:X](next:=>scala.tools.scalap.scalax.rules.Rule[Out,Out2,B,X2]):scala.tools.scalap.scalax.rules.Rule[In,Out2,B,X2]", "kind" : "def"}, {"label" : "~-", "tail" : "(next: => Rule[Out, Out2, B, X2]): Rule[In, Out2, A, X2]", "member" : "scala.tools.scalap.scalax.rules.Rule.~-", "link" : "scala\/tools\/scalap\/scalax\/rules\/Choice.html#~-[Out2,B,X2>:X](next:=>scala.tools.scalap.scalax.rules.Rule[Out,Out2,B,X2]):scala.tools.scalap.scalax.rules.Rule[In,Out2,A,X2]", "kind" : "def"}, {"label" : "~", "tail" : "(next: => Rule[Out, Out2, B, X2]): Rule[In, Out2, ~[A, B], X2]", "member" : "scala.tools.scalap.scalax.rules.Rule.~", "link" : "scala\/tools\/scalap\/scalax\/rules\/Choice.html#~[Out2,B,X2>:X](next:=>scala.tools.scalap.scalax.rules.Rule[Out,Out2,B,X2]):scala.tools.scalap.scalax.rules.Rule[In,Out2,A~B,X2]", "kind" : "def"}, {"label" : ">>&", "tail" : "(fa2ruleb: (A) => (Out) => Result[Any, B, X2]): Rule[In, Out, B, X2]", "member" : "scala.tools.scalap.scalax.rules.Rule.>>&", "link" : "scala\/tools\/scalap\/scalax\/rules\/Choice.html#>>&[B,X2>:X](fa2ruleb:A=>(Out=>scala.tools.scalap.scalax.rules.Result[Any,B,X2])):scala.tools.scalap.scalax.rules.Rule[In,Out,B,X2]", "kind" : "def"}, {"label" : ">>?", "tail" : "(pf: PartialFunction[A, Rule[Out, Out2, B, X2]]): Rule[In, Out2, B, X2]", "member" : "scala.tools.scalap.scalax.rules.Rule.>>?", "link" : "scala\/tools\/scalap\/scalax\/rules\/Choice.html#>>?[Out2,B,X2>:X](pf:PartialFunction[A,scala.tools.scalap.scalax.rules.Rule[Out,Out2,B,X2]]):scala.tools.scalap.scalax.rules.Rule[In,Out2,B,X2]", "kind" : "def"}, {"label" : ">->", "tail" : "(fa2resultb: (A) => Result[Out2, B, X2]): Rule[In, Out2, B, X2]", "member" : "scala.tools.scalap.scalax.rules.Rule.>->", "link" : "scala\/tools\/scalap\/scalax\/rules\/Choice.html#>->[Out2,B,X2>:X](fa2resultb:A=>scala.tools.scalap.scalax.rules.Result[Out2,B,X2]):scala.tools.scalap.scalax.rules.Rule[In,Out2,B,X2]", "kind" : "def"}, {"label" : ">>", "tail" : "(fa2ruleb: (A) => (Out) => Result[Out2, B, X2]): Rule[In, Out2, B, X2]", "member" : "scala.tools.scalap.scalax.rules.Rule.>>", "link" : "scala\/tools\/scalap\/scalax\/rules\/Choice.html#>>[Out2,B,X2>:X](fa2ruleb:A=>(Out=>scala.tools.scalap.scalax.rules.Result[Out2,B,X2])):scala.tools.scalap.scalax.rules.Rule[In,Out2,B,X2]", "kind" : "def"}, {"label" : "!^", "tail" : "(fx2y: (X) => Y): Rule[In, Out, A, Y]", "member" : "scala.tools.scalap.scalax.rules.Rule.!^", "link" : "scala\/tools\/scalap\/scalax\/rules\/Choice.html#!^[Y](fx2y:X=>Y):scala.tools.scalap.scalax.rules.Rule[In,Out,A,Y]", "kind" : "def"}, {"label" : "-^", "tail" : "(b: B): Rule[In, Out, B, X]", "member" : "scala.tools.scalap.scalax.rules.Rule.-^", "link" : "scala\/tools\/scalap\/scalax\/rules\/Choice.html#-^[B](b:B):scala.tools.scalap.scalax.rules.Rule[In,Out,B,X]", "kind" : "def"}, {"label" : "??", "tail" : "(pf: PartialFunction[A, Any]): Rule[In, Out, A, X]", "member" : "scala.tools.scalap.scalax.rules.Rule.??", "link" : "scala\/tools\/scalap\/scalax\/rules\/Choice.html#??(pf:PartialFunction[A,Any]):scala.tools.scalap.scalax.rules.Rule[In,Out,A,X]", "kind" : "def"}, {"label" : "^^?", "tail" : "(pf: PartialFunction[A, B]): Rule[In, Out, B, X]", "member" : "scala.tools.scalap.scalax.rules.Rule.^^?", "link" : "scala\/tools\/scalap\/scalax\/rules\/Choice.html#^^?[B](pf:PartialFunction[A,B]):scala.tools.scalap.scalax.rules.Rule[In,Out,B,X]", "kind" : "def"}, {"label" : "^^", "tail" : "(fa2b: (A) => B): Rule[In, Out, B, X]", "member" : "scala.tools.scalap.scalax.rules.Rule.^^", "link" : "scala\/tools\/scalap\/scalax\/rules\/Choice.html#^^[B](fa2b:A=>B):scala.tools.scalap.scalax.rules.Rule[In,Out,B,X]", "kind" : "def"}, {"label" : "|", "tail" : "(other: => Rule[In2, Out2, A2, X2]): Rule[In2, Out2, A2, X2]", "member" : "scala.tools.scalap.scalax.rules.Rule.|", "link" : "scala\/tools\/scalap\/scalax\/rules\/Choice.html#|[In2<:In,Out2>:Out,A2>:A,X2>:X](other:=>scala.tools.scalap.scalax.rules.Rule[In2,Out2,A2,X2]):scala.tools.scalap.scalax.rules.Rule[In2,Out2,A2,X2]", "kind" : "def"}, {"label" : "orError", "tail" : "(): Rule[In, Out, A, Any]", "member" : "scala.tools.scalap.scalax.rules.Rule.orError", "link" : "scala\/tools\/scalap\/scalax\/rules\/Choice.html#orError[In2<:In]:scala.tools.scalap.scalax.rules.Rule[In,Out,A,Any]", "kind" : "def"}, {"label" : "mapResult", "tail" : "(f: (Result[Out, A, X]) => Result[Out2, B, Y]): Rule[In, Out2, B, Y]", "member" : "scala.tools.scalap.scalax.rules.Rule.mapResult", "link" : "scala\/tools\/scalap\/scalax\/rules\/Choice.html#mapResult[Out2,B,Y](f:scala.tools.scalap.scalax.rules.Result[Out,A,X]=>scala.tools.scalap.scalax.rules.Result[Out2,B,Y]):scala.tools.scalap.scalax.rules.Rule[In,Out2,B,Y]", "kind" : "def"}, {"label" : "filter", "tail" : "(f: (A) => Boolean): Rule[In, Out, A, X]", "member" : "scala.tools.scalap.scalax.rules.Rule.filter", "link" : "scala\/tools\/scalap\/scalax\/rules\/Choice.html#filter(f:A=>Boolean):scala.tools.scalap.scalax.rules.Rule[In,Out,A,X]", "kind" : "def"}, {"label" : "map", "tail" : "(fa2b: (A) => B): Rule[In, Out, B, X]", "member" : "scala.tools.scalap.scalax.rules.Rule.map", "link" : "scala\/tools\/scalap\/scalax\/rules\/Choice.html#map[B](fa2b:A=>B):scala.tools.scalap.scalax.rules.Rule[In,Out,B,X]", "kind" : "def"}, {"label" : "flatMap", "tail" : "(fa2ruleb: (A) => (Out) => Result[Out2, B, X2]): Rule[In, Out2, B, X2]", "member" : "scala.tools.scalap.scalax.rules.Rule.flatMap", "link" : "scala\/tools\/scalap\/scalax\/rules\/Choice.html#flatMap[Out2,B,X2>:X](fa2ruleb:A=>(Out=>scala.tools.scalap.scalax.rules.Result[Out2,B,X2])):scala.tools.scalap.scalax.rules.Rule[In,Out2,B,X2]", "kind" : "def"}, {"label" : "as", "tail" : "(name: String): Rule[In, Out, A, X] with Name", "member" : "scala.tools.scalap.scalax.rules.Rule.as", "link" : "scala\/tools\/scalap\/scalax\/rules\/Choice.html#as(name:String):scala.tools.scalap.scalax.rules.Rule[In,Out,A,X]withscala.tools.scalap.scalax.rules.Name", "kind" : "def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.Function1.toString", "link" : "scala\/tools\/scalap\/scalax\/rules\/Choice.html#toString():String", "kind" : "def"}, {"label" : "andThen", "tail" : "(g: (Result[Out, A, X]) => A): (In) => A", "member" : "scala.Function1.andThen", "link" : "scala\/tools\/scalap\/scalax\/rules\/Choice.html#andThen[A](g:R=>A):T1=>A", "kind" : "def"}, {"label" : "compose", "tail" : "(g: (A) => In): (A) => Result[Out, A, X]", "member" : "scala.Function1.compose", "link" : "scala\/tools\/scalap\/scalax\/rules\/Choice.html#compose[A](g:A=>T1):A=>R", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "scala\/tools\/scalap\/scalax\/rules\/Choice.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "scala\/tools\/scalap\/scalax\/rules\/Choice.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "scala\/tools\/scalap\/scalax\/rules\/Choice.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "scala\/tools\/scalap\/scalax\/rules\/Choice.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "scala\/tools\/scalap\/scalax\/rules\/Choice.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "scala\/tools\/scalap\/scalax\/rules\/Choice.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "scala\/tools\/scalap\/scalax\/rules\/Choice.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "scala\/tools\/scalap\/scalax\/rules\/Choice.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "scala\/tools\/scalap\/scalax\/rules\/Choice.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "scala\/tools\/scalap\/scalax\/rules\/Choice.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "scala\/tools\/scalap\/scalax\/rules\/Choice.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "scala\/tools\/scalap\/scalax\/rules\/Choice.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "scala\/tools\/scalap\/scalax\/rules\/Choice.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "scala\/tools\/scalap\/scalax\/rules\/Choice.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "scala\/tools\/scalap\/scalax\/rules\/Choice.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "scala\/tools\/scalap\/scalax\/rules\/Choice.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "scala\/tools\/scalap\/scalax\/rules\/Choice.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "scala\/tools\/scalap\/scalax\/rules\/Choice.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "choices", "tail" : "(): List[Rule[In, Out, A, X]]", "member" : "scala.tools.scalap.scalax.rules.Choice.choices", "link" : "scala\/tools\/scalap\/scalax\/rules\/Choice.html#choices:List[scala.tools.scalap.scalax.rules.Rule[In,Out,A,X]]", "kind" : "abstract def"}, {"label" : "factory", "tail" : ": Rules", "member" : "scala.tools.scalap.scalax.rules.Rule.factory", "link" : "scala\/tools\/scalap\/scalax\/rules\/Choice.html#factory:scala.tools.scalap.scalax.rules.Rules", "kind" : "abstract val"}], "shortDescription" : ""}, {"name" : "scala.tools.scalap.scalax.rules.DefaultMemoisable", "object" : "scala\/tools\/scalap\/scalax\/rules\/DefaultMemoisable$.html", "members_object" : [{"label" : "debug", "tail" : ": Boolean", "member" : "scala.tools.scalap.scalax.rules.DefaultMemoisable.debug", "link" : "scala\/tools\/scalap\/scalax\/rules\/DefaultMemoisable$.html#debug:Boolean", "kind" : "var"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "scala\/tools\/scalap\/scalax\/rules\/DefaultMemoisable$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "scala\/tools\/scalap\/scalax\/rules\/DefaultMemoisable$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "scala\/tools\/scalap\/scalax\/rules\/DefaultMemoisable$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "scala\/tools\/scalap\/scalax\/rules\/DefaultMemoisable$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "scala\/tools\/scalap\/scalax\/rules\/DefaultMemoisable$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "scala\/tools\/scalap\/scalax\/rules\/DefaultMemoisable$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "scala\/tools\/scalap\/scalax\/rules\/DefaultMemoisable$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "scala\/tools\/scalap\/scalax\/rules\/DefaultMemoisable$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "scala\/tools\/scalap\/scalax\/rules\/DefaultMemoisable$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "scala\/tools\/scalap\/scalax\/rules\/DefaultMemoisable$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "scala\/tools\/scalap\/scalax\/rules\/DefaultMemoisable$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "scala\/tools\/scalap\/scalax\/rules\/DefaultMemoisable$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "scala\/tools\/scalap\/scalax\/rules\/DefaultMemoisable$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "scala\/tools\/scalap\/scalax\/rules\/DefaultMemoisable$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "scala\/tools\/scalap\/scalax\/rules\/DefaultMemoisable$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "scala\/tools\/scalap\/scalax\/rules\/DefaultMemoisable$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "scala\/tools\/scalap\/scalax\/rules\/DefaultMemoisable$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "scala\/tools\/scalap\/scalax\/rules\/DefaultMemoisable$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "scala\/tools\/scalap\/scalax\/rules\/DefaultMemoisable$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "trait" : "scala\/tools\/scalap\/scalax\/rules\/DefaultMemoisable.html", "kind" : "object", "members_trait" : [{"label" : "+", "tail" : "(other: String): String", "member" : "scala.Predef.any2stringadd.+", "link" : "scala\/tools\/scalap\/scalax\/rules\/DefaultMemoisable.html#+(other:String):String", "kind" : "def"}, {"label" : "formatted", "tail" : "(fmtstr: String): String", "member" : "scala.Predef.StringFormat.formatted", "link" : "scala\/tools\/scalap\/scalax\/rules\/DefaultMemoisable.html#formatted(fmtstr:String):String", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: (DefaultMemoisable) => Boolean, msg: => Any): DefaultMemoisable", "member" : "scala.Predef.Ensuring.ensuring", "link" : "scala\/tools\/scalap\/scalax\/rules\/DefaultMemoisable.html#ensuring(cond:A=>Boolean,msg:=>Any):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: (DefaultMemoisable) => Boolean): DefaultMemoisable", "member" : "scala.Predef.Ensuring.ensuring", "link" : "scala\/tools\/scalap\/scalax\/rules\/DefaultMemoisable.html#ensuring(cond:A=>Boolean):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: Boolean, msg: => Any): DefaultMemoisable", "member" : "scala.Predef.Ensuring.ensuring", "link" : "scala\/tools\/scalap\/scalax\/rules\/DefaultMemoisable.html#ensuring(cond:Boolean,msg:=>Any):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: Boolean): DefaultMemoisable", "member" : "scala.Predef.Ensuring.ensuring", "link" : "scala\/tools\/scalap\/scalax\/rules\/DefaultMemoisable.html#ensuring(cond:Boolean):A", "kind" : "def"}, {"label" : "→", "tail" : "(y: B): (DefaultMemoisable, B)", "member" : "scala.Predef.ArrowAssoc.→", "link" : "scala\/tools\/scalap\/scalax\/rules\/DefaultMemoisable.html#→[B](y:B):(A,B)", "kind" : "def"}, {"label" : "->", "tail" : "(y: B): (DefaultMemoisable, B)", "member" : "scala.Predef.ArrowAssoc.->", "link" : "scala\/tools\/scalap\/scalax\/rules\/DefaultMemoisable.html#->[B](y:B):(A,B)", "kind" : "def"}, {"label" : "onSuccess", "tail" : "(key: AnyRef, result: Success[S, T]): Unit", "member" : "scala.tools.scalap.scalax.rules.DefaultMemoisable.onSuccess", "link" : "scala\/tools\/scalap\/scalax\/rules\/DefaultMemoisable.html#onSuccess[S,T](key:AnyRef,result:scala.tools.scalap.scalax.rules.Success[S,T]):Unit", "kind" : "def"}, {"label" : "compute", "tail" : "(key: AnyRef, a: => A): Any", "member" : "scala.tools.scalap.scalax.rules.DefaultMemoisable.compute", "link" : "scala\/tools\/scalap\/scalax\/rules\/DefaultMemoisable.html#compute[A](key:AnyRef,a:=>A):Any", "kind" : "def"}, {"label" : "memo", "tail" : "(key: AnyRef, a: => A): A", "member" : "scala.tools.scalap.scalax.rules.DefaultMemoisable.memo", "link" : "scala\/tools\/scalap\/scalax\/rules\/DefaultMemoisable.html#memo[A](key:AnyRef,a:=>A):A", "kind" : "def"}, {"label" : "map", "tail" : ": HashMap[AnyRef, Any]", "member" : "scala.tools.scalap.scalax.rules.DefaultMemoisable.map", "link" : "scala\/tools\/scalap\/scalax\/rules\/DefaultMemoisable.html#map:scala.collection.mutable.HashMap[AnyRef,Any]", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "scala\/tools\/scalap\/scalax\/rules\/DefaultMemoisable.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "scala\/tools\/scalap\/scalax\/rules\/DefaultMemoisable.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "scala\/tools\/scalap\/scalax\/rules\/DefaultMemoisable.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "scala\/tools\/scalap\/scalax\/rules\/DefaultMemoisable.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "scala\/tools\/scalap\/scalax\/rules\/DefaultMemoisable.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "scala\/tools\/scalap\/scalax\/rules\/DefaultMemoisable.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "scala\/tools\/scalap\/scalax\/rules\/DefaultMemoisable.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "scala\/tools\/scalap\/scalax\/rules\/DefaultMemoisable.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "scala\/tools\/scalap\/scalax\/rules\/DefaultMemoisable.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "scala\/tools\/scalap\/scalax\/rules\/DefaultMemoisable.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "scala\/tools\/scalap\/scalax\/rules\/DefaultMemoisable.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "scala\/tools\/scalap\/scalax\/rules\/DefaultMemoisable.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "scala\/tools\/scalap\/scalax\/rules\/DefaultMemoisable.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "scala\/tools\/scalap\/scalax\/rules\/DefaultMemoisable.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "scala\/tools\/scalap\/scalax\/rules\/DefaultMemoisable.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "scala\/tools\/scalap\/scalax\/rules\/DefaultMemoisable.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "scala\/tools\/scalap\/scalax\/rules\/DefaultMemoisable.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "scala\/tools\/scalap\/scalax\/rules\/DefaultMemoisable.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "scala\/tools\/scalap\/scalax\/rules\/DefaultMemoisable.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "shortDescription" : ""}, {"name" : "scala.tools.scalap.scalax.rules.Error", "shortDescription" : "", "members_case class" : [{"label" : "+", "tail" : "(other: String): String", "member" : "scala.Predef.any2stringadd.+", "link" : "scala\/tools\/scalap\/scalax\/rules\/Error.html#+(other:String):String", "kind" : "def"}, {"label" : "formatted", "tail" : "(fmtstr: String): String", "member" : "scala.Predef.StringFormat.formatted", "link" : "scala\/tools\/scalap\/scalax\/rules\/Error.html#formatted(fmtstr:String):String", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: (Error[X]) => Boolean, msg: => Any): Error[X]", "member" : "scala.Predef.Ensuring.ensuring", "link" : "scala\/tools\/scalap\/scalax\/rules\/Error.html#ensuring(cond:A=>Boolean,msg:=>Any):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: (Error[X]) => Boolean): Error[X]", "member" : "scala.Predef.Ensuring.ensuring", "link" : "scala\/tools\/scalap\/scalax\/rules\/Error.html#ensuring(cond:A=>Boolean):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: Boolean, msg: => Any): Error[X]", "member" : "scala.Predef.Ensuring.ensuring", "link" : "scala\/tools\/scalap\/scalax\/rules\/Error.html#ensuring(cond:Boolean,msg:=>Any):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: Boolean): Error[X]", "member" : "scala.Predef.Ensuring.ensuring", "link" : "scala\/tools\/scalap\/scalax\/rules\/Error.html#ensuring(cond:Boolean):A", "kind" : "def"}, {"label" : "→", "tail" : "(y: B): (Error[X], B)", "member" : "scala.Predef.ArrowAssoc.→", "link" : "scala\/tools\/scalap\/scalax\/rules\/Error.html#→[B](y:B):(A,B)", "kind" : "def"}, {"label" : "->", "tail" : "(y: B): (Error[X], B)", "member" : "scala.Predef.ArrowAssoc.->", "link" : "scala\/tools\/scalap\/scalax\/rules\/Error.html#->[B](y:B):(A,B)", "kind" : "def"}, {"member" : "scala.tools.scalap.scalax.rules.Error#<init>", "error" : "unsupported entity"}, {"label" : "error", "tail" : ": X", "member" : "scala.tools.scalap.scalax.rules.Error.error", "link" : "scala\/tools\/scalap\/scalax\/rules\/Error.html#error:X", "kind" : "val"}, {"label" : "productElementNames", "tail" : "(): Iterator[String]", "member" : "scala.Product.productElementNames", "link" : "scala\/tools\/scalap\/scalax\/rules\/Error.html#productElementNames:Iterator[String]", "kind" : "def"}, {"label" : "orElse", "tail" : "(other: => Result[Out2, B, Nothing]): Result[Out2, B, Nothing]", "member" : "scala.tools.scalap.scalax.rules.NoSuccess.orElse", "link" : "scala\/tools\/scalap\/scalax\/rules\/Error.html#orElse[Out2,B](other:=>scala.tools.scalap.scalax.rules.Result[Out2,B,Nothing]):scala.tools.scalap.scalax.rules.Result[Out2,B,Nothing]", "kind" : "def"}, {"label" : "flatMap", "tail" : "(f: (Nothing, Nothing) => Result[Out2, B, Nothing]): NoSuccess[X]", "member" : "scala.tools.scalap.scalax.rules.NoSuccess.flatMap", "link" : "scala\/tools\/scalap\/scalax\/rules\/Error.html#flatMap[Out2,B](f:(Nothing,Nothing)=>scala.tools.scalap.scalax.rules.Result[Out2,B,Nothing]):scala.tools.scalap.scalax.rules.NoSuccess[X]", "kind" : "def"}, {"label" : "map", "tail" : "(f: (Nothing, Nothing) => (Out2, B)): NoSuccess[X]", "member" : "scala.tools.scalap.scalax.rules.NoSuccess.map", "link" : "scala\/tools\/scalap\/scalax\/rules\/Error.html#map[Out2,B](f:(Nothing,Nothing)=>(Out2,B)):scala.tools.scalap.scalax.rules.NoSuccess[X]", "kind" : "def"}, {"label" : "mapOut", "tail" : "(f: (Nothing) => Out2): NoSuccess[X]", "member" : "scala.tools.scalap.scalax.rules.NoSuccess.mapOut", "link" : "scala\/tools\/scalap\/scalax\/rules\/Error.html#mapOut[Out2](f:Nothing=>Out2):scala.tools.scalap.scalax.rules.NoSuccess[X]", "kind" : "def"}, {"label" : "map", "tail" : "(f: (Nothing) => B): NoSuccess[X]", "member" : "scala.tools.scalap.scalax.rules.NoSuccess.map", "link" : "scala\/tools\/scalap\/scalax\/rules\/Error.html#map[B](f:Nothing=>B):scala.tools.scalap.scalax.rules.NoSuccess[X]", "kind" : "def"}, {"label" : "toOption", "tail" : "(): None", "member" : "scala.tools.scalap.scalax.rules.NoSuccess.toOption", "link" : "scala\/tools\/scalap\/scalax\/rules\/Error.html#toOption:None.type", "kind" : "def"}, {"label" : "value", "tail" : "(): Nothing", "member" : "scala.tools.scalap.scalax.rules.NoSuccess.value", "link" : "scala\/tools\/scalap\/scalax\/rules\/Error.html#value:Nothing", "kind" : "def"}, {"label" : "out", "tail" : "(): Nothing", "member" : "scala.tools.scalap.scalax.rules.NoSuccess.out", "link" : "scala\/tools\/scalap\/scalax\/rules\/Error.html#out:Nothing", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "scala\/tools\/scalap\/scalax\/rules\/Error.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "scala\/tools\/scalap\/scalax\/rules\/Error.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "scala\/tools\/scalap\/scalax\/rules\/Error.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "scala\/tools\/scalap\/scalax\/rules\/Error.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "scala\/tools\/scalap\/scalax\/rules\/Error.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "scala\/tools\/scalap\/scalax\/rules\/Error.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "scala\/tools\/scalap\/scalax\/rules\/Error.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "scala\/tools\/scalap\/scalax\/rules\/Error.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "scala\/tools\/scalap\/scalax\/rules\/Error.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "scala\/tools\/scalap\/scalax\/rules\/Error.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "scala\/tools\/scalap\/scalax\/rules\/Error.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "scala\/tools\/scalap\/scalax\/rules\/Error.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "scala\/tools\/scalap\/scalax\/rules\/Error.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "scala\/tools\/scalap\/scalax\/rules\/Error.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "scala\/tools\/scalap\/scalax\/rules\/Error.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "scala\/tools\/scalap\/scalax\/rules\/Error.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "scala\/tools\/scalap\/scalax\/rules\/Error.html", "kind" : "case class"}, {"name" : "scala.tools.scalap.scalax.rules.Failure", "shortDescription" : "", "object" : "scala\/tools\/scalap\/scalax\/rules\/Failure$.html", "members_object" : [{"label" : "error", "tail" : "(): Nothing", "member" : "scala.tools.scalap.scalax.rules.Failure.error", "link" : "scala\/tools\/scalap\/scalax\/rules\/Failure$.html#error:Nothing", "kind" : "def"}, {"label" : "productElementNames", "tail" : "(): Iterator[String]", "member" : "scala.Product.productElementNames", "link" : "scala\/tools\/scalap\/scalax\/rules\/Failure$.html#productElementNames:Iterator[String]", "kind" : "def"}, {"label" : "productElementName", "tail" : "(n: Int): String", "member" : "scala.Product.productElementName", "link" : "scala\/tools\/scalap\/scalax\/rules\/Failure$.html#productElementName(n:Int):String", "kind" : "def"}, {"label" : "orElse", "tail" : "(other: => Result[Out2, B, Nothing]): Result[Out2, B, Nothing]", "member" : "scala.tools.scalap.scalax.rules.NoSuccess.orElse", "link" : "scala\/tools\/scalap\/scalax\/rules\/Failure$.html#orElse[Out2,B](other:=>scala.tools.scalap.scalax.rules.Result[Out2,B,Nothing]):scala.tools.scalap.scalax.rules.Result[Out2,B,Nothing]", "kind" : "def"}, {"label" : "flatMap", "tail" : "(f: (Nothing, Nothing) => Result[Out2, B, Nothing]): NoSuccess[Nothing]", "member" : "scala.tools.scalap.scalax.rules.NoSuccess.flatMap", "link" : "scala\/tools\/scalap\/scalax\/rules\/Failure$.html#flatMap[Out2,B](f:(Nothing,Nothing)=>scala.tools.scalap.scalax.rules.Result[Out2,B,Nothing]):scala.tools.scalap.scalax.rules.NoSuccess[X]", "kind" : "def"}, {"label" : "map", "tail" : "(f: (Nothing, Nothing) => (Out2, B)): NoSuccess[Nothing]", "member" : "scala.tools.scalap.scalax.rules.NoSuccess.map", "link" : "scala\/tools\/scalap\/scalax\/rules\/Failure$.html#map[Out2,B](f:(Nothing,Nothing)=>(Out2,B)):scala.tools.scalap.scalax.rules.NoSuccess[X]", "kind" : "def"}, {"label" : "mapOut", "tail" : "(f: (Nothing) => Out2): NoSuccess[Nothing]", "member" : "scala.tools.scalap.scalax.rules.NoSuccess.mapOut", "link" : "scala\/tools\/scalap\/scalax\/rules\/Failure$.html#mapOut[Out2](f:Nothing=>Out2):scala.tools.scalap.scalax.rules.NoSuccess[X]", "kind" : "def"}, {"label" : "map", "tail" : "(f: (Nothing) => B): NoSuccess[Nothing]", "member" : "scala.tools.scalap.scalax.rules.NoSuccess.map", "link" : "scala\/tools\/scalap\/scalax\/rules\/Failure$.html#map[B](f:Nothing=>B):scala.tools.scalap.scalax.rules.NoSuccess[X]", "kind" : "def"}, {"label" : "toOption", "tail" : "(): None", "member" : "scala.tools.scalap.scalax.rules.NoSuccess.toOption", "link" : "scala\/tools\/scalap\/scalax\/rules\/Failure$.html#toOption:None.type", "kind" : "def"}, {"label" : "value", "tail" : "(): Nothing", "member" : "scala.tools.scalap.scalax.rules.NoSuccess.value", "link" : "scala\/tools\/scalap\/scalax\/rules\/Failure$.html#value:Nothing", "kind" : "def"}, {"label" : "out", "tail" : "(): Nothing", "member" : "scala.tools.scalap.scalax.rules.NoSuccess.out", "link" : "scala\/tools\/scalap\/scalax\/rules\/Failure$.html#out:Nothing", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "scala\/tools\/scalap\/scalax\/rules\/Failure$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "scala\/tools\/scalap\/scalax\/rules\/Failure$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "scala\/tools\/scalap\/scalax\/rules\/Failure$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "scala\/tools\/scalap\/scalax\/rules\/Failure$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "scala\/tools\/scalap\/scalax\/rules\/Failure$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "scala\/tools\/scalap\/scalax\/rules\/Failure$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "scala\/tools\/scalap\/scalax\/rules\/Failure$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "scala\/tools\/scalap\/scalax\/rules\/Failure$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "scala\/tools\/scalap\/scalax\/rules\/Failure$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "scala\/tools\/scalap\/scalax\/rules\/Failure$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "scala\/tools\/scalap\/scalax\/rules\/Failure$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "scala\/tools\/scalap\/scalax\/rules\/Failure$.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "scala\/tools\/scalap\/scalax\/rules\/Failure$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "scala\/tools\/scalap\/scalax\/rules\/Failure$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "scala\/tools\/scalap\/scalax\/rules\/Failure$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "scala\/tools\/scalap\/scalax\/rules\/Failure$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "scala\/tools\/scalap\/scalax\/rules\/Failure$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "scala.tools.scalap.scalax.rules.InRule", "shortDescription" : "A workaround for the difficulties of dealing witha contravariant 'In' parameter type...", "members_class" : [{"label" : "+", "tail" : "(other: String): String", "member" : "scala.Predef.any2stringadd.+", "link" : "scala\/tools\/scalap\/scalax\/rules\/InRule.html#+(other:String):String", "kind" : "def"}, {"label" : "formatted", "tail" : "(fmtstr: String): String", "member" : "scala.Predef.StringFormat.formatted", "link" : "scala\/tools\/scalap\/scalax\/rules\/InRule.html#formatted(fmtstr:String):String", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: (InRule[In, Out, A, X]) => Boolean, msg: => Any): InRule[In, Out, A, X]", "member" : "scala.Predef.Ensuring.ensuring", "link" : "scala\/tools\/scalap\/scalax\/rules\/InRule.html#ensuring(cond:A=>Boolean,msg:=>Any):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: (InRule[In, Out, A, X]) => Boolean): InRule[In, Out, A, X]", "member" : "scala.Predef.Ensuring.ensuring", "link" : "scala\/tools\/scalap\/scalax\/rules\/InRule.html#ensuring(cond:A=>Boolean):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: Boolean, msg: => Any): InRule[In, Out, A, X]", "member" : "scala.Predef.Ensuring.ensuring", "link" : "scala\/tools\/scalap\/scalax\/rules\/InRule.html#ensuring(cond:Boolean,msg:=>Any):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: Boolean): InRule[In, Out, A, X]", "member" : "scala.Predef.Ensuring.ensuring", "link" : "scala\/tools\/scalap\/scalax\/rules\/InRule.html#ensuring(cond:Boolean):A", "kind" : "def"}, {"label" : "→", "tail" : "(y: B): (InRule[In, Out, A, X], B)", "member" : "scala.Predef.ArrowAssoc.→", "link" : "scala\/tools\/scalap\/scalax\/rules\/InRule.html#→[B](y:B):(A,B)", "kind" : "def"}, {"label" : "->", "tail" : "(y: B): (InRule[In, Out, A, X], B)", "member" : "scala.Predef.ArrowAssoc.->", "link" : "scala\/tools\/scalap\/scalax\/rules\/InRule.html#->[B](y:B):(A,B)", "kind" : "def"}, {"label" : "&", "tail" : "(): Rule[In, In, A, X]", "member" : "scala.tools.scalap.scalax.rules.InRule.&", "link" : "scala\/tools\/scalap\/scalax\/rules\/InRule.html#&:scala.tools.scalap.scalax.rules.Rule[In,In,A,X]", "kind" : "def"}, {"label" : "unary_!", "tail" : "(): Rule[In, In, Unit, Nothing]", "member" : "scala.tools.scalap.scalax.rules.InRule.unary_!", "link" : "scala\/tools\/scalap\/scalax\/rules\/InRule.html#unary_!:scala.tools.scalap.scalax.rules.Rule[In,In,Unit,Nothing]", "kind" : "def"}, {"label" : "mapRule", "tail" : "(f: (Result[Out, A, X]) => (In) => Result[Out2, B, Y]): Rule[In, Out2, B, Y]", "member" : "scala.tools.scalap.scalax.rules.InRule.mapRule", "link" : "scala\/tools\/scalap\/scalax\/rules\/InRule.html#mapRule[Out2,B,Y](f:scala.tools.scalap.scalax.rules.Result[Out,A,X]=>(In=>scala.tools.scalap.scalax.rules.Result[Out2,B,Y])):scala.tools.scalap.scalax.rules.Rule[In,Out2,B,Y]", "kind" : "def"}, {"member" : "scala.tools.scalap.scalax.rules.InRule#<init>", "error" : "unsupported entity"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "scala\/tools\/scalap\/scalax\/rules\/InRule.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "scala\/tools\/scalap\/scalax\/rules\/InRule.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "scala\/tools\/scalap\/scalax\/rules\/InRule.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "scala\/tools\/scalap\/scalax\/rules\/InRule.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "scala\/tools\/scalap\/scalax\/rules\/InRule.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "scala\/tools\/scalap\/scalax\/rules\/InRule.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "scala\/tools\/scalap\/scalax\/rules\/InRule.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "scala\/tools\/scalap\/scalax\/rules\/InRule.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "scala\/tools\/scalap\/scalax\/rules\/InRule.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "scala\/tools\/scalap\/scalax\/rules\/InRule.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "scala\/tools\/scalap\/scalax\/rules\/InRule.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "scala\/tools\/scalap\/scalax\/rules\/InRule.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "scala\/tools\/scalap\/scalax\/rules\/InRule.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "scala\/tools\/scalap\/scalax\/rules\/InRule.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "scala\/tools\/scalap\/scalax\/rules\/InRule.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "scala\/tools\/scalap\/scalax\/rules\/InRule.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "scala\/tools\/scalap\/scalax\/rules\/InRule.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "scala\/tools\/scalap\/scalax\/rules\/InRule.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "scala\/tools\/scalap\/scalax\/rules\/InRule.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "scala\/tools\/scalap\/scalax\/rules\/InRule.html", "kind" : "class"}, {"name" : "scala.tools.scalap.scalax.rules.Memoisable", "trait" : "scala\/tools\/scalap\/scalax\/rules\/Memoisable.html", "kind" : "trait", "members_trait" : [{"label" : "+", "tail" : "(other: String): String", "member" : "scala.Predef.any2stringadd.+", "link" : "scala\/tools\/scalap\/scalax\/rules\/Memoisable.html#+(other:String):String", "kind" : "def"}, {"label" : "formatted", "tail" : "(fmtstr: String): String", "member" : "scala.Predef.StringFormat.formatted", "link" : "scala\/tools\/scalap\/scalax\/rules\/Memoisable.html#formatted(fmtstr:String):String", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: (Memoisable) => Boolean, msg: => Any): Memoisable", "member" : "scala.Predef.Ensuring.ensuring", "link" : "scala\/tools\/scalap\/scalax\/rules\/Memoisable.html#ensuring(cond:A=>Boolean,msg:=>Any):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: (Memoisable) => Boolean): Memoisable", "member" : "scala.Predef.Ensuring.ensuring", "link" : "scala\/tools\/scalap\/scalax\/rules\/Memoisable.html#ensuring(cond:A=>Boolean):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: Boolean, msg: => Any): Memoisable", "member" : "scala.Predef.Ensuring.ensuring", "link" : "scala\/tools\/scalap\/scalax\/rules\/Memoisable.html#ensuring(cond:Boolean,msg:=>Any):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: Boolean): Memoisable", "member" : "scala.Predef.Ensuring.ensuring", "link" : "scala\/tools\/scalap\/scalax\/rules\/Memoisable.html#ensuring(cond:Boolean):A", "kind" : "def"}, {"label" : "→", "tail" : "(y: B): (Memoisable, B)", "member" : "scala.Predef.ArrowAssoc.→", "link" : "scala\/tools\/scalap\/scalax\/rules\/Memoisable.html#→[B](y:B):(A,B)", "kind" : "def"}, {"label" : "->", "tail" : "(y: B): (Memoisable, B)", "member" : "scala.Predef.ArrowAssoc.->", "link" : "scala\/tools\/scalap\/scalax\/rules\/Memoisable.html#->[B](y:B):(A,B)", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "scala\/tools\/scalap\/scalax\/rules\/Memoisable.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "scala\/tools\/scalap\/scalax\/rules\/Memoisable.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "scala\/tools\/scalap\/scalax\/rules\/Memoisable.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "scala\/tools\/scalap\/scalax\/rules\/Memoisable.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "scala\/tools\/scalap\/scalax\/rules\/Memoisable.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "scala\/tools\/scalap\/scalax\/rules\/Memoisable.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "scala\/tools\/scalap\/scalax\/rules\/Memoisable.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "scala\/tools\/scalap\/scalax\/rules\/Memoisable.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "scala\/tools\/scalap\/scalax\/rules\/Memoisable.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "scala\/tools\/scalap\/scalax\/rules\/Memoisable.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "scala\/tools\/scalap\/scalax\/rules\/Memoisable.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "scala\/tools\/scalap\/scalax\/rules\/Memoisable.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "scala\/tools\/scalap\/scalax\/rules\/Memoisable.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "scala\/tools\/scalap\/scalax\/rules\/Memoisable.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "scala\/tools\/scalap\/scalax\/rules\/Memoisable.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "scala\/tools\/scalap\/scalax\/rules\/Memoisable.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "scala\/tools\/scalap\/scalax\/rules\/Memoisable.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "scala\/tools\/scalap\/scalax\/rules\/Memoisable.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "scala\/tools\/scalap\/scalax\/rules\/Memoisable.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "memo", "tail" : "(key: AnyRef, a: => A): A", "member" : "scala.tools.scalap.scalax.rules.Memoisable.memo", "link" : "scala\/tools\/scalap\/scalax\/rules\/Memoisable.html#memo[A](key:AnyRef,a:=>A):A", "kind" : "abstract def"}], "shortDescription" : ""}, {"name" : "scala.tools.scalap.scalax.rules.MemoisableRules", "trait" : "scala\/tools\/scalap\/scalax\/rules\/MemoisableRules.html", "kind" : "trait", "members_trait" : [{"label" : "+", "tail" : "(other: String): String", "member" : "scala.Predef.any2stringadd.+", "link" : "scala\/tools\/scalap\/scalax\/rules\/MemoisableRules.html#+(other:String):String", "kind" : "def"}, {"label" : "formatted", "tail" : "(fmtstr: String): String", "member" : "scala.Predef.StringFormat.formatted", "link" : "scala\/tools\/scalap\/scalax\/rules\/MemoisableRules.html#formatted(fmtstr:String):String", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: (MemoisableRules) => Boolean, msg: => Any): MemoisableRules", "member" : "scala.Predef.Ensuring.ensuring", "link" : "scala\/tools\/scalap\/scalax\/rules\/MemoisableRules.html#ensuring(cond:A=>Boolean,msg:=>Any):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: (MemoisableRules) => Boolean): MemoisableRules", "member" : "scala.Predef.Ensuring.ensuring", "link" : "scala\/tools\/scalap\/scalax\/rules\/MemoisableRules.html#ensuring(cond:A=>Boolean):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: Boolean, msg: => Any): MemoisableRules", "member" : "scala.Predef.Ensuring.ensuring", "link" : "scala\/tools\/scalap\/scalax\/rules\/MemoisableRules.html#ensuring(cond:Boolean,msg:=>Any):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: Boolean): MemoisableRules", "member" : "scala.Predef.Ensuring.ensuring", "link" : "scala\/tools\/scalap\/scalax\/rules\/MemoisableRules.html#ensuring(cond:Boolean):A", "kind" : "def"}, {"label" : "→", "tail" : "(y: B): (MemoisableRules, B)", "member" : "scala.Predef.ArrowAssoc.→", "link" : "scala\/tools\/scalap\/scalax\/rules\/MemoisableRules.html#→[B](y:B):(A,B)", "kind" : "def"}, {"label" : "->", "tail" : "(y: B): (MemoisableRules, B)", "member" : "scala.Predef.ArrowAssoc.->", "link" : "scala\/tools\/scalap\/scalax\/rules\/MemoisableRules.html#->[B](y:B):(A,B)", "kind" : "def"}, {"label" : "DefaultRule", "tail" : "", "member" : "scala.tools.scalap.scalax.rules.Rules.DefaultRule", "link" : "scala\/tools\/scalap\/scalax\/rules\/Rules.html#DefaultRule[In,Out,A,X]extendsRule[In,Out,A,X]", "kind" : "class"}, {"label" : "FromRule", "tail" : "", "member" : "scala.tools.scalap.scalax.rules.Rules.FromRule", "link" : "scala\/tools\/scalap\/scalax\/rules\/Rules.html#FromRule[In]extendsAnyRef", "kind" : "trait"}, {"label" : "ruleWithName", "tail" : "(name: String, f: (In) => Result[Out, A, X]): Rule[In, Out, A, X] with Name", "member" : "scala.tools.scalap.scalax.rules.MemoisableRules.ruleWithName", "link" : "scala\/tools\/scalap\/scalax\/rules\/MemoisableRules.html#ruleWithName[In,Out,A,X](name:String,f:In=>scala.tools.scalap.scalax.rules.Result[Out,A,X]):scala.tools.scalap.scalax.rules.Rule[In,Out,A,X]withscala.tools.scalap.scalax.rules.Name", "kind" : "def"}, {"label" : "memo", "tail" : "(key: AnyRef)(toRule: => (In) => Result[Out, A, X]): Rule[In, Out, A, X]", "member" : "scala.tools.scalap.scalax.rules.MemoisableRules.memo", "link" : "scala\/tools\/scalap\/scalax\/rules\/MemoisableRules.html#memo[In<:scala.tools.scalap.scalax.rules.Memoisable,Out,A,X](key:AnyRef)(toRule:=>In=>scala.tools.scalap.scalax.rules.Result[Out,A,X]):scala.tools.scalap.scalax.rules.Rule[In,Out,A,X]", "kind" : "def"}, {"label" : "expect", "tail" : "(rule: Rule[In, Out, A, R]): (In) => A", "member" : "scala.tools.scalap.scalax.rules.Rules.expect", "link" : "scala\/tools\/scalap\/scalax\/rules\/MemoisableRules.html#expect[In,Out,A,R](rule:scala.tools.scalap.scalax.rules.Rule[In,Out,A,R]):In=>A", "kind" : "def"}, {"label" : "oneOf", "tail" : "(rules: Rule[In, Out, A, X]*): Rule[In, Out, A, X]", "member" : "scala.tools.scalap.scalax.rules.Rules.oneOf", "link" : "scala\/tools\/scalap\/scalax\/rules\/MemoisableRules.html#oneOf[In,Out,A,X](rules:scala.tools.scalap.scalax.rules.Rule[In,Out,A,X]*):scala.tools.scalap.scalax.rules.Rule[In,Out,A,X]", "kind" : "def"}, {"label" : "error", "tail" : "(err: X): Rule[Any, Nothing, Nothing, X]", "member" : "scala.tools.scalap.scalax.rules.Rules.error", "link" : "scala\/tools\/scalap\/scalax\/rules\/MemoisableRules.html#error[X](err:X):scala.tools.scalap.scalax.rules.Rule[Any,Nothing,Nothing,X]", "kind" : "def"}, {"label" : "error", "tail" : "(): Rule[In, Nothing, Nothing, In]", "member" : "scala.tools.scalap.scalax.rules.Rules.error", "link" : "scala\/tools\/scalap\/scalax\/rules\/MemoisableRules.html#error[In]:scala.tools.scalap.scalax.rules.Rule[In,Nothing,Nothing,In]", "kind" : "def"}, {"label" : "failure", "tail" : "(): Rule[Any, Nothing, Nothing, Nothing]", "member" : "scala.tools.scalap.scalax.rules.Rules.failure", "link" : "scala\/tools\/scalap\/scalax\/rules\/MemoisableRules.html#failure:scala.tools.scalap.scalax.rules.Rule[Any,Nothing,Nothing,Nothing]", "kind" : "def"}, {"label" : "success", "tail" : "(out: Out, a: A): Rule[Any, Out, A, Nothing]", "member" : "scala.tools.scalap.scalax.rules.Rules.success", "link" : "scala\/tools\/scalap\/scalax\/rules\/MemoisableRules.html#success[Out,A](out:Out,a:A):scala.tools.scalap.scalax.rules.Rule[Any,Out,A,Nothing]", "kind" : "def"}, {"label" : "state", "tail" : "(): StateRules { type S = s }", "member" : "scala.tools.scalap.scalax.rules.Rules.state", "link" : "scala\/tools\/scalap\/scalax\/rules\/MemoisableRules.html#state[s]:scala.tools.scalap.scalax.rules.StateRules{typeS=s}", "kind" : "def"}, {"label" : "from", "tail" : "(): FromRule[In]", "member" : "scala.tools.scalap.scalax.rules.Rules.from", "link" : "scala\/tools\/scalap\/scalax\/rules\/MemoisableRules.html#from[In]:Rules.this.FromRule[In]", "kind" : "def"}, {"label" : "seqRule", "tail" : "(rule: Rule[In, In, A, X]): SeqRule[In, A, X]", "member" : "scala.tools.scalap.scalax.rules.Rules.seqRule", "link" : "scala\/tools\/scalap\/scalax\/rules\/MemoisableRules.html#seqRule[In,A,X](rule:scala.tools.scalap.scalax.rules.Rule[In,In,A,X]):scala.tools.scalap.scalax.rules.SeqRule[In,A,X]", "kind" : "implicit def"}, {"label" : "inRule", "tail" : "(rule: Rule[In, Out, A, X]): InRule[In, Out, A, X]", "member" : "scala.tools.scalap.scalax.rules.Rules.inRule", "link" : "scala\/tools\/scalap\/scalax\/rules\/MemoisableRules.html#inRule[In,Out,A,X](rule:scala.tools.scalap.scalax.rules.Rule[In,Out,A,X]):scala.tools.scalap.scalax.rules.InRule[In,Out,A,X]", "kind" : "implicit def"}, {"label" : "rule", "tail" : "(f: (In) => Result[Out, A, X]): Rule[In, Out, A, X]", "member" : "scala.tools.scalap.scalax.rules.Rules.rule", "link" : "scala\/tools\/scalap\/scalax\/rules\/MemoisableRules.html#rule[In,Out,A,X](f:In=>scala.tools.scalap.scalax.rules.Result[Out,A,X]):scala.tools.scalap.scalax.rules.Rule[In,Out,A,X]", "kind" : "implicit def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "scala\/tools\/scalap\/scalax\/rules\/MemoisableRules.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "scala\/tools\/scalap\/scalax\/rules\/MemoisableRules.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "scala\/tools\/scalap\/scalax\/rules\/MemoisableRules.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "scala\/tools\/scalap\/scalax\/rules\/MemoisableRules.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "scala\/tools\/scalap\/scalax\/rules\/MemoisableRules.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "scala\/tools\/scalap\/scalax\/rules\/MemoisableRules.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "scala\/tools\/scalap\/scalax\/rules\/MemoisableRules.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "scala\/tools\/scalap\/scalax\/rules\/MemoisableRules.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "scala\/tools\/scalap\/scalax\/rules\/MemoisableRules.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "scala\/tools\/scalap\/scalax\/rules\/MemoisableRules.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "scala\/tools\/scalap\/scalax\/rules\/MemoisableRules.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "scala\/tools\/scalap\/scalax\/rules\/MemoisableRules.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "scala\/tools\/scalap\/scalax\/rules\/MemoisableRules.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "scala\/tools\/scalap\/scalax\/rules\/MemoisableRules.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "scala\/tools\/scalap\/scalax\/rules\/MemoisableRules.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "scala\/tools\/scalap\/scalax\/rules\/MemoisableRules.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "scala\/tools\/scalap\/scalax\/rules\/MemoisableRules.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "scala\/tools\/scalap\/scalax\/rules\/MemoisableRules.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "scala\/tools\/scalap\/scalax\/rules\/MemoisableRules.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "shortDescription" : ""}, {"name" : "scala.tools.scalap.scalax.rules.Name", "trait" : "scala\/tools\/scalap\/scalax\/rules\/Name.html", "kind" : "trait", "members_trait" : [{"label" : "+", "tail" : "(other: String): String", "member" : "scala.Predef.any2stringadd.+", "link" : "scala\/tools\/scalap\/scalax\/rules\/Name.html#+(other:String):String", "kind" : "def"}, {"label" : "formatted", "tail" : "(fmtstr: String): String", "member" : "scala.Predef.StringFormat.formatted", "link" : "scala\/tools\/scalap\/scalax\/rules\/Name.html#formatted(fmtstr:String):String", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: (Name) => Boolean, msg: => Any): Name", "member" : "scala.Predef.Ensuring.ensuring", "link" : "scala\/tools\/scalap\/scalax\/rules\/Name.html#ensuring(cond:A=>Boolean,msg:=>Any):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: (Name) => Boolean): Name", "member" : "scala.Predef.Ensuring.ensuring", "link" : "scala\/tools\/scalap\/scalax\/rules\/Name.html#ensuring(cond:A=>Boolean):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: Boolean, msg: => Any): Name", "member" : "scala.Predef.Ensuring.ensuring", "link" : "scala\/tools\/scalap\/scalax\/rules\/Name.html#ensuring(cond:Boolean,msg:=>Any):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: Boolean): Name", "member" : "scala.Predef.Ensuring.ensuring", "link" : "scala\/tools\/scalap\/scalax\/rules\/Name.html#ensuring(cond:Boolean):A", "kind" : "def"}, {"label" : "→", "tail" : "(y: B): (Name, B)", "member" : "scala.Predef.ArrowAssoc.→", "link" : "scala\/tools\/scalap\/scalax\/rules\/Name.html#→[B](y:B):(A,B)", "kind" : "def"}, {"label" : "->", "tail" : "(y: B): (Name, B)", "member" : "scala.Predef.ArrowAssoc.->", "link" : "scala\/tools\/scalap\/scalax\/rules\/Name.html#->[B](y:B):(A,B)", "kind" : "def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.tools.scalap.scalax.rules.Name.toString", "link" : "scala\/tools\/scalap\/scalax\/rules\/Name.html#toString():String", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "scala\/tools\/scalap\/scalax\/rules\/Name.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "scala\/tools\/scalap\/scalax\/rules\/Name.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "scala\/tools\/scalap\/scalax\/rules\/Name.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "scala\/tools\/scalap\/scalax\/rules\/Name.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "scala\/tools\/scalap\/scalax\/rules\/Name.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "scala\/tools\/scalap\/scalax\/rules\/Name.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "scala\/tools\/scalap\/scalax\/rules\/Name.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "scala\/tools\/scalap\/scalax\/rules\/Name.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "scala\/tools\/scalap\/scalax\/rules\/Name.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "scala\/tools\/scalap\/scalax\/rules\/Name.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "scala\/tools\/scalap\/scalax\/rules\/Name.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "scala\/tools\/scalap\/scalax\/rules\/Name.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "scala\/tools\/scalap\/scalax\/rules\/Name.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "scala\/tools\/scalap\/scalax\/rules\/Name.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "scala\/tools\/scalap\/scalax\/rules\/Name.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "scala\/tools\/scalap\/scalax\/rules\/Name.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "scala\/tools\/scalap\/scalax\/rules\/Name.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "scala\/tools\/scalap\/scalax\/rules\/Name.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "name", "tail" : "(): String", "member" : "scala.tools.scalap.scalax.rules.Name.name", "link" : "scala\/tools\/scalap\/scalax\/rules\/Name.html#name:String", "kind" : "abstract def"}], "shortDescription" : ""}, {"name" : "scala.tools.scalap.scalax.rules.NoSuccess", "shortDescription" : "", "members_class" : [{"label" : "+", "tail" : "(other: String): String", "member" : "scala.Predef.any2stringadd.+", "link" : "scala\/tools\/scalap\/scalax\/rules\/NoSuccess.html#+(other:String):String", "kind" : "def"}, {"label" : "formatted", "tail" : "(fmtstr: String): String", "member" : "scala.Predef.StringFormat.formatted", "link" : "scala\/tools\/scalap\/scalax\/rules\/NoSuccess.html#formatted(fmtstr:String):String", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: (NoSuccess[X]) => Boolean, msg: => Any): NoSuccess[X]", "member" : "scala.Predef.Ensuring.ensuring", "link" : "scala\/tools\/scalap\/scalax\/rules\/NoSuccess.html#ensuring(cond:A=>Boolean,msg:=>Any):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: (NoSuccess[X]) => Boolean): NoSuccess[X]", "member" : "scala.Predef.Ensuring.ensuring", "link" : "scala\/tools\/scalap\/scalax\/rules\/NoSuccess.html#ensuring(cond:A=>Boolean):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: Boolean, msg: => Any): NoSuccess[X]", "member" : "scala.Predef.Ensuring.ensuring", "link" : "scala\/tools\/scalap\/scalax\/rules\/NoSuccess.html#ensuring(cond:Boolean,msg:=>Any):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: Boolean): NoSuccess[X]", "member" : "scala.Predef.Ensuring.ensuring", "link" : "scala\/tools\/scalap\/scalax\/rules\/NoSuccess.html#ensuring(cond:Boolean):A", "kind" : "def"}, {"label" : "→", "tail" : "(y: B): (NoSuccess[X], B)", "member" : "scala.Predef.ArrowAssoc.→", "link" : "scala\/tools\/scalap\/scalax\/rules\/NoSuccess.html#→[B](y:B):(A,B)", "kind" : "def"}, {"label" : "->", "tail" : "(y: B): (NoSuccess[X], B)", "member" : "scala.Predef.ArrowAssoc.->", "link" : "scala\/tools\/scalap\/scalax\/rules\/NoSuccess.html#->[B](y:B):(A,B)", "kind" : "def"}, {"label" : "orElse", "tail" : "(other: => Result[Out2, B, Nothing]): Result[Out2, B, Nothing]", "member" : "scala.tools.scalap.scalax.rules.NoSuccess.orElse", "link" : "scala\/tools\/scalap\/scalax\/rules\/NoSuccess.html#orElse[Out2,B](other:=>scala.tools.scalap.scalax.rules.Result[Out2,B,Nothing]):scala.tools.scalap.scalax.rules.Result[Out2,B,Nothing]", "kind" : "def"}, {"label" : "flatMap", "tail" : "(f: (Nothing, Nothing) => Result[Out2, B, Nothing]): NoSuccess[X]", "member" : "scala.tools.scalap.scalax.rules.NoSuccess.flatMap", "link" : "scala\/tools\/scalap\/scalax\/rules\/NoSuccess.html#flatMap[Out2,B](f:(Nothing,Nothing)=>scala.tools.scalap.scalax.rules.Result[Out2,B,Nothing]):scala.tools.scalap.scalax.rules.NoSuccess[X]", "kind" : "def"}, {"label" : "map", "tail" : "(f: (Nothing, Nothing) => (Out2, B)): NoSuccess[X]", "member" : "scala.tools.scalap.scalax.rules.NoSuccess.map", "link" : "scala\/tools\/scalap\/scalax\/rules\/NoSuccess.html#map[Out2,B](f:(Nothing,Nothing)=>(Out2,B)):scala.tools.scalap.scalax.rules.NoSuccess[X]", "kind" : "def"}, {"label" : "mapOut", "tail" : "(f: (Nothing) => Out2): NoSuccess[X]", "member" : "scala.tools.scalap.scalax.rules.NoSuccess.mapOut", "link" : "scala\/tools\/scalap\/scalax\/rules\/NoSuccess.html#mapOut[Out2](f:Nothing=>Out2):scala.tools.scalap.scalax.rules.NoSuccess[X]", "kind" : "def"}, {"label" : "map", "tail" : "(f: (Nothing) => B): NoSuccess[X]", "member" : "scala.tools.scalap.scalax.rules.NoSuccess.map", "link" : "scala\/tools\/scalap\/scalax\/rules\/NoSuccess.html#map[B](f:Nothing=>B):scala.tools.scalap.scalax.rules.NoSuccess[X]", "kind" : "def"}, {"label" : "toOption", "tail" : "(): None", "member" : "scala.tools.scalap.scalax.rules.NoSuccess.toOption", "link" : "scala\/tools\/scalap\/scalax\/rules\/NoSuccess.html#toOption:None.type", "kind" : "def"}, {"label" : "value", "tail" : "(): Nothing", "member" : "scala.tools.scalap.scalax.rules.NoSuccess.value", "link" : "scala\/tools\/scalap\/scalax\/rules\/NoSuccess.html#value:Nothing", "kind" : "def"}, {"label" : "out", "tail" : "(): Nothing", "member" : "scala.tools.scalap.scalax.rules.NoSuccess.out", "link" : "scala\/tools\/scalap\/scalax\/rules\/NoSuccess.html#out:Nothing", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "scala\/tools\/scalap\/scalax\/rules\/NoSuccess.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "scala\/tools\/scalap\/scalax\/rules\/NoSuccess.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "scala\/tools\/scalap\/scalax\/rules\/NoSuccess.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "scala\/tools\/scalap\/scalax\/rules\/NoSuccess.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "scala\/tools\/scalap\/scalax\/rules\/NoSuccess.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "scala\/tools\/scalap\/scalax\/rules\/NoSuccess.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "scala\/tools\/scalap\/scalax\/rules\/NoSuccess.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "scala\/tools\/scalap\/scalax\/rules\/NoSuccess.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "scala\/tools\/scalap\/scalax\/rules\/NoSuccess.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "scala\/tools\/scalap\/scalax\/rules\/NoSuccess.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "scala\/tools\/scalap\/scalax\/rules\/NoSuccess.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "scala\/tools\/scalap\/scalax\/rules\/NoSuccess.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "scala\/tools\/scalap\/scalax\/rules\/NoSuccess.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "scala\/tools\/scalap\/scalax\/rules\/NoSuccess.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "scala\/tools\/scalap\/scalax\/rules\/NoSuccess.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "scala\/tools\/scalap\/scalax\/rules\/NoSuccess.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "scala\/tools\/scalap\/scalax\/rules\/NoSuccess.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "scala\/tools\/scalap\/scalax\/rules\/NoSuccess.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "scala\/tools\/scalap\/scalax\/rules\/NoSuccess.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "error", "tail" : "(): X", "member" : "scala.tools.scalap.scalax.rules.Result.error", "link" : "scala\/tools\/scalap\/scalax\/rules\/NoSuccess.html#error:X", "kind" : "abstract def"}], "class" : "scala\/tools\/scalap\/scalax\/rules\/NoSuccess.html", "kind" : "class"}, {"name" : "scala.tools.scalap.scalax.rules.Result", "shortDescription" : "", "members_class" : [{"label" : "+", "tail" : "(other: String): String", "member" : "scala.Predef.any2stringadd.+", "link" : "scala\/tools\/scalap\/scalax\/rules\/Result.html#+(other:String):String", "kind" : "def"}, {"label" : "formatted", "tail" : "(fmtstr: String): String", "member" : "scala.Predef.StringFormat.formatted", "link" : "scala\/tools\/scalap\/scalax\/rules\/Result.html#formatted(fmtstr:String):String", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: (Result[Out, A, X]) => Boolean, msg: => Any): Result[Out, A, X]", "member" : "scala.Predef.Ensuring.ensuring", "link" : "scala\/tools\/scalap\/scalax\/rules\/Result.html#ensuring(cond:A=>Boolean,msg:=>Any):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: (Result[Out, A, X]) => Boolean): Result[Out, A, X]", "member" : "scala.Predef.Ensuring.ensuring", "link" : "scala\/tools\/scalap\/scalax\/rules\/Result.html#ensuring(cond:A=>Boolean):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: Boolean, msg: => Any): Result[Out, A, X]", "member" : "scala.Predef.Ensuring.ensuring", "link" : "scala\/tools\/scalap\/scalax\/rules\/Result.html#ensuring(cond:Boolean,msg:=>Any):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: Boolean): Result[Out, A, X]", "member" : "scala.Predef.Ensuring.ensuring", "link" : "scala\/tools\/scalap\/scalax\/rules\/Result.html#ensuring(cond:Boolean):A", "kind" : "def"}, {"label" : "→", "tail" : "(y: B): (Result[Out, A, X], B)", "member" : "scala.Predef.ArrowAssoc.→", "link" : "scala\/tools\/scalap\/scalax\/rules\/Result.html#→[B](y:B):(A,B)", "kind" : "def"}, {"label" : "->", "tail" : "(y: B): (Result[Out, A, X], B)", "member" : "scala.Predef.ArrowAssoc.->", "link" : "scala\/tools\/scalap\/scalax\/rules\/Result.html#->[B](y:B):(A,B)", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "scala\/tools\/scalap\/scalax\/rules\/Result.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "scala\/tools\/scalap\/scalax\/rules\/Result.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "scala\/tools\/scalap\/scalax\/rules\/Result.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "scala\/tools\/scalap\/scalax\/rules\/Result.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "scala\/tools\/scalap\/scalax\/rules\/Result.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "scala\/tools\/scalap\/scalax\/rules\/Result.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "scala\/tools\/scalap\/scalax\/rules\/Result.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "scala\/tools\/scalap\/scalax\/rules\/Result.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "scala\/tools\/scalap\/scalax\/rules\/Result.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "scala\/tools\/scalap\/scalax\/rules\/Result.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "scala\/tools\/scalap\/scalax\/rules\/Result.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "scala\/tools\/scalap\/scalax\/rules\/Result.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "scala\/tools\/scalap\/scalax\/rules\/Result.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "scala\/tools\/scalap\/scalax\/rules\/Result.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "scala\/tools\/scalap\/scalax\/rules\/Result.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "scala\/tools\/scalap\/scalax\/rules\/Result.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "scala\/tools\/scalap\/scalax\/rules\/Result.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "scala\/tools\/scalap\/scalax\/rules\/Result.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "scala\/tools\/scalap\/scalax\/rules\/Result.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "orElse", "tail" : "(other: => Result[Out2, B, Nothing]): Result[Out2, B, X]", "member" : "scala.tools.scalap.scalax.rules.Result.orElse", "link" : "scala\/tools\/scalap\/scalax\/rules\/Result.html#orElse[Out2>:Out,B>:A](other:=>scala.tools.scalap.scalax.rules.Result[Out2,B,Nothing]):scala.tools.scalap.scalax.rules.Result[Out2,B,X]", "kind" : "abstract def"}, {"label" : "flatMap", "tail" : "(f: (Out, A) => Result[Out2, B, Nothing]): Result[Out2, B, X]", "member" : "scala.tools.scalap.scalax.rules.Result.flatMap", "link" : "scala\/tools\/scalap\/scalax\/rules\/Result.html#flatMap[Out2,B](f:(Out,A)=>scala.tools.scalap.scalax.rules.Result[Out2,B,Nothing]):scala.tools.scalap.scalax.rules.Result[Out2,B,X]", "kind" : "abstract def"}, {"label" : "map", "tail" : "(f: (Out, A) => (Out2, B)): Result[Out2, B, X]", "member" : "scala.tools.scalap.scalax.rules.Result.map", "link" : "scala\/tools\/scalap\/scalax\/rules\/Result.html#map[Out2,B](f:(Out,A)=>(Out2,B)):scala.tools.scalap.scalax.rules.Result[Out2,B,X]", "kind" : "abstract def"}, {"label" : "mapOut", "tail" : "(f: (Out) => Out2): Result[Out2, A, X]", "member" : "scala.tools.scalap.scalax.rules.Result.mapOut", "link" : "scala\/tools\/scalap\/scalax\/rules\/Result.html#mapOut[Out2](f:Out=>Out2):scala.tools.scalap.scalax.rules.Result[Out2,A,X]", "kind" : "abstract def"}, {"label" : "map", "tail" : "(f: (A) => B): Result[Out, B, X]", "member" : "scala.tools.scalap.scalax.rules.Result.map", "link" : "scala\/tools\/scalap\/scalax\/rules\/Result.html#map[B](f:A=>B):scala.tools.scalap.scalax.rules.Result[Out,B,X]", "kind" : "abstract def"}, {"label" : "toOption", "tail" : "(): Option[A]", "member" : "scala.tools.scalap.scalax.rules.Result.toOption", "link" : "scala\/tools\/scalap\/scalax\/rules\/Result.html#toOption:Option[A]", "kind" : "implicit abstract def"}, {"label" : "error", "tail" : "(): X", "member" : "scala.tools.scalap.scalax.rules.Result.error", "link" : "scala\/tools\/scalap\/scalax\/rules\/Result.html#error:X", "kind" : "abstract def"}, {"label" : "value", "tail" : "(): A", "member" : "scala.tools.scalap.scalax.rules.Result.value", "link" : "scala\/tools\/scalap\/scalax\/rules\/Result.html#value:A", "kind" : "abstract def"}, {"label" : "out", "tail" : "(): Out", "member" : "scala.tools.scalap.scalax.rules.Result.out", "link" : "scala\/tools\/scalap\/scalax\/rules\/Result.html#out:Out", "kind" : "abstract def"}], "class" : "scala\/tools\/scalap\/scalax\/rules\/Result.html", "kind" : "class"}, {"name" : "scala.tools.scalap.scalax.rules.Rule", "trait" : "scala\/tools\/scalap\/scalax\/rules\/Rule.html", "kind" : "trait", "members_trait" : [{"label" : "+", "tail" : "(other: String): String", "member" : "scala.Predef.any2stringadd.+", "link" : "scala\/tools\/scalap\/scalax\/rules\/Rule.html#+(other:String):String", "kind" : "def"}, {"label" : "formatted", "tail" : "(fmtstr: String): String", "member" : "scala.Predef.StringFormat.formatted", "link" : "scala\/tools\/scalap\/scalax\/rules\/Rule.html#formatted(fmtstr:String):String", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: (Rule[In, Out, A, X]) => Boolean, msg: => Any): Rule[In, Out, A, X]", "member" : "scala.Predef.Ensuring.ensuring", "link" : "scala\/tools\/scalap\/scalax\/rules\/Rule.html#ensuring(cond:A=>Boolean,msg:=>Any):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: (Rule[In, Out, A, X]) => Boolean): Rule[In, Out, A, X]", "member" : "scala.Predef.Ensuring.ensuring", "link" : "scala\/tools\/scalap\/scalax\/rules\/Rule.html#ensuring(cond:A=>Boolean):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: Boolean, msg: => Any): Rule[In, Out, A, X]", "member" : "scala.Predef.Ensuring.ensuring", "link" : "scala\/tools\/scalap\/scalax\/rules\/Rule.html#ensuring(cond:Boolean,msg:=>Any):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: Boolean): Rule[In, Out, A, X]", "member" : "scala.Predef.Ensuring.ensuring", "link" : "scala\/tools\/scalap\/scalax\/rules\/Rule.html#ensuring(cond:Boolean):A", "kind" : "def"}, {"label" : "→", "tail" : "(y: B): (Rule[In, Out, A, X], B)", "member" : "scala.Predef.ArrowAssoc.→", "link" : "scala\/tools\/scalap\/scalax\/rules\/Rule.html#→[B](y:B):(A,B)", "kind" : "def"}, {"label" : "->", "tail" : "(y: B): (Rule[In, Out, A, X], B)", "member" : "scala.Predef.ArrowAssoc.->", "link" : "scala\/tools\/scalap\/scalax\/rules\/Rule.html#->[B](y:B):(A,B)", "kind" : "def"}, {"label" : "^~>~^", "tail" : "(f: (B1, B2, B3) => C)(viewbound_0: (B) => ~[B2, B3]): Rule[In, Out, (B1) => C, X]", "member" : "scala.tools.scalap.scalax.rules.Rule.^~>~^", "link" : "scala\/tools\/scalap\/scalax\/rules\/Rule.html#^~>~^[B1,B2,B3,B>:A,C](f:(B1,B2,B3)=>C)(implicitviewbound_0:B=>B2~B3):scala.tools.scalap.scalax.rules.Rule[In,Out,B1=>C,X]", "kind" : "def"}, {"label" : "^-^", "tail" : "(f: (B1, B2) => C): Rule[In, Out, (B1) => C, X]", "member" : "scala.tools.scalap.scalax.rules.Rule.^-^", "link" : "scala\/tools\/scalap\/scalax\/rules\/Rule.html#^-^[B1,B2>:A,C](f:(B1,B2)=>C):scala.tools.scalap.scalax.rules.Rule[In,Out,B1=>C,X]", "kind" : "def"}, {"label" : ">~>", "tail" : "(f: (B1, B2) => (Out) => Result[Out2, C, X2])(viewbound_0: (B) => ~[B1, B2]): Rule[In, Out2, C, X2]", "member" : "scala.tools.scalap.scalax.rules.Rule.>~>", "link" : "scala\/tools\/scalap\/scalax\/rules\/Rule.html#>~>[Out2,B1,B2,B>:A,C,X2>:X](f:(B1,B2)=>Out=>scala.tools.scalap.scalax.rules.Result[Out2,C,X2])(implicitviewbound_0:B=>B1~B2):scala.tools.scalap.scalax.rules.Rule[In,Out2,C,X2]", "kind" : "def"}, {"label" : "^~~~~~~^", "tail" : "(f: (B1, B2, B3, B4, B5, B6, B7) => C)(viewbound_0: (B) => ~[~[~[~[~[~[B1, B2], B3], B4], B5], B6], B7]): Rule[In, Out, C, X]", "member" : "scala.tools.scalap.scalax.rules.Rule.^~~~~~~^", "link" : "scala\/tools\/scalap\/scalax\/rules\/Rule.html#^~~~~~~^[B1,B2,B3,B4,B5,B6,B7,B>:A,C](f:(B1,B2,B3,B4,B5,B6,B7)=>C)(implicitviewbound_0:B=>B1~B2~B3~B4~B5~B6~B7):scala.tools.scalap.scalax.rules.Rule[In,Out,C,X]", "kind" : "def"}, {"label" : "^~~~~~^", "tail" : "(f: (B1, B2, B3, B4, B5, B6) => C)(viewbound_0: (B) => ~[~[~[~[~[B1, B2], B3], B4], B5], B6]): Rule[In, Out, C, X]", "member" : "scala.tools.scalap.scalax.rules.Rule.^~~~~~^", "link" : "scala\/tools\/scalap\/scalax\/rules\/Rule.html#^~~~~~^[B1,B2,B3,B4,B5,B6,B>:A,C](f:(B1,B2,B3,B4,B5,B6)=>C)(implicitviewbound_0:B=>B1~B2~B3~B4~B5~B6):scala.tools.scalap.scalax.rules.Rule[In,Out,C,X]", "kind" : "def"}, {"label" : "^~~~~^", "tail" : "(f: (B1, B2, B3, B4, B5) => C)(viewbound_0: (B) => ~[~[~[~[B1, B2], B3], B4], B5]): Rule[In, Out, C, X]", "member" : "scala.tools.scalap.scalax.rules.Rule.^~~~~^", "link" : "scala\/tools\/scalap\/scalax\/rules\/Rule.html#^~~~~^[B1,B2,B3,B4,B5,B>:A,C](f:(B1,B2,B3,B4,B5)=>C)(implicitviewbound_0:B=>B1~B2~B3~B4~B5):scala.tools.scalap.scalax.rules.Rule[In,Out,C,X]", "kind" : "def"}, {"label" : "^~~~^", "tail" : "(f: (B1, B2, B3, B4) => C)(viewbound_0: (B) => ~[~[~[B1, B2], B3], B4]): Rule[In, Out, C, X]", "member" : "scala.tools.scalap.scalax.rules.Rule.^~~~^", "link" : "scala\/tools\/scalap\/scalax\/rules\/Rule.html#^~~~^[B1,B2,B3,B4,B>:A,C](f:(B1,B2,B3,B4)=>C)(implicitviewbound_0:B=>B1~B2~B3~B4):scala.tools.scalap.scalax.rules.Rule[In,Out,C,X]", "kind" : "def"}, {"label" : "^~~^", "tail" : "(f: (B1, B2, B3) => C)(viewbound_0: (B) => ~[~[B1, B2], B3]): Rule[In, Out, C, X]", "member" : "scala.tools.scalap.scalax.rules.Rule.^~~^", "link" : "scala\/tools\/scalap\/scalax\/rules\/Rule.html#^~~^[B1,B2,B3,B>:A,C](f:(B1,B2,B3)=>C)(implicitviewbound_0:B=>B1~B2~B3):scala.tools.scalap.scalax.rules.Rule[In,Out,C,X]", "kind" : "def"}, {"label" : "^~^", "tail" : "(f: (B1, B2) => C)(viewbound_0: (B) => ~[B1, B2]): Rule[In, Out, C, X]", "member" : "scala.tools.scalap.scalax.rules.Rule.^~^", "link" : "scala\/tools\/scalap\/scalax\/rules\/Rule.html#^~^[B1,B2,B>:A,C](f:(B1,B2)=>C)(implicitviewbound_0:B=>B1~B2):scala.tools.scalap.scalax.rules.Rule[In,Out,C,X]", "kind" : "def"}, {"label" : "-", "tail" : "(exclude: => Rule[In2, Any, Any, Any]): Rule[In2, Out, A, X]", "member" : "scala.tools.scalap.scalax.rules.Rule.-", "link" : "scala\/tools\/scalap\/scalax\/rules\/Rule.html#-[In2<:In](exclude:=>scala.tools.scalap.scalax.rules.Rule[In2,Any,Any,Any]):scala.tools.scalap.scalax.rules.Rule[In2,Out,A,X]", "kind" : "def"}, {"label" : "-~!", "tail" : "(next: => Rule[Out, Out2, B, X2]): Rule[In, Out2, B, Any]", "member" : "scala.tools.scalap.scalax.rules.Rule.-~!", "link" : "scala\/tools\/scalap\/scalax\/rules\/Rule.html#-~![Out2,B,X2>:X](next:=>scala.tools.scalap.scalax.rules.Rule[Out,Out2,B,X2]):scala.tools.scalap.scalax.rules.Rule[In,Out2,B,Any]", "kind" : "def"}, {"label" : "~-!", "tail" : "(next: => Rule[Out, Out2, B, X2]): Rule[In, Out2, A, Any]", "member" : "scala.tools.scalap.scalax.rules.Rule.~-!", "link" : "scala\/tools\/scalap\/scalax\/rules\/Rule.html#~-![Out2,B,X2>:X](next:=>scala.tools.scalap.scalax.rules.Rule[Out,Out2,B,X2]):scala.tools.scalap.scalax.rules.Rule[In,Out2,A,Any]", "kind" : "def"}, {"label" : "~!", "tail" : "(next: => Rule[Out, Out2, B, X2]): Rule[In, Out2, ~[A, B], Any]", "member" : "scala.tools.scalap.scalax.rules.Rule.~!", "link" : "scala\/tools\/scalap\/scalax\/rules\/Rule.html#~![Out2,B,X2>:X](next:=>scala.tools.scalap.scalax.rules.Rule[Out,Out2,B,X2]):scala.tools.scalap.scalax.rules.Rule[In,Out2,A~B,Any]", "kind" : "def"}, {"label" : "<~:", "tail" : "(prev: => Rule[InPrev, In, (A) => B, X2]): Rule[InPrev, Out, B, X2]", "member" : "scala.tools.scalap.scalax.rules.Rule.<~:", "link" : "scala\/tools\/scalap\/scalax\/rules\/Rule.html#<~:[InPrev,B,X2>:X](prev:=>scala.tools.scalap.scalax.rules.Rule[InPrev,In,A=>B,X2]):scala.tools.scalap.scalax.rules.Rule[InPrev,Out,B,X2]", "kind" : "def"}, {"label" : "~>", "tail" : "(next: => Rule[Out, Out2, (A) => B, X2]): Rule[In, Out2, B, X2]", "member" : "scala.tools.scalap.scalax.rules.Rule.~>", "link" : "scala\/tools\/scalap\/scalax\/rules\/Rule.html#~>[Out2,B,X2>:X](next:=>scala.tools.scalap.scalax.rules.Rule[Out,Out2,A=>B,X2]):scala.tools.scalap.scalax.rules.Rule[In,Out2,B,X2]", "kind" : "def"}, {"label" : "~++", "tail" : "(next: => Rule[Out, Out2, Seq[B], X2]): Rule[In, Out2, collection.immutable.List[B], X2]", "member" : "scala.tools.scalap.scalax.rules.Rule.~++", "link" : "scala\/tools\/scalap\/scalax\/rules\/Rule.html#~++[Out2,B>:A,X2>:X](next:=>scala.tools.scalap.scalax.rules.Rule[Out,Out2,Seq[B],X2]):scala.tools.scalap.scalax.rules.Rule[In,Out2,List[B],X2]", "kind" : "def"}, {"label" : "-~", "tail" : "(next: => Rule[Out, Out2, B, X2]): Rule[In, Out2, B, X2]", "member" : "scala.tools.scalap.scalax.rules.Rule.-~", "link" : "scala\/tools\/scalap\/scalax\/rules\/Rule.html#-~[Out2,B,X2>:X](next:=>scala.tools.scalap.scalax.rules.Rule[Out,Out2,B,X2]):scala.tools.scalap.scalax.rules.Rule[In,Out2,B,X2]", "kind" : "def"}, {"label" : "~-", "tail" : "(next: => Rule[Out, Out2, B, X2]): Rule[In, Out2, A, X2]", "member" : "scala.tools.scalap.scalax.rules.Rule.~-", "link" : "scala\/tools\/scalap\/scalax\/rules\/Rule.html#~-[Out2,B,X2>:X](next:=>scala.tools.scalap.scalax.rules.Rule[Out,Out2,B,X2]):scala.tools.scalap.scalax.rules.Rule[In,Out2,A,X2]", "kind" : "def"}, {"label" : "~", "tail" : "(next: => Rule[Out, Out2, B, X2]): Rule[In, Out2, ~[A, B], X2]", "member" : "scala.tools.scalap.scalax.rules.Rule.~", "link" : "scala\/tools\/scalap\/scalax\/rules\/Rule.html#~[Out2,B,X2>:X](next:=>scala.tools.scalap.scalax.rules.Rule[Out,Out2,B,X2]):scala.tools.scalap.scalax.rules.Rule[In,Out2,A~B,X2]", "kind" : "def"}, {"label" : ">>&", "tail" : "(fa2ruleb: (A) => (Out) => Result[Any, B, X2]): Rule[In, Out, B, X2]", "member" : "scala.tools.scalap.scalax.rules.Rule.>>&", "link" : "scala\/tools\/scalap\/scalax\/rules\/Rule.html#>>&[B,X2>:X](fa2ruleb:A=>(Out=>scala.tools.scalap.scalax.rules.Result[Any,B,X2])):scala.tools.scalap.scalax.rules.Rule[In,Out,B,X2]", "kind" : "def"}, {"label" : ">>?", "tail" : "(pf: PartialFunction[A, Rule[Out, Out2, B, X2]]): Rule[In, Out2, B, X2]", "member" : "scala.tools.scalap.scalax.rules.Rule.>>?", "link" : "scala\/tools\/scalap\/scalax\/rules\/Rule.html#>>?[Out2,B,X2>:X](pf:PartialFunction[A,scala.tools.scalap.scalax.rules.Rule[Out,Out2,B,X2]]):scala.tools.scalap.scalax.rules.Rule[In,Out2,B,X2]", "kind" : "def"}, {"label" : ">->", "tail" : "(fa2resultb: (A) => Result[Out2, B, X2]): Rule[In, Out2, B, X2]", "member" : "scala.tools.scalap.scalax.rules.Rule.>->", "link" : "scala\/tools\/scalap\/scalax\/rules\/Rule.html#>->[Out2,B,X2>:X](fa2resultb:A=>scala.tools.scalap.scalax.rules.Result[Out2,B,X2]):scala.tools.scalap.scalax.rules.Rule[In,Out2,B,X2]", "kind" : "def"}, {"label" : ">>", "tail" : "(fa2ruleb: (A) => (Out) => Result[Out2, B, X2]): Rule[In, Out2, B, X2]", "member" : "scala.tools.scalap.scalax.rules.Rule.>>", "link" : "scala\/tools\/scalap\/scalax\/rules\/Rule.html#>>[Out2,B,X2>:X](fa2ruleb:A=>(Out=>scala.tools.scalap.scalax.rules.Result[Out2,B,X2])):scala.tools.scalap.scalax.rules.Rule[In,Out2,B,X2]", "kind" : "def"}, {"label" : "!^", "tail" : "(fx2y: (X) => Y): Rule[In, Out, A, Y]", "member" : "scala.tools.scalap.scalax.rules.Rule.!^", "link" : "scala\/tools\/scalap\/scalax\/rules\/Rule.html#!^[Y](fx2y:X=>Y):scala.tools.scalap.scalax.rules.Rule[In,Out,A,Y]", "kind" : "def"}, {"label" : "-^", "tail" : "(b: B): Rule[In, Out, B, X]", "member" : "scala.tools.scalap.scalax.rules.Rule.-^", "link" : "scala\/tools\/scalap\/scalax\/rules\/Rule.html#-^[B](b:B):scala.tools.scalap.scalax.rules.Rule[In,Out,B,X]", "kind" : "def"}, {"label" : "??", "tail" : "(pf: PartialFunction[A, Any]): Rule[In, Out, A, X]", "member" : "scala.tools.scalap.scalax.rules.Rule.??", "link" : "scala\/tools\/scalap\/scalax\/rules\/Rule.html#??(pf:PartialFunction[A,Any]):scala.tools.scalap.scalax.rules.Rule[In,Out,A,X]", "kind" : "def"}, {"label" : "^^?", "tail" : "(pf: PartialFunction[A, B]): Rule[In, Out, B, X]", "member" : "scala.tools.scalap.scalax.rules.Rule.^^?", "link" : "scala\/tools\/scalap\/scalax\/rules\/Rule.html#^^?[B](pf:PartialFunction[A,B]):scala.tools.scalap.scalax.rules.Rule[In,Out,B,X]", "kind" : "def"}, {"label" : "^^", "tail" : "(fa2b: (A) => B): Rule[In, Out, B, X]", "member" : "scala.tools.scalap.scalax.rules.Rule.^^", "link" : "scala\/tools\/scalap\/scalax\/rules\/Rule.html#^^[B](fa2b:A=>B):scala.tools.scalap.scalax.rules.Rule[In,Out,B,X]", "kind" : "def"}, {"label" : "|", "tail" : "(other: => Rule[In2, Out2, A2, X2]): Rule[In2, Out2, A2, X2]", "member" : "scala.tools.scalap.scalax.rules.Rule.|", "link" : "scala\/tools\/scalap\/scalax\/rules\/Rule.html#|[In2<:In,Out2>:Out,A2>:A,X2>:X](other:=>scala.tools.scalap.scalax.rules.Rule[In2,Out2,A2,X2]):scala.tools.scalap.scalax.rules.Rule[In2,Out2,A2,X2]", "kind" : "def"}, {"label" : "orError", "tail" : "(): Rule[In, Out, A, Any]", "member" : "scala.tools.scalap.scalax.rules.Rule.orError", "link" : "scala\/tools\/scalap\/scalax\/rules\/Rule.html#orError[In2<:In]:scala.tools.scalap.scalax.rules.Rule[In,Out,A,Any]", "kind" : "def"}, {"label" : "orElse", "tail" : "(other: => Rule[In2, Out2, A2, X2]): Rule[In2, Out2, A2, X2]", "member" : "scala.tools.scalap.scalax.rules.Rule.orElse", "link" : "scala\/tools\/scalap\/scalax\/rules\/Rule.html#orElse[In2<:In,Out2>:Out,A2>:A,X2>:X](other:=>scala.tools.scalap.scalax.rules.Rule[In2,Out2,A2,X2]):scala.tools.scalap.scalax.rules.Rule[In2,Out2,A2,X2]", "kind" : "def"}, {"label" : "mapResult", "tail" : "(f: (Result[Out, A, X]) => Result[Out2, B, Y]): Rule[In, Out2, B, Y]", "member" : "scala.tools.scalap.scalax.rules.Rule.mapResult", "link" : "scala\/tools\/scalap\/scalax\/rules\/Rule.html#mapResult[Out2,B,Y](f:scala.tools.scalap.scalax.rules.Result[Out,A,X]=>scala.tools.scalap.scalax.rules.Result[Out2,B,Y]):scala.tools.scalap.scalax.rules.Rule[In,Out2,B,Y]", "kind" : "def"}, {"label" : "filter", "tail" : "(f: (A) => Boolean): Rule[In, Out, A, X]", "member" : "scala.tools.scalap.scalax.rules.Rule.filter", "link" : "scala\/tools\/scalap\/scalax\/rules\/Rule.html#filter(f:A=>Boolean):scala.tools.scalap.scalax.rules.Rule[In,Out,A,X]", "kind" : "def"}, {"label" : "map", "tail" : "(fa2b: (A) => B): Rule[In, Out, B, X]", "member" : "scala.tools.scalap.scalax.rules.Rule.map", "link" : "scala\/tools\/scalap\/scalax\/rules\/Rule.html#map[B](fa2b:A=>B):scala.tools.scalap.scalax.rules.Rule[In,Out,B,X]", "kind" : "def"}, {"label" : "flatMap", "tail" : "(fa2ruleb: (A) => (Out) => Result[Out2, B, X2]): Rule[In, Out2, B, X2]", "member" : "scala.tools.scalap.scalax.rules.Rule.flatMap", "link" : "scala\/tools\/scalap\/scalax\/rules\/Rule.html#flatMap[Out2,B,X2>:X](fa2ruleb:A=>(Out=>scala.tools.scalap.scalax.rules.Result[Out2,B,X2])):scala.tools.scalap.scalax.rules.Rule[In,Out2,B,X2]", "kind" : "def"}, {"label" : "as", "tail" : "(name: String): Rule[In, Out, A, X] with Name", "member" : "scala.tools.scalap.scalax.rules.Rule.as", "link" : "scala\/tools\/scalap\/scalax\/rules\/Rule.html#as(name:String):scala.tools.scalap.scalax.rules.Rule[In,Out,A,X]withscala.tools.scalap.scalax.rules.Name", "kind" : "def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.Function1.toString", "link" : "scala\/tools\/scalap\/scalax\/rules\/Rule.html#toString():String", "kind" : "def"}, {"label" : "andThen", "tail" : "(g: (Result[Out, A, X]) => A): (In) => A", "member" : "scala.Function1.andThen", "link" : "scala\/tools\/scalap\/scalax\/rules\/Rule.html#andThen[A](g:R=>A):T1=>A", "kind" : "def"}, {"label" : "compose", "tail" : "(g: (A) => In): (A) => Result[Out, A, X]", "member" : "scala.Function1.compose", "link" : "scala\/tools\/scalap\/scalax\/rules\/Rule.html#compose[A](g:A=>T1):A=>R", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "scala\/tools\/scalap\/scalax\/rules\/Rule.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "scala\/tools\/scalap\/scalax\/rules\/Rule.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "scala\/tools\/scalap\/scalax\/rules\/Rule.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "scala\/tools\/scalap\/scalax\/rules\/Rule.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "scala\/tools\/scalap\/scalax\/rules\/Rule.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "scala\/tools\/scalap\/scalax\/rules\/Rule.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "scala\/tools\/scalap\/scalax\/rules\/Rule.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "scala\/tools\/scalap\/scalax\/rules\/Rule.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "scala\/tools\/scalap\/scalax\/rules\/Rule.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "scala\/tools\/scalap\/scalax\/rules\/Rule.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "scala\/tools\/scalap\/scalax\/rules\/Rule.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "scala\/tools\/scalap\/scalax\/rules\/Rule.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "scala\/tools\/scalap\/scalax\/rules\/Rule.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "scala\/tools\/scalap\/scalax\/rules\/Rule.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "scala\/tools\/scalap\/scalax\/rules\/Rule.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "scala\/tools\/scalap\/scalax\/rules\/Rule.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "scala\/tools\/scalap\/scalax\/rules\/Rule.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "scala\/tools\/scalap\/scalax\/rules\/Rule.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "factory", "tail" : ": Rules", "member" : "scala.tools.scalap.scalax.rules.Rule.factory", "link" : "scala\/tools\/scalap\/scalax\/rules\/Rule.html#factory:scala.tools.scalap.scalax.rules.Rules", "kind" : "abstract val"}, {"label" : "apply", "tail" : "(v1: In): Result[Out, A, X]", "member" : "scala.Function1.apply", "link" : "scala\/tools\/scalap\/scalax\/rules\/Rule.html#apply(v1:T1):R", "kind" : "abstract def"}], "shortDescription" : "A Rule is a function from some input to a Result."}, {"name" : "scala.tools.scalap.scalax.rules.Rules", "trait" : "scala\/tools\/scalap\/scalax\/rules\/Rules.html", "kind" : "trait", "members_trait" : [{"label" : "+", "tail" : "(other: String): String", "member" : "scala.Predef.any2stringadd.+", "link" : "scala\/tools\/scalap\/scalax\/rules\/Rules.html#+(other:String):String", "kind" : "def"}, {"label" : "formatted", "tail" : "(fmtstr: String): String", "member" : "scala.Predef.StringFormat.formatted", "link" : "scala\/tools\/scalap\/scalax\/rules\/Rules.html#formatted(fmtstr:String):String", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: (Rules) => Boolean, msg: => Any): Rules", "member" : "scala.Predef.Ensuring.ensuring", "link" : "scala\/tools\/scalap\/scalax\/rules\/Rules.html#ensuring(cond:A=>Boolean,msg:=>Any):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: (Rules) => Boolean): Rules", "member" : "scala.Predef.Ensuring.ensuring", "link" : "scala\/tools\/scalap\/scalax\/rules\/Rules.html#ensuring(cond:A=>Boolean):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: Boolean, msg: => Any): Rules", "member" : "scala.Predef.Ensuring.ensuring", "link" : "scala\/tools\/scalap\/scalax\/rules\/Rules.html#ensuring(cond:Boolean,msg:=>Any):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: Boolean): Rules", "member" : "scala.Predef.Ensuring.ensuring", "link" : "scala\/tools\/scalap\/scalax\/rules\/Rules.html#ensuring(cond:Boolean):A", "kind" : "def"}, {"label" : "→", "tail" : "(y: B): (Rules, B)", "member" : "scala.Predef.ArrowAssoc.→", "link" : "scala\/tools\/scalap\/scalax\/rules\/Rules.html#→[B](y:B):(A,B)", "kind" : "def"}, {"label" : "->", "tail" : "(y: B): (Rules, B)", "member" : "scala.Predef.ArrowAssoc.->", "link" : "scala\/tools\/scalap\/scalax\/rules\/Rules.html#->[B](y:B):(A,B)", "kind" : "def"}, {"label" : "expect", "tail" : "(rule: Rule[In, Out, A, R]): (In) => A", "member" : "scala.tools.scalap.scalax.rules.Rules.expect", "link" : "scala\/tools\/scalap\/scalax\/rules\/Rules.html#expect[In,Out,A,R](rule:scala.tools.scalap.scalax.rules.Rule[In,Out,A,R]):In=>A", "kind" : "def"}, {"label" : "DefaultRule", "tail" : "", "member" : "scala.tools.scalap.scalax.rules.Rules.DefaultRule", "link" : "scala\/tools\/scalap\/scalax\/rules\/Rules.html#DefaultRule[In,Out,A,X]extendsRule[In,Out,A,X]", "kind" : "class"}, {"label" : "ruleWithName", "tail" : "(_name: String, f: (In) => Result[Out, A, X]): Rule[In, Out, A, X] with Name", "member" : "scala.tools.scalap.scalax.rules.Rules.ruleWithName", "link" : "scala\/tools\/scalap\/scalax\/rules\/Rules.html#ruleWithName[In,Out,A,X](_name:String,f:In=>scala.tools.scalap.scalax.rules.Result[Out,A,X]):scala.tools.scalap.scalax.rules.Rule[In,Out,A,X]withscala.tools.scalap.scalax.rules.Name", "kind" : "def"}, {"label" : "oneOf", "tail" : "(rules: Rule[In, Out, A, X]*): Rule[In, Out, A, X]", "member" : "scala.tools.scalap.scalax.rules.Rules.oneOf", "link" : "scala\/tools\/scalap\/scalax\/rules\/Rules.html#oneOf[In,Out,A,X](rules:scala.tools.scalap.scalax.rules.Rule[In,Out,A,X]*):scala.tools.scalap.scalax.rules.Rule[In,Out,A,X]", "kind" : "def"}, {"label" : "error", "tail" : "(err: X): Rule[Any, Nothing, Nothing, X]", "member" : "scala.tools.scalap.scalax.rules.Rules.error", "link" : "scala\/tools\/scalap\/scalax\/rules\/Rules.html#error[X](err:X):scala.tools.scalap.scalax.rules.Rule[Any,Nothing,Nothing,X]", "kind" : "def"}, {"label" : "error", "tail" : "(): Rule[In, Nothing, Nothing, In]", "member" : "scala.tools.scalap.scalax.rules.Rules.error", "link" : "scala\/tools\/scalap\/scalax\/rules\/Rules.html#error[In]:scala.tools.scalap.scalax.rules.Rule[In,Nothing,Nothing,In]", "kind" : "def"}, {"label" : "failure", "tail" : "(): Rule[Any, Nothing, Nothing, Nothing]", "member" : "scala.tools.scalap.scalax.rules.Rules.failure", "link" : "scala\/tools\/scalap\/scalax\/rules\/Rules.html#failure:scala.tools.scalap.scalax.rules.Rule[Any,Nothing,Nothing,Nothing]", "kind" : "def"}, {"label" : "success", "tail" : "(out: Out, a: A): Rule[Any, Out, A, Nothing]", "member" : "scala.tools.scalap.scalax.rules.Rules.success", "link" : "scala\/tools\/scalap\/scalax\/rules\/Rules.html#success[Out,A](out:Out,a:A):scala.tools.scalap.scalax.rules.Rule[Any,Out,A,Nothing]", "kind" : "def"}, {"label" : "state", "tail" : "(): StateRules { type S = s }", "member" : "scala.tools.scalap.scalax.rules.Rules.state", "link" : "scala\/tools\/scalap\/scalax\/rules\/Rules.html#state[s]:scala.tools.scalap.scalax.rules.StateRules{typeS=s}", "kind" : "def"}, {"label" : "from", "tail" : "(): FromRule[In]", "member" : "scala.tools.scalap.scalax.rules.Rules.from", "link" : "scala\/tools\/scalap\/scalax\/rules\/Rules.html#from[In]:Rules.this.FromRule[In]", "kind" : "def"}, {"label" : "FromRule", "tail" : "", "member" : "scala.tools.scalap.scalax.rules.Rules.FromRule", "link" : "scala\/tools\/scalap\/scalax\/rules\/Rules.html#FromRule[In]extendsAnyRef", "kind" : "trait"}, {"label" : "seqRule", "tail" : "(rule: Rule[In, In, A, X]): SeqRule[In, A, X]", "member" : "scala.tools.scalap.scalax.rules.Rules.seqRule", "link" : "scala\/tools\/scalap\/scalax\/rules\/Rules.html#seqRule[In,A,X](rule:scala.tools.scalap.scalax.rules.Rule[In,In,A,X]):scala.tools.scalap.scalax.rules.SeqRule[In,A,X]", "kind" : "implicit def"}, {"label" : "inRule", "tail" : "(rule: Rule[In, Out, A, X]): InRule[In, Out, A, X]", "member" : "scala.tools.scalap.scalax.rules.Rules.inRule", "link" : "scala\/tools\/scalap\/scalax\/rules\/Rules.html#inRule[In,Out,A,X](rule:scala.tools.scalap.scalax.rules.Rule[In,Out,A,X]):scala.tools.scalap.scalax.rules.InRule[In,Out,A,X]", "kind" : "implicit def"}, {"label" : "rule", "tail" : "(f: (In) => Result[Out, A, X]): Rule[In, Out, A, X]", "member" : "scala.tools.scalap.scalax.rules.Rules.rule", "link" : "scala\/tools\/scalap\/scalax\/rules\/Rules.html#rule[In,Out,A,X](f:In=>scala.tools.scalap.scalax.rules.Result[Out,A,X]):scala.tools.scalap.scalax.rules.Rule[In,Out,A,X]", "kind" : "implicit def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "scala\/tools\/scalap\/scalax\/rules\/Rules.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "scala\/tools\/scalap\/scalax\/rules\/Rules.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "scala\/tools\/scalap\/scalax\/rules\/Rules.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "scala\/tools\/scalap\/scalax\/rules\/Rules.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "scala\/tools\/scalap\/scalax\/rules\/Rules.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "scala\/tools\/scalap\/scalax\/rules\/Rules.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "scala\/tools\/scalap\/scalax\/rules\/Rules.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "scala\/tools\/scalap\/scalax\/rules\/Rules.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "scala\/tools\/scalap\/scalax\/rules\/Rules.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "scala\/tools\/scalap\/scalax\/rules\/Rules.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "scala\/tools\/scalap\/scalax\/rules\/Rules.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "scala\/tools\/scalap\/scalax\/rules\/Rules.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "scala\/tools\/scalap\/scalax\/rules\/Rules.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "scala\/tools\/scalap\/scalax\/rules\/Rules.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "scala\/tools\/scalap\/scalax\/rules\/Rules.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "scala\/tools\/scalap\/scalax\/rules\/Rules.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "scala\/tools\/scalap\/scalax\/rules\/Rules.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "scala\/tools\/scalap\/scalax\/rules\/Rules.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "scala\/tools\/scalap\/scalax\/rules\/Rules.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "shortDescription" : "A factory for rules."}, {"name" : "scala.tools.scalap.scalax.rules.RulesWithState", "trait" : "scala\/tools\/scalap\/scalax\/rules\/RulesWithState.html", "kind" : "trait", "members_trait" : [{"label" : "+", "tail" : "(other: String): String", "member" : "scala.Predef.any2stringadd.+", "link" : "scala\/tools\/scalap\/scalax\/rules\/RulesWithState.html#+(other:String):String", "kind" : "def"}, {"label" : "formatted", "tail" : "(fmtstr: String): String", "member" : "scala.Predef.StringFormat.formatted", "link" : "scala\/tools\/scalap\/scalax\/rules\/RulesWithState.html#formatted(fmtstr:String):String", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: (RulesWithState) => Boolean, msg: => Any): RulesWithState", "member" : "scala.Predef.Ensuring.ensuring", "link" : "scala\/tools\/scalap\/scalax\/rules\/RulesWithState.html#ensuring(cond:A=>Boolean,msg:=>Any):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: (RulesWithState) => Boolean): RulesWithState", "member" : "scala.Predef.Ensuring.ensuring", "link" : "scala\/tools\/scalap\/scalax\/rules\/RulesWithState.html#ensuring(cond:A=>Boolean):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: Boolean, msg: => Any): RulesWithState", "member" : "scala.Predef.Ensuring.ensuring", "link" : "scala\/tools\/scalap\/scalax\/rules\/RulesWithState.html#ensuring(cond:Boolean,msg:=>Any):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: Boolean): RulesWithState", "member" : "scala.Predef.Ensuring.ensuring", "link" : "scala\/tools\/scalap\/scalax\/rules\/RulesWithState.html#ensuring(cond:Boolean):A", "kind" : "def"}, {"label" : "→", "tail" : "(y: B): (RulesWithState, B)", "member" : "scala.Predef.ArrowAssoc.→", "link" : "scala\/tools\/scalap\/scalax\/rules\/RulesWithState.html#→[B](y:B):(A,B)", "kind" : "def"}, {"label" : "->", "tail" : "(y: B): (RulesWithState, B)", "member" : "scala.Predef.ArrowAssoc.->", "link" : "scala\/tools\/scalap\/scalax\/rules\/RulesWithState.html#->[B](y:B):(A,B)", "kind" : "def"}, {"label" : "DefaultRule", "tail" : "", "member" : "scala.tools.scalap.scalax.rules.Rules.DefaultRule", "link" : "scala\/tools\/scalap\/scalax\/rules\/Rules.html#DefaultRule[In,Out,A,X]extendsRule[In,Out,A,X]", "kind" : "class"}, {"label" : "FromRule", "tail" : "", "member" : "scala.tools.scalap.scalax.rules.Rules.FromRule", "link" : "scala\/tools\/scalap\/scalax\/rules\/Rules.html#FromRule[In]extendsAnyRef", "kind" : "trait"}, {"label" : "factory", "tail" : ": RulesWithState", "member" : "scala.tools.scalap.scalax.rules.RulesWithState.factory", "link" : "scala\/tools\/scalap\/scalax\/rules\/RulesWithState.html#factory:scala.tools.scalap.scalax.rules.RulesWithState", "kind" : "val"}, {"label" : "repeatUntil", "tail" : "(rule: Rule[(T) => T, X])(finished: (T) => Boolean)(initial: T): rules.Rule[S, S, T, X]", "member" : "scala.tools.scalap.scalax.rules.StateRules.repeatUntil", "link" : "scala\/tools\/scalap\/scalax\/rules\/RulesWithState.html#repeatUntil[T,X](rule:StateRules.this.Rule[T=>T,X])(finished:T=>Boolean)(initial:T):scala.tools.scalap.scalax.rules.Rule[StateRules.this.S,StateRules.this.S,T,X]", "kind" : "def"}, {"label" : "anyOf", "tail" : "(rules: Seq[Rule[A, X]]): rules.Rule[S, S, collection.immutable.List[A], X]", "member" : "scala.tools.scalap.scalax.rules.StateRules.anyOf", "link" : "scala\/tools\/scalap\/scalax\/rules\/RulesWithState.html#anyOf[A,X](rules:Seq[StateRules.this.Rule[A,X]]):scala.tools.scalap.scalax.rules.Rule[StateRules.this.S,StateRules.this.S,List[A],X]", "kind" : "def"}, {"label" : "allOf", "tail" : "(rules: Seq[Rule[A, X]]): (S) => Result[S, List[A], X]", "member" : "scala.tools.scalap.scalax.rules.StateRules.allOf", "link" : "scala\/tools\/scalap\/scalax\/rules\/RulesWithState.html#allOf[A,X](rules:Seq[StateRules.this.Rule[A,X]]):StateRules.this.S=>scala.tools.scalap.scalax.rules.Result[StateRules.this.S,List[A],X]", "kind" : "def"}, {"label" : "cond", "tail" : "(f: (S) => Boolean): rules.Rule[S, S, S, Nothing]", "member" : "scala.tools.scalap.scalax.rules.StateRules.cond", "link" : "scala\/tools\/scalap\/scalax\/rules\/RulesWithState.html#cond(f:StateRules.this.S=>Boolean):scala.tools.scalap.scalax.rules.Rule[StateRules.this.S,StateRules.this.S,StateRules.this.S,Nothing]", "kind" : "def"}, {"label" : "none", "tail" : "(): rules.Rule[S, S, None.type, Nothing]", "member" : "scala.tools.scalap.scalax.rules.StateRules.none", "link" : "scala\/tools\/scalap\/scalax\/rules\/RulesWithState.html#none:scala.tools.scalap.scalax.rules.Rule[StateRules.this.S,StateRules.this.S,None.type,Nothing]", "kind" : "def"}, {"label" : "nil", "tail" : "(): rules.Rule[S, S, collection.immutable.Nil.type, Nothing]", "member" : "scala.tools.scalap.scalax.rules.StateRules.nil", "link" : "scala\/tools\/scalap\/scalax\/rules\/RulesWithState.html#nil:scala.tools.scalap.scalax.rules.Rule[StateRules.this.S,StateRules.this.S,scala.collection.immutable.Nil.type,Nothing]", "kind" : "def"}, {"label" : "update", "tail" : "(f: (S) => S): rules.Rule[S, S, S, Nothing]", "member" : "scala.tools.scalap.scalax.rules.StateRules.update", "link" : "scala\/tools\/scalap\/scalax\/rules\/RulesWithState.html#update(f:StateRules.this.S=>StateRules.this.S):scala.tools.scalap.scalax.rules.Rule[StateRules.this.S,StateRules.this.S,StateRules.this.S,Nothing]", "kind" : "def"}, {"label" : "set", "tail" : "(s: => S): rules.Rule[S, S, S, Nothing]", "member" : "scala.tools.scalap.scalax.rules.StateRules.set", "link" : "scala\/tools\/scalap\/scalax\/rules\/RulesWithState.html#set(s:=>StateRules.this.S):scala.tools.scalap.scalax.rules.Rule[StateRules.this.S,StateRules.this.S,StateRules.this.S,Nothing]", "kind" : "def"}, {"label" : "get", "tail" : "(): rules.Rule[S, S, S, Nothing]", "member" : "scala.tools.scalap.scalax.rules.StateRules.get", "link" : "scala\/tools\/scalap\/scalax\/rules\/RulesWithState.html#get:scala.tools.scalap.scalax.rules.Rule[StateRules.this.S,StateRules.this.S,StateRules.this.S,Nothing]", "kind" : "def"}, {"label" : "read", "tail" : "(f: (S) => A): rules.Rule[S, S, A, Nothing]", "member" : "scala.tools.scalap.scalax.rules.StateRules.read", "link" : "scala\/tools\/scalap\/scalax\/rules\/RulesWithState.html#read[A](f:StateRules.this.S=>A):scala.tools.scalap.scalax.rules.Rule[StateRules.this.S,StateRules.this.S,A,Nothing]", "kind" : "def"}, {"label" : "unit", "tail" : "(a: => A): rules.Rule[S, S, A, Nothing]", "member" : "scala.tools.scalap.scalax.rules.StateRules.unit", "link" : "scala\/tools\/scalap\/scalax\/rules\/RulesWithState.html#unit[A](a:=>A):scala.tools.scalap.scalax.rules.Rule[StateRules.this.S,StateRules.this.S,A,Nothing]", "kind" : "def"}, {"label" : "apply", "tail" : "(f: (S) => Result[S, A, X]): rules.Rule[S, S, A, X]", "member" : "scala.tools.scalap.scalax.rules.StateRules.apply", "link" : "scala\/tools\/scalap\/scalax\/rules\/RulesWithState.html#apply[A,X](f:StateRules.this.S=>scala.tools.scalap.scalax.rules.Result[StateRules.this.S,A,X]):scala.tools.scalap.scalax.rules.Rule[StateRules.this.S,StateRules.this.S,A,X]", "kind" : "def"}, {"label" : "Rule", "tail" : "", "member" : "scala.tools.scalap.scalax.rules.StateRules.Rule", "link" : "scala\/tools\/scalap\/scalax\/rules\/RulesWithState.html#Rule[+A,+X]=scala.tools.scalap.scalax.rules.Rule[StateRules.this.S,StateRules.this.S,A,X]", "kind" : "type"}, {"label" : "expect", "tail" : "(rule: rules.Rule[In, Out, A, R]): (In) => A", "member" : "scala.tools.scalap.scalax.rules.Rules.expect", "link" : "scala\/tools\/scalap\/scalax\/rules\/RulesWithState.html#expect[In,Out,A,R](rule:scala.tools.scalap.scalax.rules.Rule[In,Out,A,R]):In=>A", "kind" : "def"}, {"label" : "ruleWithName", "tail" : "(_name: String, f: (In) => Result[Out, A, X]): rules.Rule[In, Out, A, X] with Name", "member" : "scala.tools.scalap.scalax.rules.Rules.ruleWithName", "link" : "scala\/tools\/scalap\/scalax\/rules\/RulesWithState.html#ruleWithName[In,Out,A,X](_name:String,f:In=>scala.tools.scalap.scalax.rules.Result[Out,A,X]):scala.tools.scalap.scalax.rules.Rule[In,Out,A,X]withscala.tools.scalap.scalax.rules.Name", "kind" : "def"}, {"label" : "oneOf", "tail" : "(rules: rules.Rule[In, Out, A, X]*): rules.Rule[In, Out, A, X]", "member" : "scala.tools.scalap.scalax.rules.Rules.oneOf", "link" : "scala\/tools\/scalap\/scalax\/rules\/RulesWithState.html#oneOf[In,Out,A,X](rules:scala.tools.scalap.scalax.rules.Rule[In,Out,A,X]*):scala.tools.scalap.scalax.rules.Rule[In,Out,A,X]", "kind" : "def"}, {"label" : "error", "tail" : "(err: X): rules.Rule[Any, Nothing, Nothing, X]", "member" : "scala.tools.scalap.scalax.rules.Rules.error", "link" : "scala\/tools\/scalap\/scalax\/rules\/RulesWithState.html#error[X](err:X):scala.tools.scalap.scalax.rules.Rule[Any,Nothing,Nothing,X]", "kind" : "def"}, {"label" : "error", "tail" : "(): rules.Rule[In, Nothing, Nothing, In]", "member" : "scala.tools.scalap.scalax.rules.Rules.error", "link" : "scala\/tools\/scalap\/scalax\/rules\/RulesWithState.html#error[In]:scala.tools.scalap.scalax.rules.Rule[In,Nothing,Nothing,In]", "kind" : "def"}, {"label" : "failure", "tail" : "(): rules.Rule[Any, Nothing, Nothing, Nothing]", "member" : "scala.tools.scalap.scalax.rules.Rules.failure", "link" : "scala\/tools\/scalap\/scalax\/rules\/RulesWithState.html#failure:scala.tools.scalap.scalax.rules.Rule[Any,Nothing,Nothing,Nothing]", "kind" : "def"}, {"label" : "success", "tail" : "(out: Out, a: A): rules.Rule[Any, Out, A, Nothing]", "member" : "scala.tools.scalap.scalax.rules.Rules.success", "link" : "scala\/tools\/scalap\/scalax\/rules\/RulesWithState.html#success[Out,A](out:Out,a:A):scala.tools.scalap.scalax.rules.Rule[Any,Out,A,Nothing]", "kind" : "def"}, {"label" : "state", "tail" : "(): StateRules { type S = s }", "member" : "scala.tools.scalap.scalax.rules.Rules.state", "link" : "scala\/tools\/scalap\/scalax\/rules\/RulesWithState.html#state[s]:scala.tools.scalap.scalax.rules.StateRules{typeS=s}", "kind" : "def"}, {"label" : "from", "tail" : "(): FromRule[In]", "member" : "scala.tools.scalap.scalax.rules.Rules.from", "link" : "scala\/tools\/scalap\/scalax\/rules\/RulesWithState.html#from[In]:Rules.this.FromRule[In]", "kind" : "def"}, {"label" : "seqRule", "tail" : "(rule: rules.Rule[In, In, A, X]): SeqRule[In, A, X]", "member" : "scala.tools.scalap.scalax.rules.Rules.seqRule", "link" : "scala\/tools\/scalap\/scalax\/rules\/RulesWithState.html#seqRule[In,A,X](rule:scala.tools.scalap.scalax.rules.Rule[In,In,A,X]):scala.tools.scalap.scalax.rules.SeqRule[In,A,X]", "kind" : "implicit def"}, {"label" : "inRule", "tail" : "(rule: rules.Rule[In, Out, A, X]): InRule[In, Out, A, X]", "member" : "scala.tools.scalap.scalax.rules.Rules.inRule", "link" : "scala\/tools\/scalap\/scalax\/rules\/RulesWithState.html#inRule[In,Out,A,X](rule:scala.tools.scalap.scalax.rules.Rule[In,Out,A,X]):scala.tools.scalap.scalax.rules.InRule[In,Out,A,X]", "kind" : "implicit def"}, {"label" : "rule", "tail" : "(f: (In) => Result[Out, A, X]): rules.Rule[In, Out, A, X]", "member" : "scala.tools.scalap.scalax.rules.Rules.rule", "link" : "scala\/tools\/scalap\/scalax\/rules\/RulesWithState.html#rule[In,Out,A,X](f:In=>scala.tools.scalap.scalax.rules.Result[Out,A,X]):scala.tools.scalap.scalax.rules.Rule[In,Out,A,X]", "kind" : "implicit def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "scala\/tools\/scalap\/scalax\/rules\/RulesWithState.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "scala\/tools\/scalap\/scalax\/rules\/RulesWithState.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "scala\/tools\/scalap\/scalax\/rules\/RulesWithState.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "scala\/tools\/scalap\/scalax\/rules\/RulesWithState.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "scala\/tools\/scalap\/scalax\/rules\/RulesWithState.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "scala\/tools\/scalap\/scalax\/rules\/RulesWithState.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "scala\/tools\/scalap\/scalax\/rules\/RulesWithState.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "scala\/tools\/scalap\/scalax\/rules\/RulesWithState.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "scala\/tools\/scalap\/scalax\/rules\/RulesWithState.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "scala\/tools\/scalap\/scalax\/rules\/RulesWithState.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "scala\/tools\/scalap\/scalax\/rules\/RulesWithState.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "scala\/tools\/scalap\/scalax\/rules\/RulesWithState.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "scala\/tools\/scalap\/scalax\/rules\/RulesWithState.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "scala\/tools\/scalap\/scalax\/rules\/RulesWithState.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "scala\/tools\/scalap\/scalax\/rules\/RulesWithState.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "scala\/tools\/scalap\/scalax\/rules\/RulesWithState.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "scala\/tools\/scalap\/scalax\/rules\/RulesWithState.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "scala\/tools\/scalap\/scalax\/rules\/RulesWithState.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "scala\/tools\/scalap\/scalax\/rules\/RulesWithState.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"member" : "scala.tools.scalap.scalax.rules.StateRules.S", "error" : "unsupported entity"}], "shortDescription" : ""}, {"name" : "scala.tools.scalap.scalax.rules.ScalaSigParserError", "shortDescription" : "", "members_case class" : [{"label" : "+", "tail" : "(other: String): String", "member" : "scala.Predef.any2stringadd.+", "link" : "scala\/tools\/scalap\/scalax\/rules\/ScalaSigParserError.html#+(other:String):String", "kind" : "def"}, {"label" : "formatted", "tail" : "(fmtstr: String): String", "member" : "scala.Predef.StringFormat.formatted", "link" : "scala\/tools\/scalap\/scalax\/rules\/ScalaSigParserError.html#formatted(fmtstr:String):String", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: (ScalaSigParserError) => Boolean, msg: => Any): ScalaSigParserError", "member" : "scala.Predef.Ensuring.ensuring", "link" : "scala\/tools\/scalap\/scalax\/rules\/ScalaSigParserError.html#ensuring(cond:A=>Boolean,msg:=>Any):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: (ScalaSigParserError) => Boolean): ScalaSigParserError", "member" : "scala.Predef.Ensuring.ensuring", "link" : "scala\/tools\/scalap\/scalax\/rules\/ScalaSigParserError.html#ensuring(cond:A=>Boolean):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: Boolean, msg: => Any): ScalaSigParserError", "member" : "scala.Predef.Ensuring.ensuring", "link" : "scala\/tools\/scalap\/scalax\/rules\/ScalaSigParserError.html#ensuring(cond:Boolean,msg:=>Any):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: Boolean): ScalaSigParserError", "member" : "scala.Predef.Ensuring.ensuring", "link" : "scala\/tools\/scalap\/scalax\/rules\/ScalaSigParserError.html#ensuring(cond:Boolean):A", "kind" : "def"}, {"label" : "→", "tail" : "(y: B): (ScalaSigParserError, B)", "member" : "scala.Predef.ArrowAssoc.→", "link" : "scala\/tools\/scalap\/scalax\/rules\/ScalaSigParserError.html#→[B](y:B):(A,B)", "kind" : "def"}, {"label" : "->", "tail" : "(y: B): (ScalaSigParserError, B)", "member" : "scala.Predef.ArrowAssoc.->", "link" : "scala\/tools\/scalap\/scalax\/rules\/ScalaSigParserError.html#->[B](y:B):(A,B)", "kind" : "def"}, {"member" : "scala.tools.scalap.scalax.rules.ScalaSigParserError#<init>", "error" : "unsupported entity"}, {"label" : "msg", "tail" : ": String", "member" : "scala.tools.scalap.scalax.rules.ScalaSigParserError.msg", "link" : "scala\/tools\/scalap\/scalax\/rules\/ScalaSigParserError.html#msg:String", "kind" : "val"}, {"label" : "productElementNames", "tail" : "(): Iterator[String]", "member" : "scala.Product.productElementNames", "link" : "scala\/tools\/scalap\/scalax\/rules\/ScalaSigParserError.html#productElementNames:Iterator[String]", "kind" : "def"}, {"label" : "getSuppressed", "tail" : "(): Array[java.lang.Throwable]", "member" : "java.lang.Throwable.getSuppressed", "link" : "scala\/tools\/scalap\/scalax\/rules\/ScalaSigParserError.html#getSuppressed():Array[Throwable]", "kind" : "final def"}, {"label" : "addSuppressed", "tail" : "(arg0: java.lang.Throwable): Unit", "member" : "java.lang.Throwable.addSuppressed", "link" : "scala\/tools\/scalap\/scalax\/rules\/ScalaSigParserError.html#addSuppressed(x$1:Throwable):Unit", "kind" : "final def"}, {"label" : "setStackTrace", "tail" : "(arg0: Array[StackTraceElement]): Unit", "member" : "java.lang.Throwable.setStackTrace", "link" : "scala\/tools\/scalap\/scalax\/rules\/ScalaSigParserError.html#setStackTrace(x$1:Array[StackTraceElement]):Unit", "kind" : "def"}, {"label" : "getStackTrace", "tail" : "(): Array[StackTraceElement]", "member" : "java.lang.Throwable.getStackTrace", "link" : "scala\/tools\/scalap\/scalax\/rules\/ScalaSigParserError.html#getStackTrace():Array[StackTraceElement]", "kind" : "def"}, {"label" : "fillInStackTrace", "tail" : "(): java.lang.Throwable", "member" : "java.lang.Throwable.fillInStackTrace", "link" : "scala\/tools\/scalap\/scalax\/rules\/ScalaSigParserError.html#fillInStackTrace():Throwable", "kind" : "def"}, {"label" : "printStackTrace", "tail" : "(arg0: PrintWriter): Unit", "member" : "java.lang.Throwable.printStackTrace", "link" : "scala\/tools\/scalap\/scalax\/rules\/ScalaSigParserError.html#printStackTrace(x$1:java.io.PrintWriter):Unit", "kind" : "def"}, {"label" : "printStackTrace", "tail" : "(arg0: PrintStream): Unit", "member" : "java.lang.Throwable.printStackTrace", "link" : "scala\/tools\/scalap\/scalax\/rules\/ScalaSigParserError.html#printStackTrace(x$1:java.io.PrintStream):Unit", "kind" : "def"}, {"label" : "printStackTrace", "tail" : "(): Unit", "member" : "java.lang.Throwable.printStackTrace", "link" : "scala\/tools\/scalap\/scalax\/rules\/ScalaSigParserError.html#printStackTrace():Unit", "kind" : "def"}, {"label" : "toString", "tail" : "(): String", "member" : "java.lang.Throwable.toString", "link" : "scala\/tools\/scalap\/scalax\/rules\/ScalaSigParserError.html#toString():String", "kind" : "def"}, {"label" : "initCause", "tail" : "(arg0: java.lang.Throwable): java.lang.Throwable", "member" : "java.lang.Throwable.initCause", "link" : "scala\/tools\/scalap\/scalax\/rules\/ScalaSigParserError.html#initCause(x$1:Throwable):Throwable", "kind" : "def"}, {"label" : "getCause", "tail" : "(): java.lang.Throwable", "member" : "java.lang.Throwable.getCause", "link" : "scala\/tools\/scalap\/scalax\/rules\/ScalaSigParserError.html#getCause():Throwable", "kind" : "def"}, {"label" : "getLocalizedMessage", "tail" : "(): String", "member" : "java.lang.Throwable.getLocalizedMessage", "link" : "scala\/tools\/scalap\/scalax\/rules\/ScalaSigParserError.html#getLocalizedMessage():String", "kind" : "def"}, {"label" : "getMessage", "tail" : "(): String", "member" : "java.lang.Throwable.getMessage", "link" : "scala\/tools\/scalap\/scalax\/rules\/ScalaSigParserError.html#getMessage():String", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "scala\/tools\/scalap\/scalax\/rules\/ScalaSigParserError.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "scala\/tools\/scalap\/scalax\/rules\/ScalaSigParserError.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "scala\/tools\/scalap\/scalax\/rules\/ScalaSigParserError.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "scala\/tools\/scalap\/scalax\/rules\/ScalaSigParserError.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "scala\/tools\/scalap\/scalax\/rules\/ScalaSigParserError.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "scala\/tools\/scalap\/scalax\/rules\/ScalaSigParserError.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "scala\/tools\/scalap\/scalax\/rules\/ScalaSigParserError.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "scala\/tools\/scalap\/scalax\/rules\/ScalaSigParserError.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "scala\/tools\/scalap\/scalax\/rules\/ScalaSigParserError.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "scala\/tools\/scalap\/scalax\/rules\/ScalaSigParserError.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "scala\/tools\/scalap\/scalax\/rules\/ScalaSigParserError.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "scala\/tools\/scalap\/scalax\/rules\/ScalaSigParserError.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "scala\/tools\/scalap\/scalax\/rules\/ScalaSigParserError.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "scala\/tools\/scalap\/scalax\/rules\/ScalaSigParserError.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "scala\/tools\/scalap\/scalax\/rules\/ScalaSigParserError.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "scala\/tools\/scalap\/scalax\/rules\/ScalaSigParserError.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "scala\/tools\/scalap\/scalax\/rules\/ScalaSigParserError.html", "kind" : "case class"}, {"name" : "scala.tools.scalap.scalax.rules.SeqRule", "shortDescription" : "", "members_class" : [{"label" : "formatted", "tail" : "(fmtstr: String): String", "member" : "scala.Predef.StringFormat.formatted", "link" : "scala\/tools\/scalap\/scalax\/rules\/SeqRule.html#formatted(fmtstr:String):String", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: (SeqRule[S, A, X]) => Boolean, msg: => Any): SeqRule[S, A, X]", "member" : "scala.Predef.Ensuring.ensuring", "link" : "scala\/tools\/scalap\/scalax\/rules\/SeqRule.html#ensuring(cond:A=>Boolean,msg:=>Any):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: (SeqRule[S, A, X]) => Boolean): SeqRule[S, A, X]", "member" : "scala.Predef.Ensuring.ensuring", "link" : "scala\/tools\/scalap\/scalax\/rules\/SeqRule.html#ensuring(cond:A=>Boolean):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: Boolean, msg: => Any): SeqRule[S, A, X]", "member" : "scala.Predef.Ensuring.ensuring", "link" : "scala\/tools\/scalap\/scalax\/rules\/SeqRule.html#ensuring(cond:Boolean,msg:=>Any):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: Boolean): SeqRule[S, A, X]", "member" : "scala.Predef.Ensuring.ensuring", "link" : "scala\/tools\/scalap\/scalax\/rules\/SeqRule.html#ensuring(cond:Boolean):A", "kind" : "def"}, {"label" : "→", "tail" : "(y: B): (SeqRule[S, A, X], B)", "member" : "scala.Predef.ArrowAssoc.→", "link" : "scala\/tools\/scalap\/scalax\/rules\/SeqRule.html#→[B](y:B):(A,B)", "kind" : "def"}, {"label" : "->", "tail" : "(y: B): (SeqRule[S, A, X], B)", "member" : "scala.Predef.ArrowAssoc.->", "link" : "scala\/tools\/scalap\/scalax\/rules\/SeqRule.html#->[B](y:B):(A,B)", "kind" : "def"}, {"label" : "times", "tail" : "(num: Int): Rule[S, S, Seq[A], X]", "member" : "scala.tools.scalap.scalax.rules.SeqRule.times", "link" : "scala\/tools\/scalap\/scalax\/rules\/SeqRule.html#times(num:Int):scala.tools.scalap.scalax.rules.Rule[S,S,Seq[A],X]", "kind" : "def"}, {"label" : "+~-", "tail" : "(end: => Rule[S, Out, Any, X2]): Rule[S, Out, collection.immutable.List[A], X2]", "member" : "scala.tools.scalap.scalax.rules.SeqRule.+~-", "link" : "scala\/tools\/scalap\/scalax\/rules\/SeqRule.html#+~-[Out,X2>:X](end:=>scala.tools.scalap.scalax.rules.Rule[S,Out,Any,X2]):scala.tools.scalap.scalax.rules.Rule[S,Out,List[A],X2]", "kind" : "def"}, {"label" : "*~-", "tail" : "(end: => Rule[S, Out, Any, X2]): Rule[S, Out, List[A], X2]", "member" : "scala.tools.scalap.scalax.rules.SeqRule.*~-", "link" : "scala\/tools\/scalap\/scalax\/rules\/SeqRule.html#*~-[Out,X2>:X](end:=>scala.tools.scalap.scalax.rules.Rule[S,Out,Any,X2]):scala.tools.scalap.scalax.rules.Rule[S,Out,List[A],X2]", "kind" : "def"}, {"label" : "*\/", "tail" : "(sep: => Rule[S, S, Any, X2]): Rule[S, S, collection.immutable.List[A], X2]", "member" : "scala.tools.scalap.scalax.rules.SeqRule.*\/", "link" : "scala\/tools\/scalap\/scalax\/rules\/SeqRule.html#*\/[X2>:X](sep:=>scala.tools.scalap.scalax.rules.Rule[S,S,Any,X2]):scala.tools.scalap.scalax.rules.Rule[S,S,List[A],X2]", "kind" : "def"}, {"label" : "+\/", "tail" : "(sep: => Rule[S, S, Any, X2]): Rule[S, S, collection.immutable.List[A], X2]", "member" : "scala.tools.scalap.scalax.rules.SeqRule.+\/", "link" : "scala\/tools\/scalap\/scalax\/rules\/SeqRule.html#+\/[X2>:X](sep:=>scala.tools.scalap.scalax.rules.Rule[S,S,Any,X2]):scala.tools.scalap.scalax.rules.Rule[S,S,List[A],X2]", "kind" : "def"}, {"label" : "~*~", "tail" : "(join: => Rule[S, S, (B, B) => B, X2]): Rule[S, S, B, X2]", "member" : "scala.tools.scalap.scalax.rules.SeqRule.~*~", "link" : "scala\/tools\/scalap\/scalax\/rules\/SeqRule.html#~*~[B>:A,X2>:X](join:=>scala.tools.scalap.scalax.rules.Rule[S,S,(B,B)=>B,X2]):scala.tools.scalap.scalax.rules.Rule[S,S,B,X2]", "kind" : "def"}, {"label" : "~>*", "tail" : "(f: => Rule[S, S, (B) => B, X2]): Rule[S, S, B, X2]", "member" : "scala.tools.scalap.scalax.rules.SeqRule.~>*", "link" : "scala\/tools\/scalap\/scalax\/rules\/SeqRule.html#~>*[B>:A,X2>:X](f:=>scala.tools.scalap.scalax.rules.Rule[S,S,B=>B,X2]):scala.tools.scalap.scalax.rules.Rule[S,S,B,X2]", "kind" : "def"}, {"label" : "~>?", "tail" : "(f: => Rule[S, S, (B) => B, X2]): Rule[S, S, B, X2]", "member" : "scala.tools.scalap.scalax.rules.SeqRule.~>?", "link" : "scala\/tools\/scalap\/scalax\/rules\/SeqRule.html#~>?[B>:A,X2>:X](f:=>scala.tools.scalap.scalax.rules.Rule[S,S,B=>B,X2]):scala.tools.scalap.scalax.rules.Rule[S,S,B,X2]", "kind" : "def"}, {"label" : "+", "tail" : "(): Rule[S, S, collection.immutable.List[A], X]", "member" : "scala.tools.scalap.scalax.rules.SeqRule.+", "link" : "scala\/tools\/scalap\/scalax\/rules\/SeqRule.html#+:scala.tools.scalap.scalax.rules.Rule[S,S,List[A],X]", "kind" : "def"}, {"label" : "*", "tail" : "(): Rule[S, S, List[A], X]", "member" : "scala.tools.scalap.scalax.rules.SeqRule.*", "link" : "scala\/tools\/scalap\/scalax\/rules\/SeqRule.html#*:scala.tools.scalap.scalax.rules.Rule[S,S,List[A],X]", "kind" : "def"}, {"label" : "-?", "tail" : "(): Rule[S, S, Boolean, X]", "member" : "scala.tools.scalap.scalax.rules.SeqRule.-?", "link" : "scala\/tools\/scalap\/scalax\/rules\/SeqRule.html#-?:scala.tools.scalap.scalax.rules.Rule[S,S,Boolean,X]", "kind" : "def"}, {"label" : "?", "tail" : "(): Rule[S, S, Option[A], X]", "member" : "scala.tools.scalap.scalax.rules.SeqRule.?", "link" : "scala\/tools\/scalap\/scalax\/rules\/SeqRule.html#?:scala.tools.scalap.scalax.rules.Rule[S,S,Option[A],X]", "kind" : "def"}, {"member" : "scala.tools.scalap.scalax.rules.SeqRule#<init>", "error" : "unsupported entity"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "scala\/tools\/scalap\/scalax\/rules\/SeqRule.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "scala\/tools\/scalap\/scalax\/rules\/SeqRule.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "scala\/tools\/scalap\/scalax\/rules\/SeqRule.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "scala\/tools\/scalap\/scalax\/rules\/SeqRule.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "scala\/tools\/scalap\/scalax\/rules\/SeqRule.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "scala\/tools\/scalap\/scalax\/rules\/SeqRule.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "scala\/tools\/scalap\/scalax\/rules\/SeqRule.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "scala\/tools\/scalap\/scalax\/rules\/SeqRule.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "scala\/tools\/scalap\/scalax\/rules\/SeqRule.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "scala\/tools\/scalap\/scalax\/rules\/SeqRule.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "scala\/tools\/scalap\/scalax\/rules\/SeqRule.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "scala\/tools\/scalap\/scalax\/rules\/SeqRule.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "scala\/tools\/scalap\/scalax\/rules\/SeqRule.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "scala\/tools\/scalap\/scalax\/rules\/SeqRule.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "scala\/tools\/scalap\/scalax\/rules\/SeqRule.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "scala\/tools\/scalap\/scalax\/rules\/SeqRule.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "scala\/tools\/scalap\/scalax\/rules\/SeqRule.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "scala\/tools\/scalap\/scalax\/rules\/SeqRule.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "scala\/tools\/scalap\/scalax\/rules\/SeqRule.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "scala\/tools\/scalap\/scalax\/rules\/SeqRule.html", "kind" : "class"}, {"name" : "scala.tools.scalap.scalax.rules.StateRules", "trait" : "scala\/tools\/scalap\/scalax\/rules\/StateRules.html", "kind" : "trait", "members_trait" : [{"label" : "+", "tail" : "(other: String): String", "member" : "scala.Predef.any2stringadd.+", "link" : "scala\/tools\/scalap\/scalax\/rules\/StateRules.html#+(other:String):String", "kind" : "def"}, {"label" : "formatted", "tail" : "(fmtstr: String): String", "member" : "scala.Predef.StringFormat.formatted", "link" : "scala\/tools\/scalap\/scalax\/rules\/StateRules.html#formatted(fmtstr:String):String", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: (StateRules) => Boolean, msg: => Any): StateRules", "member" : "scala.Predef.Ensuring.ensuring", "link" : "scala\/tools\/scalap\/scalax\/rules\/StateRules.html#ensuring(cond:A=>Boolean,msg:=>Any):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: (StateRules) => Boolean): StateRules", "member" : "scala.Predef.Ensuring.ensuring", "link" : "scala\/tools\/scalap\/scalax\/rules\/StateRules.html#ensuring(cond:A=>Boolean):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: Boolean, msg: => Any): StateRules", "member" : "scala.Predef.Ensuring.ensuring", "link" : "scala\/tools\/scalap\/scalax\/rules\/StateRules.html#ensuring(cond:Boolean,msg:=>Any):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: Boolean): StateRules", "member" : "scala.Predef.Ensuring.ensuring", "link" : "scala\/tools\/scalap\/scalax\/rules\/StateRules.html#ensuring(cond:Boolean):A", "kind" : "def"}, {"label" : "→", "tail" : "(y: B): (StateRules, B)", "member" : "scala.Predef.ArrowAssoc.→", "link" : "scala\/tools\/scalap\/scalax\/rules\/StateRules.html#→[B](y:B):(A,B)", "kind" : "def"}, {"label" : "->", "tail" : "(y: B): (StateRules, B)", "member" : "scala.Predef.ArrowAssoc.->", "link" : "scala\/tools\/scalap\/scalax\/rules\/StateRules.html#->[B](y:B):(A,B)", "kind" : "def"}, {"label" : "repeatUntil", "tail" : "(rule: Rule[(T) => T, X])(finished: (T) => Boolean)(initial: T): rules.Rule[S, S, T, X]", "member" : "scala.tools.scalap.scalax.rules.StateRules.repeatUntil", "link" : "scala\/tools\/scalap\/scalax\/rules\/StateRules.html#repeatUntil[T,X](rule:StateRules.this.Rule[T=>T,X])(finished:T=>Boolean)(initial:T):scala.tools.scalap.scalax.rules.Rule[StateRules.this.S,StateRules.this.S,T,X]", "kind" : "def"}, {"label" : "anyOf", "tail" : "(rules: Seq[Rule[A, X]]): rules.Rule[S, S, collection.immutable.List[A], X]", "member" : "scala.tools.scalap.scalax.rules.StateRules.anyOf", "link" : "scala\/tools\/scalap\/scalax\/rules\/StateRules.html#anyOf[A,X](rules:Seq[StateRules.this.Rule[A,X]]):scala.tools.scalap.scalax.rules.Rule[StateRules.this.S,StateRules.this.S,List[A],X]", "kind" : "def"}, {"label" : "allOf", "tail" : "(rules: Seq[Rule[A, X]]): (S) => Result[S, List[A], X]", "member" : "scala.tools.scalap.scalax.rules.StateRules.allOf", "link" : "scala\/tools\/scalap\/scalax\/rules\/StateRules.html#allOf[A,X](rules:Seq[StateRules.this.Rule[A,X]]):StateRules.this.S=>scala.tools.scalap.scalax.rules.Result[StateRules.this.S,List[A],X]", "kind" : "def"}, {"label" : "cond", "tail" : "(f: (S) => Boolean): rules.Rule[S, S, S, Nothing]", "member" : "scala.tools.scalap.scalax.rules.StateRules.cond", "link" : "scala\/tools\/scalap\/scalax\/rules\/StateRules.html#cond(f:StateRules.this.S=>Boolean):scala.tools.scalap.scalax.rules.Rule[StateRules.this.S,StateRules.this.S,StateRules.this.S,Nothing]", "kind" : "def"}, {"label" : "none", "tail" : "(): rules.Rule[S, S, None.type, Nothing]", "member" : "scala.tools.scalap.scalax.rules.StateRules.none", "link" : "scala\/tools\/scalap\/scalax\/rules\/StateRules.html#none:scala.tools.scalap.scalax.rules.Rule[StateRules.this.S,StateRules.this.S,None.type,Nothing]", "kind" : "def"}, {"label" : "nil", "tail" : "(): rules.Rule[S, S, collection.immutable.Nil.type, Nothing]", "member" : "scala.tools.scalap.scalax.rules.StateRules.nil", "link" : "scala\/tools\/scalap\/scalax\/rules\/StateRules.html#nil:scala.tools.scalap.scalax.rules.Rule[StateRules.this.S,StateRules.this.S,scala.collection.immutable.Nil.type,Nothing]", "kind" : "def"}, {"label" : "update", "tail" : "(f: (S) => S): rules.Rule[S, S, S, Nothing]", "member" : "scala.tools.scalap.scalax.rules.StateRules.update", "link" : "scala\/tools\/scalap\/scalax\/rules\/StateRules.html#update(f:StateRules.this.S=>StateRules.this.S):scala.tools.scalap.scalax.rules.Rule[StateRules.this.S,StateRules.this.S,StateRules.this.S,Nothing]", "kind" : "def"}, {"label" : "set", "tail" : "(s: => S): rules.Rule[S, S, S, Nothing]", "member" : "scala.tools.scalap.scalax.rules.StateRules.set", "link" : "scala\/tools\/scalap\/scalax\/rules\/StateRules.html#set(s:=>StateRules.this.S):scala.tools.scalap.scalax.rules.Rule[StateRules.this.S,StateRules.this.S,StateRules.this.S,Nothing]", "kind" : "def"}, {"label" : "get", "tail" : "(): rules.Rule[S, S, S, Nothing]", "member" : "scala.tools.scalap.scalax.rules.StateRules.get", "link" : "scala\/tools\/scalap\/scalax\/rules\/StateRules.html#get:scala.tools.scalap.scalax.rules.Rule[StateRules.this.S,StateRules.this.S,StateRules.this.S,Nothing]", "kind" : "def"}, {"label" : "read", "tail" : "(f: (S) => A): rules.Rule[S, S, A, Nothing]", "member" : "scala.tools.scalap.scalax.rules.StateRules.read", "link" : "scala\/tools\/scalap\/scalax\/rules\/StateRules.html#read[A](f:StateRules.this.S=>A):scala.tools.scalap.scalax.rules.Rule[StateRules.this.S,StateRules.this.S,A,Nothing]", "kind" : "def"}, {"label" : "unit", "tail" : "(a: => A): rules.Rule[S, S, A, Nothing]", "member" : "scala.tools.scalap.scalax.rules.StateRules.unit", "link" : "scala\/tools\/scalap\/scalax\/rules\/StateRules.html#unit[A](a:=>A):scala.tools.scalap.scalax.rules.Rule[StateRules.this.S,StateRules.this.S,A,Nothing]", "kind" : "def"}, {"label" : "apply", "tail" : "(f: (S) => Result[S, A, X]): rules.Rule[S, S, A, X]", "member" : "scala.tools.scalap.scalax.rules.StateRules.apply", "link" : "scala\/tools\/scalap\/scalax\/rules\/StateRules.html#apply[A,X](f:StateRules.this.S=>scala.tools.scalap.scalax.rules.Result[StateRules.this.S,A,X]):scala.tools.scalap.scalax.rules.Rule[StateRules.this.S,StateRules.this.S,A,X]", "kind" : "def"}, {"label" : "Rule", "tail" : "", "member" : "scala.tools.scalap.scalax.rules.StateRules.Rule", "link" : "scala\/tools\/scalap\/scalax\/rules\/StateRules.html#Rule[+A,+X]=scala.tools.scalap.scalax.rules.Rule[StateRules.this.S,StateRules.this.S,A,X]", "kind" : "type"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "scala\/tools\/scalap\/scalax\/rules\/StateRules.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "scala\/tools\/scalap\/scalax\/rules\/StateRules.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "scala\/tools\/scalap\/scalax\/rules\/StateRules.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "scala\/tools\/scalap\/scalax\/rules\/StateRules.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "scala\/tools\/scalap\/scalax\/rules\/StateRules.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "scala\/tools\/scalap\/scalax\/rules\/StateRules.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "scala\/tools\/scalap\/scalax\/rules\/StateRules.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "scala\/tools\/scalap\/scalax\/rules\/StateRules.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "scala\/tools\/scalap\/scalax\/rules\/StateRules.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "scala\/tools\/scalap\/scalax\/rules\/StateRules.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "scala\/tools\/scalap\/scalax\/rules\/StateRules.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "scala\/tools\/scalap\/scalax\/rules\/StateRules.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "scala\/tools\/scalap\/scalax\/rules\/StateRules.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "scala\/tools\/scalap\/scalax\/rules\/StateRules.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "scala\/tools\/scalap\/scalax\/rules\/StateRules.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "scala\/tools\/scalap\/scalax\/rules\/StateRules.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "scala\/tools\/scalap\/scalax\/rules\/StateRules.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "scala\/tools\/scalap\/scalax\/rules\/StateRules.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "scala\/tools\/scalap\/scalax\/rules\/StateRules.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "factory", "tail" : ": Rules", "member" : "scala.tools.scalap.scalax.rules.StateRules.factory", "link" : "scala\/tools\/scalap\/scalax\/rules\/StateRules.html#factory:scala.tools.scalap.scalax.rules.Rules", "kind" : "abstract val"}, {"member" : "scala.tools.scalap.scalax.rules.StateRules.S", "error" : "unsupported entity"}], "shortDescription" : "A factory for rules that apply to a particular context."}, {"name" : "scala.tools.scalap.scalax.rules.Success", "shortDescription" : "", "members_case class" : [{"label" : "+", "tail" : "(other: String): String", "member" : "scala.Predef.any2stringadd.+", "link" : "scala\/tools\/scalap\/scalax\/rules\/Success.html#+(other:String):String", "kind" : "def"}, {"label" : "formatted", "tail" : "(fmtstr: String): String", "member" : "scala.Predef.StringFormat.formatted", "link" : "scala\/tools\/scalap\/scalax\/rules\/Success.html#formatted(fmtstr:String):String", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: (Success[Out, A]) => Boolean, msg: => Any): Success[Out, A]", "member" : "scala.Predef.Ensuring.ensuring", "link" : "scala\/tools\/scalap\/scalax\/rules\/Success.html#ensuring(cond:A=>Boolean,msg:=>Any):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: (Success[Out, A]) => Boolean): Success[Out, A]", "member" : "scala.Predef.Ensuring.ensuring", "link" : "scala\/tools\/scalap\/scalax\/rules\/Success.html#ensuring(cond:A=>Boolean):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: Boolean, msg: => Any): Success[Out, A]", "member" : "scala.Predef.Ensuring.ensuring", "link" : "scala\/tools\/scalap\/scalax\/rules\/Success.html#ensuring(cond:Boolean,msg:=>Any):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: Boolean): Success[Out, A]", "member" : "scala.Predef.Ensuring.ensuring", "link" : "scala\/tools\/scalap\/scalax\/rules\/Success.html#ensuring(cond:Boolean):A", "kind" : "def"}, {"label" : "→", "tail" : "(y: B): (Success[Out, A], B)", "member" : "scala.Predef.ArrowAssoc.→", "link" : "scala\/tools\/scalap\/scalax\/rules\/Success.html#→[B](y:B):(A,B)", "kind" : "def"}, {"label" : "->", "tail" : "(y: B): (Success[Out, A], B)", "member" : "scala.Predef.ArrowAssoc.->", "link" : "scala\/tools\/scalap\/scalax\/rules\/Success.html#->[B](y:B):(A,B)", "kind" : "def"}, {"label" : "orElse", "tail" : "(other: => Result[Out2, B, Nothing]): Result[Out2, B, Nothing]", "member" : "scala.tools.scalap.scalax.rules.Success.orElse", "link" : "scala\/tools\/scalap\/scalax\/rules\/Success.html#orElse[Out2>:Out,B>:A](other:=>scala.tools.scalap.scalax.rules.Result[Out2,B,Nothing]):scala.tools.scalap.scalax.rules.Result[Out2,B,Nothing]", "kind" : "def"}, {"label" : "flatMap", "tail" : "(f: (Out, A) => Result[Out2, B, Nothing]): Result[Out2, B, Nothing]", "member" : "scala.tools.scalap.scalax.rules.Success.flatMap", "link" : "scala\/tools\/scalap\/scalax\/rules\/Success.html#flatMap[Out2,B](f:(Out,A)=>scala.tools.scalap.scalax.rules.Result[Out2,B,Nothing]):scala.tools.scalap.scalax.rules.Result[Out2,B,Nothing]", "kind" : "def"}, {"label" : "map", "tail" : "(f: (Out, A) => (Out2, B)): Success[Out2, B]", "member" : "scala.tools.scalap.scalax.rules.Success.map", "link" : "scala\/tools\/scalap\/scalax\/rules\/Success.html#map[Out2,B](f:(Out,A)=>(Out2,B)):scala.tools.scalap.scalax.rules.Success[Out2,B]", "kind" : "def"}, {"label" : "mapOut", "tail" : "(f: (Out) => Out2): Result[Out2, A, Nothing]", "member" : "scala.tools.scalap.scalax.rules.Success.mapOut", "link" : "scala\/tools\/scalap\/scalax\/rules\/Success.html#mapOut[Out2](f:Out=>Out2):scala.tools.scalap.scalax.rules.Result[Out2,A,Nothing]", "kind" : "def"}, {"label" : "map", "tail" : "(f: (A) => B): Result[Out, B, Nothing]", "member" : "scala.tools.scalap.scalax.rules.Success.map", "link" : "scala\/tools\/scalap\/scalax\/rules\/Success.html#map[B](f:A=>B):scala.tools.scalap.scalax.rules.Result[Out,B,Nothing]", "kind" : "def"}, {"label" : "toOption", "tail" : "(): Some[A]", "member" : "scala.tools.scalap.scalax.rules.Success.toOption", "link" : "scala\/tools\/scalap\/scalax\/rules\/Success.html#toOption:Some[A]", "kind" : "def"}, {"label" : "error", "tail" : "(): Nothing", "member" : "scala.tools.scalap.scalax.rules.Success.error", "link" : "scala\/tools\/scalap\/scalax\/rules\/Success.html#error:Nothing", "kind" : "def"}, {"member" : "scala.tools.scalap.scalax.rules.Success#<init>", "error" : "unsupported entity"}, {"label" : "value", "tail" : ": A", "member" : "scala.tools.scalap.scalax.rules.Success.value", "link" : "scala\/tools\/scalap\/scalax\/rules\/Success.html#value:A", "kind" : "val"}, {"label" : "out", "tail" : ": Out", "member" : "scala.tools.scalap.scalax.rules.Success.out", "link" : "scala\/tools\/scalap\/scalax\/rules\/Success.html#out:Out", "kind" : "val"}, {"label" : "productElementNames", "tail" : "(): Iterator[String]", "member" : "scala.Product.productElementNames", "link" : "scala\/tools\/scalap\/scalax\/rules\/Success.html#productElementNames:Iterator[String]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "scala\/tools\/scalap\/scalax\/rules\/Success.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "scala\/tools\/scalap\/scalax\/rules\/Success.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "scala\/tools\/scalap\/scalax\/rules\/Success.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "scala\/tools\/scalap\/scalax\/rules\/Success.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "scala\/tools\/scalap\/scalax\/rules\/Success.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "scala\/tools\/scalap\/scalax\/rules\/Success.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "scala\/tools\/scalap\/scalax\/rules\/Success.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "scala\/tools\/scalap\/scalax\/rules\/Success.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "scala\/tools\/scalap\/scalax\/rules\/Success.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "scala\/tools\/scalap\/scalax\/rules\/Success.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "scala\/tools\/scalap\/scalax\/rules\/Success.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "scala\/tools\/scalap\/scalax\/rules\/Success.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "scala\/tools\/scalap\/scalax\/rules\/Success.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "scala\/tools\/scalap\/scalax\/rules\/Success.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "scala\/tools\/scalap\/scalax\/rules\/Success.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "scala\/tools\/scalap\/scalax\/rules\/Success.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "scala\/tools\/scalap\/scalax\/rules\/Success.html", "kind" : "case class"}, {"name" : "scala.tools.scalap.scalax.rules.~", "shortDescription" : "Represents the combined value of two rules applied in sequence.", "members_case class" : [{"label" : "+", "tail" : "(other: String): String", "member" : "scala.Predef.any2stringadd.+", "link" : "scala\/tools\/scalap\/scalax\/rules\/$tilde.html#+(other:String):String", "kind" : "def"}, {"label" : "formatted", "tail" : "(fmtstr: String): String", "member" : "scala.Predef.StringFormat.formatted", "link" : "scala\/tools\/scalap\/scalax\/rules\/$tilde.html#formatted(fmtstr:String):String", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: (~[A, B]) => Boolean, msg: => Any): ~[A, B]", "member" : "scala.Predef.Ensuring.ensuring", "link" : "scala\/tools\/scalap\/scalax\/rules\/$tilde.html#ensuring(cond:A=>Boolean,msg:=>Any):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: (~[A, B]) => Boolean): ~[A, B]", "member" : "scala.Predef.Ensuring.ensuring", "link" : "scala\/tools\/scalap\/scalax\/rules\/$tilde.html#ensuring(cond:A=>Boolean):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: Boolean, msg: => Any): ~[A, B]", "member" : "scala.Predef.Ensuring.ensuring", "link" : "scala\/tools\/scalap\/scalax\/rules\/$tilde.html#ensuring(cond:Boolean,msg:=>Any):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: Boolean): ~[A, B]", "member" : "scala.Predef.Ensuring.ensuring", "link" : "scala\/tools\/scalap\/scalax\/rules\/$tilde.html#ensuring(cond:Boolean):A", "kind" : "def"}, {"label" : "→", "tail" : "(y: B): (~[A, B], B)", "member" : "scala.Predef.ArrowAssoc.→", "link" : "scala\/tools\/scalap\/scalax\/rules\/$tilde.html#→[B](y:B):(A,B)", "kind" : "def"}, {"label" : "->", "tail" : "(y: B): (~[A, B], B)", "member" : "scala.Predef.ArrowAssoc.->", "link" : "scala\/tools\/scalap\/scalax\/rules\/$tilde.html#->[B](y:B):(A,B)", "kind" : "def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.tools.scalap.scalax.rules.~.toString", "link" : "scala\/tools\/scalap\/scalax\/rules\/$tilde.html#toString():String", "kind" : "def"}, {"member" : "scala.tools.scalap.scalax.rules.~#<init>", "error" : "unsupported entity"}, {"label" : "_2", "tail" : ": B", "member" : "scala.tools.scalap.scalax.rules.~._2", "link" : "scala\/tools\/scalap\/scalax\/rules\/$tilde.html#_2:B", "kind" : "val"}, {"label" : "_1", "tail" : ": A", "member" : "scala.tools.scalap.scalax.rules.~._1", "link" : "scala\/tools\/scalap\/scalax\/rules\/$tilde.html#_1:A", "kind" : "val"}, {"label" : "productElementNames", "tail" : "(): Iterator[String]", "member" : "scala.Product.productElementNames", "link" : "scala\/tools\/scalap\/scalax\/rules\/$tilde.html#productElementNames:Iterator[String]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "scala\/tools\/scalap\/scalax\/rules\/$tilde.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "scala\/tools\/scalap\/scalax\/rules\/$tilde.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "scala\/tools\/scalap\/scalax\/rules\/$tilde.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "scala\/tools\/scalap\/scalax\/rules\/$tilde.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "scala\/tools\/scalap\/scalax\/rules\/$tilde.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "scala\/tools\/scalap\/scalax\/rules\/$tilde.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "scala\/tools\/scalap\/scalax\/rules\/$tilde.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "scala\/tools\/scalap\/scalax\/rules\/$tilde.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "scala\/tools\/scalap\/scalax\/rules\/$tilde.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "scala\/tools\/scalap\/scalax\/rules\/$tilde.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "scala\/tools\/scalap\/scalax\/rules\/$tilde.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "scala\/tools\/scalap\/scalax\/rules\/$tilde.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "scala\/tools\/scalap\/scalax\/rules\/$tilde.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "scala\/tools\/scalap\/scalax\/rules\/$tilde.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "scala\/tools\/scalap\/scalax\/rules\/$tilde.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "scala\/tools\/scalap\/scalax\/rules\/$tilde.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "scala\/tools\/scalap\/scalax\/rules\/$tilde.html", "kind" : "case class"}], "scala.tools.scalap.scalax" : [], "scala" : [], "scala.tools.scalap.scalax.rules.scalasig" : [{"name" : "scala.tools.scalap.scalax.rules.scalasig.AliasSymbol", "shortDescription" : "", "members_case class" : [{"label" : "+", "tail" : "(other: String): String", "member" : "scala.Predef.any2stringadd.+", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/AliasSymbol.html#+(other:String):String", "kind" : "def"}, {"label" : "formatted", "tail" : "(fmtstr: String): String", "member" : "scala.Predef.StringFormat.formatted", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/AliasSymbol.html#formatted(fmtstr:String):String", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: (AliasSymbol) => Boolean, msg: => Any): AliasSymbol", "member" : "scala.Predef.Ensuring.ensuring", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/AliasSymbol.html#ensuring(cond:A=>Boolean,msg:=>Any):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: (AliasSymbol) => Boolean): AliasSymbol", "member" : "scala.Predef.Ensuring.ensuring", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/AliasSymbol.html#ensuring(cond:A=>Boolean):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: Boolean, msg: => Any): AliasSymbol", "member" : "scala.Predef.Ensuring.ensuring", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/AliasSymbol.html#ensuring(cond:Boolean,msg:=>Any):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: Boolean): AliasSymbol", "member" : "scala.Predef.Ensuring.ensuring", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/AliasSymbol.html#ensuring(cond:Boolean):A", "kind" : "def"}, {"label" : "→", "tail" : "(y: B): (AliasSymbol, B)", "member" : "scala.Predef.ArrowAssoc.→", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/AliasSymbol.html#→[B](y:B):(A,B)", "kind" : "def"}, {"label" : "->", "tail" : "(y: B): (AliasSymbol, B)", "member" : "scala.Predef.ArrowAssoc.->", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/AliasSymbol.html#->[B](y:B):(A,B)", "kind" : "def"}, {"label" : "path", "tail" : "(): String", "member" : "scala.tools.scalap.scalax.rules.scalasig.AliasSymbol.path", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/AliasSymbol.html#path:String", "kind" : "def"}, {"member" : "scala.tools.scalap.scalax.rules.scalasig.AliasSymbol#<init>", "error" : "unsupported entity"}, {"label" : "symbolInfo", "tail" : ": SymbolInfo", "member" : "scala.tools.scalap.scalax.rules.scalasig.AliasSymbol.symbolInfo", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/AliasSymbol.html#symbolInfo:scala.tools.scalap.scalax.rules.scalasig.SymbolInfo", "kind" : "val"}, {"label" : "productElementNames", "tail" : "(): Iterator[String]", "member" : "scala.Product.productElementNames", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/AliasSymbol.html#productElementNames:Iterator[String]", "kind" : "def"}, {"label" : "infoType", "tail" : ": Type", "member" : "scala.tools.scalap.scalax.rules.scalasig.SymbolInfoSymbol.infoType", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/AliasSymbol.html#infoType:scala.tools.scalap.scalax.rules.scalasig.Type", "kind" : "lazy val"}, {"label" : "hasFlag", "tail" : "(flag: Long): Boolean", "member" : "scala.tools.scalap.scalax.rules.scalasig.SymbolInfoSymbol.hasFlag", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/AliasSymbol.html#hasFlag(flag:Long):Boolean", "kind" : "def"}, {"label" : "parent", "tail" : "(): Some[Symbol]", "member" : "scala.tools.scalap.scalax.rules.scalasig.SymbolInfoSymbol.parent", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/AliasSymbol.html#parent:Some[scala.tools.scalap.scalax.rules.scalasig.Symbol]", "kind" : "def"}, {"label" : "name", "tail" : "(): String", "member" : "scala.tools.scalap.scalax.rules.scalasig.SymbolInfoSymbol.name", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/AliasSymbol.html#name:String", "kind" : "def"}, {"label" : "entry", "tail" : "(): Entry", "member" : "scala.tools.scalap.scalax.rules.scalasig.SymbolInfoSymbol.entry", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/AliasSymbol.html#entry:scala.tools.scalap.scalax.rules.scalasig.ScalaSig#Entry", "kind" : "def"}, {"label" : "attributes", "tail" : ": Seq[AttributeInfo]", "member" : "scala.tools.scalap.scalax.rules.scalasig.ScalaSigSymbol.attributes", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/AliasSymbol.html#attributes:Seq[scala.tools.scalap.scalax.rules.scalasig.AttributeInfo]", "kind" : "lazy val"}, {"label" : "children", "tail" : ": Seq[Symbol]", "member" : "scala.tools.scalap.scalax.rules.scalasig.ScalaSigSymbol.children", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/AliasSymbol.html#children:Seq[scala.tools.scalap.scalax.rules.scalasig.Symbol]", "kind" : "lazy val"}, {"label" : "index", "tail" : "(): Int", "member" : "scala.tools.scalap.scalax.rules.scalasig.ScalaSigSymbol.index", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/AliasSymbol.html#index:Int", "kind" : "def"}, {"label" : "applyScalaSigRule", "tail" : "(rule: Parser[A]): A", "member" : "scala.tools.scalap.scalax.rules.scalasig.ScalaSigSymbol.applyScalaSigRule", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/AliasSymbol.html#applyScalaSigRule[A](rule:scala.tools.scalap.scalax.rules.scalasig.ScalaSigParsers.Parser[A]):A", "kind" : "def"}, {"label" : "applyRule", "tail" : "(rule: EntryParser[A]): A", "member" : "scala.tools.scalap.scalax.rules.scalasig.ScalaSigSymbol.applyRule", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/AliasSymbol.html#applyRule[A](rule:scala.tools.scalap.scalax.rules.scalasig.ScalaSigEntryParsers.EntryParser[A]):A", "kind" : "def"}, {"label" : "isPreSuper", "tail" : "(): Boolean", "member" : "scala.tools.scalap.scalax.rules.scalasig.Flags.isPreSuper", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/AliasSymbol.html#isPreSuper:Boolean", "kind" : "def"}, {"label" : "isImplementationClass", "tail" : "(): Boolean", "member" : "scala.tools.scalap.scalax.rules.scalasig.Flags.isImplementationClass", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/AliasSymbol.html#isImplementationClass:Boolean", "kind" : "def"}, {"label" : "isExpandedName", "tail" : "(): Boolean", "member" : "scala.tools.scalap.scalax.rules.scalasig.Flags.isExpandedName", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/AliasSymbol.html#isExpandedName:Boolean", "kind" : "def"}, {"label" : "isExistential", "tail" : "(): Boolean", "member" : "scala.tools.scalap.scalax.rules.scalasig.Flags.isExistential", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/AliasSymbol.html#isExistential:Boolean", "kind" : "def"}, {"label" : "isMixedIn", "tail" : "(): Boolean", "member" : "scala.tools.scalap.scalax.rules.scalasig.Flags.isMixedIn", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/AliasSymbol.html#isMixedIn:Boolean", "kind" : "def"}, {"label" : "isLifted", "tail" : "(): Boolean", "member" : "scala.tools.scalap.scalax.rules.scalasig.Flags.isLifted", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/AliasSymbol.html#isLifted:Boolean", "kind" : "def"}, {"label" : "isOverloaded", "tail" : "(): Boolean", "member" : "scala.tools.scalap.scalax.rules.scalasig.Flags.isOverloaded", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/AliasSymbol.html#isOverloaded:Boolean", "kind" : "def"}, {"label" : "isError", "tail" : "(): Boolean", "member" : "scala.tools.scalap.scalax.rules.scalasig.Flags.isError", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/AliasSymbol.html#isError:Boolean", "kind" : "def"}, {"label" : "isLazy", "tail" : "(): Boolean", "member" : "scala.tools.scalap.scalax.rules.scalasig.Flags.isLazy", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/AliasSymbol.html#isLazy:Boolean", "kind" : "def"}, {"label" : "isMonomorphic", "tail" : "(): Boolean", "member" : "scala.tools.scalap.scalax.rules.scalasig.Flags.isMonomorphic", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/AliasSymbol.html#isMonomorphic:Boolean", "kind" : "def"}, {"label" : "isModuleVar", "tail" : "(): Boolean", "member" : "scala.tools.scalap.scalax.rules.scalasig.Flags.isModuleVar", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/AliasSymbol.html#isModuleVar:Boolean", "kind" : "def"}, {"label" : "isParamAccessor", "tail" : "(): Boolean", "member" : "scala.tools.scalap.scalax.rules.scalasig.Flags.isParamAccessor", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/AliasSymbol.html#isParamAccessor:Boolean", "kind" : "def"}, {"label" : "isSuperAccessor", "tail" : "(): Boolean", "member" : "scala.tools.scalap.scalax.rules.scalasig.Flags.isSuperAccessor", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/AliasSymbol.html#isSuperAccessor:Boolean", "kind" : "def"}, {"label" : "isAccessor", "tail" : "(): Boolean", "member" : "scala.tools.scalap.scalax.rules.scalasig.Flags.isAccessor", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/AliasSymbol.html#isAccessor:Boolean", "kind" : "def"}, {"label" : "isBridge", "tail" : "(): Boolean", "member" : "scala.tools.scalap.scalax.rules.scalasig.Flags.isBridge", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/AliasSymbol.html#isBridge:Boolean", "kind" : "def"}, {"label" : "isTrait", "tail" : "(): Boolean", "member" : "scala.tools.scalap.scalax.rules.scalasig.Flags.isTrait", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/AliasSymbol.html#isTrait:Boolean", "kind" : "def"}, {"label" : "isCaseAccessor", "tail" : "(): Boolean", "member" : "scala.tools.scalap.scalax.rules.scalasig.Flags.isCaseAccessor", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/AliasSymbol.html#isCaseAccessor:Boolean", "kind" : "def"}, {"label" : "isStatic", "tail" : "(): Boolean", "member" : "scala.tools.scalap.scalax.rules.scalasig.Flags.isStatic", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/AliasSymbol.html#isStatic:Boolean", "kind" : "def"}, {"label" : "isStable", "tail" : "(): Boolean", "member" : "scala.tools.scalap.scalax.rules.scalasig.Flags.isStable", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/AliasSymbol.html#isStable:Boolean", "kind" : "def"}, {"label" : "isSynthetic", "tail" : "(): Boolean", "member" : "scala.tools.scalap.scalax.rules.scalasig.Flags.isSynthetic", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/AliasSymbol.html#isSynthetic:Boolean", "kind" : "def"}, {"label" : "isJava", "tail" : "(): Boolean", "member" : "scala.tools.scalap.scalax.rules.scalasig.Flags.isJava", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/AliasSymbol.html#isJava:Boolean", "kind" : "def"}, {"label" : "isLocal", "tail" : "(): Boolean", "member" : "scala.tools.scalap.scalax.rules.scalasig.Flags.isLocal", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/AliasSymbol.html#isLocal:Boolean", "kind" : "def"}, {"label" : "isAbstractOverride", "tail" : "(): Boolean", "member" : "scala.tools.scalap.scalax.rules.scalasig.Flags.isAbstractOverride", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/AliasSymbol.html#isAbstractOverride:Boolean", "kind" : "def"}, {"label" : "isInConstructor", "tail" : "(): Boolean", "member" : "scala.tools.scalap.scalax.rules.scalasig.Flags.isInConstructor", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/AliasSymbol.html#isInConstructor:Boolean", "kind" : "def"}, {"label" : "isLabel", "tail" : "(): Boolean", "member" : "scala.tools.scalap.scalax.rules.scalasig.Flags.isLabel", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/AliasSymbol.html#isLabel:Boolean", "kind" : "def"}, {"label" : "isContravariant", "tail" : "(): Boolean", "member" : "scala.tools.scalap.scalax.rules.scalasig.Flags.isContravariant", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/AliasSymbol.html#isContravariant:Boolean", "kind" : "def"}, {"label" : "isByNameParam", "tail" : "(): Boolean", "member" : "scala.tools.scalap.scalax.rules.scalasig.Flags.isByNameParam", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/AliasSymbol.html#isByNameParam:Boolean", "kind" : "def"}, {"label" : "isCaptured", "tail" : "(): Boolean", "member" : "scala.tools.scalap.scalax.rules.scalasig.Flags.isCaptured", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/AliasSymbol.html#isCaptured:Boolean", "kind" : "def"}, {"label" : "isCovariant", "tail" : "(): Boolean", "member" : "scala.tools.scalap.scalax.rules.scalasig.Flags.isCovariant", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/AliasSymbol.html#isCovariant:Boolean", "kind" : "def"}, {"label" : "isDeprecated", "tail" : "(): Boolean", "member" : "scala.tools.scalap.scalax.rules.scalasig.Flags.isDeprecated", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/AliasSymbol.html#isDeprecated:Boolean", "kind" : "def"}, {"label" : "isPackage", "tail" : "(): Boolean", "member" : "scala.tools.scalap.scalax.rules.scalasig.Flags.isPackage", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/AliasSymbol.html#isPackage:Boolean", "kind" : "def"}, {"label" : "isParam", "tail" : "(): Boolean", "member" : "scala.tools.scalap.scalax.rules.scalasig.Flags.isParam", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/AliasSymbol.html#isParam:Boolean", "kind" : "def"}, {"label" : "isMutable", "tail" : "(): Boolean", "member" : "scala.tools.scalap.scalax.rules.scalasig.Flags.isMutable", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/AliasSymbol.html#isMutable:Boolean", "kind" : "def"}, {"label" : "isInterface", "tail" : "(): Boolean", "member" : "scala.tools.scalap.scalax.rules.scalasig.Flags.isInterface", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/AliasSymbol.html#isInterface:Boolean", "kind" : "def"}, {"label" : "isModule", "tail" : "(): Boolean", "member" : "scala.tools.scalap.scalax.rules.scalasig.Flags.isModule", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/AliasSymbol.html#isModule:Boolean", "kind" : "def"}, {"label" : "isMethod", "tail" : "(): Boolean", "member" : "scala.tools.scalap.scalax.rules.scalasig.Flags.isMethod", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/AliasSymbol.html#isMethod:Boolean", "kind" : "def"}, {"label" : "isDeferred", "tail" : "(): Boolean", "member" : "scala.tools.scalap.scalax.rules.scalasig.Flags.isDeferred", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/AliasSymbol.html#isDeferred:Boolean", "kind" : "def"}, {"label" : "isAbstract", "tail" : "(): Boolean", "member" : "scala.tools.scalap.scalax.rules.scalasig.Flags.isAbstract", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/AliasSymbol.html#isAbstract:Boolean", "kind" : "def"}, {"label" : "isCase", "tail" : "(): Boolean", "member" : "scala.tools.scalap.scalax.rules.scalasig.Flags.isCase", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/AliasSymbol.html#isCase:Boolean", "kind" : "def"}, {"label" : "isOverride", "tail" : "(): Boolean", "member" : "scala.tools.scalap.scalax.rules.scalasig.Flags.isOverride", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/AliasSymbol.html#isOverride:Boolean", "kind" : "def"}, {"label" : "isSealed", "tail" : "(): Boolean", "member" : "scala.tools.scalap.scalax.rules.scalasig.Flags.isSealed", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/AliasSymbol.html#isSealed:Boolean", "kind" : "def"}, {"label" : "isProtected", "tail" : "(): Boolean", "member" : "scala.tools.scalap.scalax.rules.scalasig.Flags.isProtected", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/AliasSymbol.html#isProtected:Boolean", "kind" : "def"}, {"label" : "isPrivate", "tail" : "(): Boolean", "member" : "scala.tools.scalap.scalax.rules.scalasig.Flags.isPrivate", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/AliasSymbol.html#isPrivate:Boolean", "kind" : "def"}, {"label" : "isFinal", "tail" : "(): Boolean", "member" : "scala.tools.scalap.scalax.rules.scalasig.Flags.isFinal", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/AliasSymbol.html#isFinal:Boolean", "kind" : "def"}, {"label" : "isImplicit", "tail" : "(): Boolean", "member" : "scala.tools.scalap.scalax.rules.scalasig.Flags.isImplicit", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/AliasSymbol.html#isImplicit:Boolean", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/AliasSymbol.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/AliasSymbol.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/AliasSymbol.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/AliasSymbol.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/AliasSymbol.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/AliasSymbol.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/AliasSymbol.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/AliasSymbol.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/AliasSymbol.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/AliasSymbol.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/AliasSymbol.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/AliasSymbol.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/AliasSymbol.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/AliasSymbol.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/AliasSymbol.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/AliasSymbol.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/AliasSymbol.html", "kind" : "case class"}, {"name" : "scala.tools.scalap.scalax.rules.scalasig.AnnotatedType", "shortDescription" : "", "members_case class" : [{"label" : "+", "tail" : "(other: String): String", "member" : "scala.Predef.any2stringadd.+", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/AnnotatedType.html#+(other:String):String", "kind" : "def"}, {"label" : "formatted", "tail" : "(fmtstr: String): String", "member" : "scala.Predef.StringFormat.formatted", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/AnnotatedType.html#formatted(fmtstr:String):String", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: (AnnotatedType) => Boolean, msg: => Any): AnnotatedType", "member" : "scala.Predef.Ensuring.ensuring", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/AnnotatedType.html#ensuring(cond:A=>Boolean,msg:=>Any):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: (AnnotatedType) => Boolean): AnnotatedType", "member" : "scala.Predef.Ensuring.ensuring", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/AnnotatedType.html#ensuring(cond:A=>Boolean):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: Boolean, msg: => Any): AnnotatedType", "member" : "scala.Predef.Ensuring.ensuring", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/AnnotatedType.html#ensuring(cond:Boolean,msg:=>Any):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: Boolean): AnnotatedType", "member" : "scala.Predef.Ensuring.ensuring", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/AnnotatedType.html#ensuring(cond:Boolean):A", "kind" : "def"}, {"label" : "→", "tail" : "(y: B): (AnnotatedType, B)", "member" : "scala.Predef.ArrowAssoc.→", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/AnnotatedType.html#→[B](y:B):(A,B)", "kind" : "def"}, {"label" : "->", "tail" : "(y: B): (AnnotatedType, B)", "member" : "scala.Predef.ArrowAssoc.->", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/AnnotatedType.html#->[B](y:B):(A,B)", "kind" : "def"}, {"member" : "scala.tools.scalap.scalax.rules.scalasig.AnnotatedType#<init>", "error" : "unsupported entity"}, {"label" : "attribTreeRefs", "tail" : ": List[Int]", "member" : "scala.tools.scalap.scalax.rules.scalasig.AnnotatedType.attribTreeRefs", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/AnnotatedType.html#attribTreeRefs:List[Int]", "kind" : "val"}, {"label" : "typeRef", "tail" : ": Type", "member" : "scala.tools.scalap.scalax.rules.scalasig.AnnotatedType.typeRef", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/AnnotatedType.html#typeRef:scala.tools.scalap.scalax.rules.scalasig.Type", "kind" : "val"}, {"label" : "productElementNames", "tail" : "(): Iterator[String]", "member" : "scala.Product.productElementNames", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/AnnotatedType.html#productElementNames:Iterator[String]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/AnnotatedType.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/AnnotatedType.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/AnnotatedType.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/AnnotatedType.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/AnnotatedType.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/AnnotatedType.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/AnnotatedType.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/AnnotatedType.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/AnnotatedType.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/AnnotatedType.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/AnnotatedType.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/AnnotatedType.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/AnnotatedType.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/AnnotatedType.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/AnnotatedType.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/AnnotatedType.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/AnnotatedType.html", "kind" : "case class"}, {"name" : "scala.tools.scalap.scalax.rules.scalasig.AnnotatedWithSelfType", "shortDescription" : "", "members_case class" : [{"label" : "+", "tail" : "(other: String): String", "member" : "scala.Predef.any2stringadd.+", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/AnnotatedWithSelfType.html#+(other:String):String", "kind" : "def"}, {"label" : "formatted", "tail" : "(fmtstr: String): String", "member" : "scala.Predef.StringFormat.formatted", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/AnnotatedWithSelfType.html#formatted(fmtstr:String):String", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: (AnnotatedWithSelfType) => Boolean, msg: => Any): AnnotatedWithSelfType", "member" : "scala.Predef.Ensuring.ensuring", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/AnnotatedWithSelfType.html#ensuring(cond:A=>Boolean,msg:=>Any):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: (AnnotatedWithSelfType) => Boolean): AnnotatedWithSelfType", "member" : "scala.Predef.Ensuring.ensuring", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/AnnotatedWithSelfType.html#ensuring(cond:A=>Boolean):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: Boolean, msg: => Any): AnnotatedWithSelfType", "member" : "scala.Predef.Ensuring.ensuring", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/AnnotatedWithSelfType.html#ensuring(cond:Boolean,msg:=>Any):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: Boolean): AnnotatedWithSelfType", "member" : "scala.Predef.Ensuring.ensuring", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/AnnotatedWithSelfType.html#ensuring(cond:Boolean):A", "kind" : "def"}, {"label" : "→", "tail" : "(y: B): (AnnotatedWithSelfType, B)", "member" : "scala.Predef.ArrowAssoc.→", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/AnnotatedWithSelfType.html#→[B](y:B):(A,B)", "kind" : "def"}, {"label" : "->", "tail" : "(y: B): (AnnotatedWithSelfType, B)", "member" : "scala.Predef.ArrowAssoc.->", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/AnnotatedWithSelfType.html#->[B](y:B):(A,B)", "kind" : "def"}, {"member" : "scala.tools.scalap.scalax.rules.scalasig.AnnotatedWithSelfType#<init>", "error" : "unsupported entity"}, {"label" : "attribTreeRefs", "tail" : ": List[Int]", "member" : "scala.tools.scalap.scalax.rules.scalasig.AnnotatedWithSelfType.attribTreeRefs", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/AnnotatedWithSelfType.html#attribTreeRefs:List[Int]", "kind" : "val"}, {"label" : "symbol", "tail" : ": Symbol", "member" : "scala.tools.scalap.scalax.rules.scalasig.AnnotatedWithSelfType.symbol", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/AnnotatedWithSelfType.html#symbol:scala.tools.scalap.scalax.rules.scalasig.Symbol", "kind" : "val"}, {"label" : "typeRef", "tail" : ": Type", "member" : "scala.tools.scalap.scalax.rules.scalasig.AnnotatedWithSelfType.typeRef", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/AnnotatedWithSelfType.html#typeRef:scala.tools.scalap.scalax.rules.scalasig.Type", "kind" : "val"}, {"label" : "productElementNames", "tail" : "(): Iterator[String]", "member" : "scala.Product.productElementNames", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/AnnotatedWithSelfType.html#productElementNames:Iterator[String]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/AnnotatedWithSelfType.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/AnnotatedWithSelfType.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/AnnotatedWithSelfType.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/AnnotatedWithSelfType.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/AnnotatedWithSelfType.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/AnnotatedWithSelfType.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/AnnotatedWithSelfType.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/AnnotatedWithSelfType.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/AnnotatedWithSelfType.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/AnnotatedWithSelfType.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/AnnotatedWithSelfType.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/AnnotatedWithSelfType.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/AnnotatedWithSelfType.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/AnnotatedWithSelfType.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/AnnotatedWithSelfType.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/AnnotatedWithSelfType.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/AnnotatedWithSelfType.html", "kind" : "case class"}, {"name" : "scala.tools.scalap.scalax.rules.scalasig.AnnotInfo", "shortDescription" : "", "members_case class" : [{"label" : "+", "tail" : "(other: String): String", "member" : "scala.Predef.any2stringadd.+", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/AnnotInfo.html#+(other:String):String", "kind" : "def"}, {"label" : "formatted", "tail" : "(fmtstr: String): String", "member" : "scala.Predef.StringFormat.formatted", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/AnnotInfo.html#formatted(fmtstr:String):String", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: (AnnotInfo) => Boolean, msg: => Any): AnnotInfo", "member" : "scala.Predef.Ensuring.ensuring", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/AnnotInfo.html#ensuring(cond:A=>Boolean,msg:=>Any):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: (AnnotInfo) => Boolean): AnnotInfo", "member" : "scala.Predef.Ensuring.ensuring", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/AnnotInfo.html#ensuring(cond:A=>Boolean):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: Boolean, msg: => Any): AnnotInfo", "member" : "scala.Predef.Ensuring.ensuring", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/AnnotInfo.html#ensuring(cond:Boolean,msg:=>Any):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: Boolean): AnnotInfo", "member" : "scala.Predef.Ensuring.ensuring", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/AnnotInfo.html#ensuring(cond:Boolean):A", "kind" : "def"}, {"label" : "→", "tail" : "(y: B): (AnnotInfo, B)", "member" : "scala.Predef.ArrowAssoc.→", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/AnnotInfo.html#→[B](y:B):(A,B)", "kind" : "def"}, {"label" : "->", "tail" : "(y: B): (AnnotInfo, B)", "member" : "scala.Predef.ArrowAssoc.->", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/AnnotInfo.html#->[B](y:B):(A,B)", "kind" : "def"}, {"member" : "scala.tools.scalap.scalax.rules.scalasig.AnnotInfo#<init>", "error" : "unsupported entity"}, {"label" : "refs", "tail" : ": Seq[Int]", "member" : "scala.tools.scalap.scalax.rules.scalasig.AnnotInfo.refs", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/AnnotInfo.html#refs:Seq[Int]", "kind" : "val"}, {"label" : "productElementNames", "tail" : "(): Iterator[String]", "member" : "scala.Product.productElementNames", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/AnnotInfo.html#productElementNames:Iterator[String]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/AnnotInfo.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/AnnotInfo.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/AnnotInfo.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/AnnotInfo.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/AnnotInfo.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/AnnotInfo.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/AnnotInfo.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/AnnotInfo.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/AnnotInfo.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/AnnotInfo.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/AnnotInfo.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/AnnotInfo.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/AnnotInfo.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/AnnotInfo.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/AnnotInfo.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/AnnotInfo.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/AnnotInfo.html", "kind" : "case class"}, {"name" : "scala.tools.scalap.scalax.rules.scalasig.Attribute", "shortDescription" : "", "members_case class" : [{"label" : "+", "tail" : "(other: String): String", "member" : "scala.Predef.any2stringadd.+", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/Attribute.html#+(other:String):String", "kind" : "def"}, {"label" : "formatted", "tail" : "(fmtstr: String): String", "member" : "scala.Predef.StringFormat.formatted", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/Attribute.html#formatted(fmtstr:String):String", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: (Attribute) => Boolean, msg: => Any): Attribute", "member" : "scala.Predef.Ensuring.ensuring", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/Attribute.html#ensuring(cond:A=>Boolean,msg:=>Any):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: (Attribute) => Boolean): Attribute", "member" : "scala.Predef.Ensuring.ensuring", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/Attribute.html#ensuring(cond:A=>Boolean):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: Boolean, msg: => Any): Attribute", "member" : "scala.Predef.Ensuring.ensuring", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/Attribute.html#ensuring(cond:Boolean,msg:=>Any):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: Boolean): Attribute", "member" : "scala.Predef.Ensuring.ensuring", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/Attribute.html#ensuring(cond:Boolean):A", "kind" : "def"}, {"label" : "→", "tail" : "(y: B): (Attribute, B)", "member" : "scala.Predef.ArrowAssoc.→", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/Attribute.html#→[B](y:B):(A,B)", "kind" : "def"}, {"label" : "->", "tail" : "(y: B): (Attribute, B)", "member" : "scala.Predef.ArrowAssoc.->", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/Attribute.html#->[B](y:B):(A,B)", "kind" : "def"}, {"member" : "scala.tools.scalap.scalax.rules.scalasig.Attribute#<init>", "error" : "unsupported entity"}, {"label" : "byteCode", "tail" : ": ByteCode", "member" : "scala.tools.scalap.scalax.rules.scalasig.Attribute.byteCode", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/Attribute.html#byteCode:scala.tools.scalap.scalax.rules.scalasig.ByteCode", "kind" : "val"}, {"label" : "nameIndex", "tail" : ": Int", "member" : "scala.tools.scalap.scalax.rules.scalasig.Attribute.nameIndex", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/Attribute.html#nameIndex:Int", "kind" : "val"}, {"label" : "productElementNames", "tail" : "(): Iterator[String]", "member" : "scala.Product.productElementNames", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/Attribute.html#productElementNames:Iterator[String]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/Attribute.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/Attribute.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/Attribute.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/Attribute.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/Attribute.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/Attribute.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/Attribute.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/Attribute.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/Attribute.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/Attribute.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/Attribute.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/Attribute.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/Attribute.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/Attribute.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/Attribute.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/Attribute.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/Attribute.html", "kind" : "case class"}, {"name" : "scala.tools.scalap.scalax.rules.scalasig.AttributeInfo", "shortDescription" : "", "members_case class" : [{"label" : "+", "tail" : "(other: String): String", "member" : "scala.Predef.any2stringadd.+", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/AttributeInfo.html#+(other:String):String", "kind" : "def"}, {"label" : "formatted", "tail" : "(fmtstr: String): String", "member" : "scala.Predef.StringFormat.formatted", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/AttributeInfo.html#formatted(fmtstr:String):String", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: (AttributeInfo) => Boolean, msg: => Any): AttributeInfo", "member" : "scala.Predef.Ensuring.ensuring", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/AttributeInfo.html#ensuring(cond:A=>Boolean,msg:=>Any):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: (AttributeInfo) => Boolean): AttributeInfo", "member" : "scala.Predef.Ensuring.ensuring", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/AttributeInfo.html#ensuring(cond:A=>Boolean):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: Boolean, msg: => Any): AttributeInfo", "member" : "scala.Predef.Ensuring.ensuring", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/AttributeInfo.html#ensuring(cond:Boolean,msg:=>Any):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: Boolean): AttributeInfo", "member" : "scala.Predef.Ensuring.ensuring", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/AttributeInfo.html#ensuring(cond:Boolean):A", "kind" : "def"}, {"label" : "→", "tail" : "(y: B): (AttributeInfo, B)", "member" : "scala.Predef.ArrowAssoc.→", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/AttributeInfo.html#→[B](y:B):(A,B)", "kind" : "def"}, {"label" : "->", "tail" : "(y: B): (AttributeInfo, B)", "member" : "scala.Predef.ArrowAssoc.->", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/AttributeInfo.html#->[B](y:B):(A,B)", "kind" : "def"}, {"member" : "scala.tools.scalap.scalax.rules.scalasig.AttributeInfo#<init>", "error" : "unsupported entity"}, {"label" : "values", "tail" : ": Seq[~[String, Any]]", "member" : "scala.tools.scalap.scalax.rules.scalasig.AttributeInfo.values", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/AttributeInfo.html#values:Seq[String~Any]", "kind" : "val"}, {"label" : "value", "tail" : ": Option[Any]", "member" : "scala.tools.scalap.scalax.rules.scalasig.AttributeInfo.value", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/AttributeInfo.html#value:Option[Any]", "kind" : "val"}, {"label" : "typeRef", "tail" : ": Type", "member" : "scala.tools.scalap.scalax.rules.scalasig.AttributeInfo.typeRef", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/AttributeInfo.html#typeRef:scala.tools.scalap.scalax.rules.scalasig.Type", "kind" : "val"}, {"label" : "symbol", "tail" : ": Symbol", "member" : "scala.tools.scalap.scalax.rules.scalasig.AttributeInfo.symbol", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/AttributeInfo.html#symbol:scala.tools.scalap.scalax.rules.scalasig.Symbol", "kind" : "val"}, {"label" : "productElementNames", "tail" : "(): Iterator[String]", "member" : "scala.Product.productElementNames", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/AttributeInfo.html#productElementNames:Iterator[String]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/AttributeInfo.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/AttributeInfo.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/AttributeInfo.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/AttributeInfo.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/AttributeInfo.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/AttributeInfo.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/AttributeInfo.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/AttributeInfo.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/AttributeInfo.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/AttributeInfo.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/AttributeInfo.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/AttributeInfo.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/AttributeInfo.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/AttributeInfo.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/AttributeInfo.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/AttributeInfo.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/AttributeInfo.html", "kind" : "case class"}, {"name" : "scala.tools.scalap.scalax.rules.scalasig.ByteCode", "shortDescription" : "", "object" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/ByteCode$.html", "members_class" : [{"label" : "+", "tail" : "(other: String): String", "member" : "scala.Predef.any2stringadd.+", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/ByteCode.html#+(other:String):String", "kind" : "def"}, {"label" : "formatted", "tail" : "(fmtstr: String): String", "member" : "scala.Predef.StringFormat.formatted", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/ByteCode.html#formatted(fmtstr:String):String", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: (ByteCode) => Boolean, msg: => Any): ByteCode", "member" : "scala.Predef.Ensuring.ensuring", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/ByteCode.html#ensuring(cond:A=>Boolean,msg:=>Any):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: (ByteCode) => Boolean): ByteCode", "member" : "scala.Predef.Ensuring.ensuring", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/ByteCode.html#ensuring(cond:A=>Boolean):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: Boolean, msg: => Any): ByteCode", "member" : "scala.Predef.Ensuring.ensuring", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/ByteCode.html#ensuring(cond:Boolean,msg:=>Any):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: Boolean): ByteCode", "member" : "scala.Predef.Ensuring.ensuring", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/ByteCode.html#ensuring(cond:Boolean):A", "kind" : "def"}, {"label" : "→", "tail" : "(y: B): (ByteCode, B)", "member" : "scala.Predef.ArrowAssoc.→", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/ByteCode.html#→[B](y:B):(A,B)", "kind" : "def"}, {"label" : "->", "tail" : "(y: B): (ByteCode, B)", "member" : "scala.Predef.ArrowAssoc.->", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/ByteCode.html#->[B](y:B):(A,B)", "kind" : "def"}, {"label" : "byte", "tail" : "(i: Int): Int", "member" : "scala.tools.scalap.scalax.rules.scalasig.ByteCode.byte", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/ByteCode.html#byte(i:Int):Int", "kind" : "def"}, {"label" : "fromUTF8StringAndBytes", "tail" : "(): StringBytesPair", "member" : "scala.tools.scalap.scalax.rules.scalasig.ByteCode.fromUTF8StringAndBytes", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/ByteCode.html#fromUTF8StringAndBytes:scala.tools.scalap.scalax.rules.scalasig.StringBytesPair", "kind" : "def"}, {"label" : "toLong", "tail" : "(): Long", "member" : "scala.tools.scalap.scalax.rules.scalasig.ByteCode.toLong", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/ByteCode.html#toLong:Long", "kind" : "def"}, {"label" : "toInt", "tail" : "(): Int", "member" : "scala.tools.scalap.scalax.rules.scalasig.ByteCode.toInt", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/ByteCode.html#toInt:Int", "kind" : "def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.tools.scalap.scalax.rules.scalasig.ByteCode.toString", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/ByteCode.html#toString():String", "kind" : "def"}, {"label" : "fold", "tail" : "(x: X)(f: (X, Byte) => X): X", "member" : "scala.tools.scalap.scalax.rules.scalasig.ByteCode.fold", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/ByteCode.html#fold[X](x:X)(f:(X,Byte)=>X):X", "kind" : "def"}, {"label" : "drop", "tail" : "(n: Int): ByteCode", "member" : "scala.tools.scalap.scalax.rules.scalasig.ByteCode.drop", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/ByteCode.html#drop(n:Int):scala.tools.scalap.scalax.rules.scalasig.ByteCode", "kind" : "def"}, {"label" : "take", "tail" : "(n: Int): ByteCode", "member" : "scala.tools.scalap.scalax.rules.scalasig.ByteCode.take", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/ByteCode.html#take(n:Int):scala.tools.scalap.scalax.rules.scalasig.ByteCode", "kind" : "def"}, {"label" : "next", "tail" : "(n: Int): Product with Result[ByteCode, ByteCode, Nothing] with java.io.Serializable", "member" : "scala.tools.scalap.scalax.rules.scalasig.ByteCode.next", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/ByteCode.html#next(n:Int):Productwithscala.tools.scalap.scalax.rules.Result[scala.tools.scalap.scalax.rules.scalasig.ByteCode,scala.tools.scalap.scalax.rules.scalasig.ByteCode,Nothing]withjava.io.Serializable", "kind" : "def"}, {"label" : "nextByte", "tail" : "(): Product with Result[ByteCode, Byte, Nothing] with java.io.Serializable", "member" : "scala.tools.scalap.scalax.rules.scalasig.ByteCode.nextByte", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/ByteCode.html#nextByte:Productwithscala.tools.scalap.scalax.rules.Result[scala.tools.scalap.scalax.rules.scalasig.ByteCode,Byte,Nothing]withjava.io.Serializable", "kind" : "def"}, {"member" : "scala.tools.scalap.scalax.rules.scalasig.ByteCode#<init>", "error" : "unsupported entity"}, {"label" : "length", "tail" : ": Int", "member" : "scala.tools.scalap.scalax.rules.scalasig.ByteCode.length", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/ByteCode.html#length:Int", "kind" : "val"}, {"label" : "pos", "tail" : ": Int", "member" : "scala.tools.scalap.scalax.rules.scalasig.ByteCode.pos", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/ByteCode.html#pos:Int", "kind" : "val"}, {"label" : "bytes", "tail" : ": Array[Byte]", "member" : "scala.tools.scalap.scalax.rules.scalasig.ByteCode.bytes", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/ByteCode.html#bytes:Array[Byte]", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/ByteCode.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/ByteCode.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/ByteCode.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/ByteCode.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/ByteCode.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/ByteCode.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/ByteCode.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/ByteCode.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/ByteCode.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/ByteCode.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/ByteCode.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/ByteCode.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/ByteCode.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/ByteCode.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/ByteCode.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/ByteCode.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/ByteCode.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/ByteCode.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "members_object" : [{"label" : "forClass", "tail" : "(clazz: Class[_]): ByteCode", "member" : "scala.tools.scalap.scalax.rules.scalasig.ByteCode.forClass", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/ByteCode$.html#forClass(clazz:Class[_]):scala.tools.scalap.scalax.rules.scalasig.ByteCode", "kind" : "def"}, {"label" : "apply", "tail" : "(bytes: Array[Byte]): ByteCode", "member" : "scala.tools.scalap.scalax.rules.scalasig.ByteCode.apply", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/ByteCode$.html#apply(bytes:Array[Byte]):scala.tools.scalap.scalax.rules.scalasig.ByteCode", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/ByteCode$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/ByteCode$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/ByteCode$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/ByteCode$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/ByteCode$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/ByteCode$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/ByteCode$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/ByteCode$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/ByteCode$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/ByteCode$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/ByteCode$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/ByteCode$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/ByteCode$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/ByteCode$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/ByteCode$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/ByteCode$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/ByteCode$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/ByteCode$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/ByteCode$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/ByteCode.html", "kind" : "object"}, {"name" : "scala.tools.scalap.scalax.rules.scalasig.ByteCodeReader", "trait" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/ByteCodeReader.html", "kind" : "trait", "members_trait" : [{"label" : "+", "tail" : "(other: String): String", "member" : "scala.Predef.any2stringadd.+", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/ByteCodeReader.html#+(other:String):String", "kind" : "def"}, {"label" : "formatted", "tail" : "(fmtstr: String): String", "member" : "scala.Predef.StringFormat.formatted", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/ByteCodeReader.html#formatted(fmtstr:String):String", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: (ByteCodeReader) => Boolean, msg: => Any): ByteCodeReader", "member" : "scala.Predef.Ensuring.ensuring", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/ByteCodeReader.html#ensuring(cond:A=>Boolean,msg:=>Any):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: (ByteCodeReader) => Boolean): ByteCodeReader", "member" : "scala.Predef.Ensuring.ensuring", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/ByteCodeReader.html#ensuring(cond:A=>Boolean):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: Boolean, msg: => Any): ByteCodeReader", "member" : "scala.Predef.Ensuring.ensuring", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/ByteCodeReader.html#ensuring(cond:Boolean,msg:=>Any):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: Boolean): ByteCodeReader", "member" : "scala.Predef.Ensuring.ensuring", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/ByteCodeReader.html#ensuring(cond:Boolean):A", "kind" : "def"}, {"label" : "→", "tail" : "(y: B): (ByteCodeReader, B)", "member" : "scala.Predef.ArrowAssoc.→", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/ByteCodeReader.html#→[B](y:B):(A,B)", "kind" : "def"}, {"label" : "->", "tail" : "(y: B): (ByteCodeReader, B)", "member" : "scala.Predef.ArrowAssoc.->", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/ByteCodeReader.html#->[B](y:B):(A,B)", "kind" : "def"}, {"label" : "DefaultRule", "tail" : "", "member" : "scala.tools.scalap.scalax.rules.Rules.DefaultRule", "link" : "scala\/tools\/scalap\/scalax\/rules\/Rules.html#DefaultRule[In,Out,A,X]extendsRule[In,Out,A,X]", "kind" : "class"}, {"label" : "FromRule", "tail" : "", "member" : "scala.tools.scalap.scalax.rules.Rules.FromRule", "link" : "scala\/tools\/scalap\/scalax\/rules\/Rules.html#FromRule[In]extendsAnyRef", "kind" : "trait"}, {"label" : "bytes", "tail" : "(n: Int): rules.Rule[S, S, ByteCode, Nothing]", "member" : "scala.tools.scalap.scalax.rules.scalasig.ByteCodeReader.bytes", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/ByteCodeReader.html#bytes(n:Int):scala.tools.scalap.scalax.rules.Rule[ByteCodeReader.this.S,ByteCodeReader.this.S,scala.tools.scalap.scalax.rules.scalasig.ByteCode,Nothing]", "kind" : "def"}, {"label" : "u4", "tail" : ": rules.Rule[S, S, Int, Nothing]", "member" : "scala.tools.scalap.scalax.rules.scalasig.ByteCodeReader.u4", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/ByteCodeReader.html#u4:scala.tools.scalap.scalax.rules.Rule[ByteCodeReader.this.S,ByteCodeReader.this.S,Int,Nothing]", "kind" : "val"}, {"label" : "u2", "tail" : ": rules.Rule[S, S, Int, Nothing]", "member" : "scala.tools.scalap.scalax.rules.scalasig.ByteCodeReader.u2", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/ByteCodeReader.html#u2:scala.tools.scalap.scalax.rules.Rule[ByteCodeReader.this.S,ByteCodeReader.this.S,Int,Nothing]", "kind" : "val"}, {"label" : "u1", "tail" : ": rules.Rule[S, S, Int, Nothing]", "member" : "scala.tools.scalap.scalax.rules.scalasig.ByteCodeReader.u1", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/ByteCodeReader.html#u1:scala.tools.scalap.scalax.rules.Rule[ByteCodeReader.this.S,ByteCodeReader.this.S,Int,Nothing]", "kind" : "val"}, {"label" : "byte", "tail" : ": rules.Rule[S, S, Byte, Nothing]", "member" : "scala.tools.scalap.scalax.rules.scalasig.ByteCodeReader.byte", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/ByteCodeReader.html#byte:scala.tools.scalap.scalax.rules.Rule[ByteCodeReader.this.S,ByteCodeReader.this.S,Byte,Nothing]", "kind" : "val"}, {"label" : "Parser", "tail" : "", "member" : "scala.tools.scalap.scalax.rules.scalasig.ByteCodeReader.Parser", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/ByteCodeReader.html#Parser[A]=ByteCodeReader.this.Rule[A,String]", "kind" : "type"}, {"label" : "S", "tail" : "", "member" : "scala.tools.scalap.scalax.rules.scalasig.ByteCodeReader.S", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/ByteCodeReader.html#S=scala.tools.scalap.scalax.rules.scalasig.ByteCode", "kind" : "type"}, {"label" : "factory", "tail" : ": RulesWithState", "member" : "scala.tools.scalap.scalax.rules.RulesWithState.factory", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/ByteCodeReader.html#factory:scala.tools.scalap.scalax.rules.RulesWithState", "kind" : "val"}, {"label" : "repeatUntil", "tail" : "(rule: Rule[(T) => T, X])(finished: (T) => Boolean)(initial: T): rules.Rule[S, S, T, X]", "member" : "scala.tools.scalap.scalax.rules.StateRules.repeatUntil", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/ByteCodeReader.html#repeatUntil[T,X](rule:StateRules.this.Rule[T=>T,X])(finished:T=>Boolean)(initial:T):scala.tools.scalap.scalax.rules.Rule[StateRules.this.S,StateRules.this.S,T,X]", "kind" : "def"}, {"label" : "anyOf", "tail" : "(rules: Seq[Rule[A, X]]): rules.Rule[S, S, collection.immutable.List[A], X]", "member" : "scala.tools.scalap.scalax.rules.StateRules.anyOf", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/ByteCodeReader.html#anyOf[A,X](rules:Seq[StateRules.this.Rule[A,X]]):scala.tools.scalap.scalax.rules.Rule[StateRules.this.S,StateRules.this.S,List[A],X]", "kind" : "def"}, {"label" : "allOf", "tail" : "(rules: Seq[Rule[A, X]]): (S) => Result[S, List[A], X]", "member" : "scala.tools.scalap.scalax.rules.StateRules.allOf", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/ByteCodeReader.html#allOf[A,X](rules:Seq[StateRules.this.Rule[A,X]]):StateRules.this.S=>scala.tools.scalap.scalax.rules.Result[StateRules.this.S,List[A],X]", "kind" : "def"}, {"label" : "cond", "tail" : "(f: (S) => Boolean): rules.Rule[S, S, S, Nothing]", "member" : "scala.tools.scalap.scalax.rules.StateRules.cond", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/ByteCodeReader.html#cond(f:StateRules.this.S=>Boolean):scala.tools.scalap.scalax.rules.Rule[StateRules.this.S,StateRules.this.S,StateRules.this.S,Nothing]", "kind" : "def"}, {"label" : "none", "tail" : "(): rules.Rule[S, S, None.type, Nothing]", "member" : "scala.tools.scalap.scalax.rules.StateRules.none", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/ByteCodeReader.html#none:scala.tools.scalap.scalax.rules.Rule[StateRules.this.S,StateRules.this.S,None.type,Nothing]", "kind" : "def"}, {"label" : "nil", "tail" : "(): rules.Rule[S, S, collection.immutable.Nil.type, Nothing]", "member" : "scala.tools.scalap.scalax.rules.StateRules.nil", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/ByteCodeReader.html#nil:scala.tools.scalap.scalax.rules.Rule[StateRules.this.S,StateRules.this.S,scala.collection.immutable.Nil.type,Nothing]", "kind" : "def"}, {"label" : "update", "tail" : "(f: (S) => S): rules.Rule[S, S, S, Nothing]", "member" : "scala.tools.scalap.scalax.rules.StateRules.update", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/ByteCodeReader.html#update(f:StateRules.this.S=>StateRules.this.S):scala.tools.scalap.scalax.rules.Rule[StateRules.this.S,StateRules.this.S,StateRules.this.S,Nothing]", "kind" : "def"}, {"label" : "set", "tail" : "(s: => S): rules.Rule[S, S, S, Nothing]", "member" : "scala.tools.scalap.scalax.rules.StateRules.set", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/ByteCodeReader.html#set(s:=>StateRules.this.S):scala.tools.scalap.scalax.rules.Rule[StateRules.this.S,StateRules.this.S,StateRules.this.S,Nothing]", "kind" : "def"}, {"label" : "get", "tail" : "(): rules.Rule[S, S, S, Nothing]", "member" : "scala.tools.scalap.scalax.rules.StateRules.get", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/ByteCodeReader.html#get:scala.tools.scalap.scalax.rules.Rule[StateRules.this.S,StateRules.this.S,StateRules.this.S,Nothing]", "kind" : "def"}, {"label" : "read", "tail" : "(f: (S) => A): rules.Rule[S, S, A, Nothing]", "member" : "scala.tools.scalap.scalax.rules.StateRules.read", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/ByteCodeReader.html#read[A](f:StateRules.this.S=>A):scala.tools.scalap.scalax.rules.Rule[StateRules.this.S,StateRules.this.S,A,Nothing]", "kind" : "def"}, {"label" : "unit", "tail" : "(a: => A): rules.Rule[S, S, A, Nothing]", "member" : "scala.tools.scalap.scalax.rules.StateRules.unit", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/ByteCodeReader.html#unit[A](a:=>A):scala.tools.scalap.scalax.rules.Rule[StateRules.this.S,StateRules.this.S,A,Nothing]", "kind" : "def"}, {"label" : "apply", "tail" : "(f: (S) => Result[S, A, X]): rules.Rule[S, S, A, X]", "member" : "scala.tools.scalap.scalax.rules.StateRules.apply", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/ByteCodeReader.html#apply[A,X](f:StateRules.this.S=>scala.tools.scalap.scalax.rules.Result[StateRules.this.S,A,X]):scala.tools.scalap.scalax.rules.Rule[StateRules.this.S,StateRules.this.S,A,X]", "kind" : "def"}, {"label" : "Rule", "tail" : "", "member" : "scala.tools.scalap.scalax.rules.StateRules.Rule", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/ByteCodeReader.html#Rule[+A,+X]=scala.tools.scalap.scalax.rules.Rule[StateRules.this.S,StateRules.this.S,A,X]", "kind" : "type"}, {"label" : "expect", "tail" : "(rule: rules.Rule[In, Out, A, R]): (In) => A", "member" : "scala.tools.scalap.scalax.rules.Rules.expect", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/ByteCodeReader.html#expect[In,Out,A,R](rule:scala.tools.scalap.scalax.rules.Rule[In,Out,A,R]):In=>A", "kind" : "def"}, {"label" : "ruleWithName", "tail" : "(_name: String, f: (In) => Result[Out, A, X]): rules.Rule[In, Out, A, X] with Name", "member" : "scala.tools.scalap.scalax.rules.Rules.ruleWithName", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/ByteCodeReader.html#ruleWithName[In,Out,A,X](_name:String,f:In=>scala.tools.scalap.scalax.rules.Result[Out,A,X]):scala.tools.scalap.scalax.rules.Rule[In,Out,A,X]withscala.tools.scalap.scalax.rules.Name", "kind" : "def"}, {"label" : "oneOf", "tail" : "(rules: rules.Rule[In, Out, A, X]*): rules.Rule[In, Out, A, X]", "member" : "scala.tools.scalap.scalax.rules.Rules.oneOf", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/ByteCodeReader.html#oneOf[In,Out,A,X](rules:scala.tools.scalap.scalax.rules.Rule[In,Out,A,X]*):scala.tools.scalap.scalax.rules.Rule[In,Out,A,X]", "kind" : "def"}, {"label" : "error", "tail" : "(err: X): rules.Rule[Any, Nothing, Nothing, X]", "member" : "scala.tools.scalap.scalax.rules.Rules.error", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/ByteCodeReader.html#error[X](err:X):scala.tools.scalap.scalax.rules.Rule[Any,Nothing,Nothing,X]", "kind" : "def"}, {"label" : "error", "tail" : "(): rules.Rule[In, Nothing, Nothing, In]", "member" : "scala.tools.scalap.scalax.rules.Rules.error", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/ByteCodeReader.html#error[In]:scala.tools.scalap.scalax.rules.Rule[In,Nothing,Nothing,In]", "kind" : "def"}, {"label" : "failure", "tail" : "(): rules.Rule[Any, Nothing, Nothing, Nothing]", "member" : "scala.tools.scalap.scalax.rules.Rules.failure", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/ByteCodeReader.html#failure:scala.tools.scalap.scalax.rules.Rule[Any,Nothing,Nothing,Nothing]", "kind" : "def"}, {"label" : "success", "tail" : "(out: Out, a: A): rules.Rule[Any, Out, A, Nothing]", "member" : "scala.tools.scalap.scalax.rules.Rules.success", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/ByteCodeReader.html#success[Out,A](out:Out,a:A):scala.tools.scalap.scalax.rules.Rule[Any,Out,A,Nothing]", "kind" : "def"}, {"label" : "state", "tail" : "(): StateRules { type S = s }", "member" : "scala.tools.scalap.scalax.rules.Rules.state", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/ByteCodeReader.html#state[s]:scala.tools.scalap.scalax.rules.StateRules{typeS=s}", "kind" : "def"}, {"label" : "from", "tail" : "(): FromRule[In]", "member" : "scala.tools.scalap.scalax.rules.Rules.from", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/ByteCodeReader.html#from[In]:Rules.this.FromRule[In]", "kind" : "def"}, {"label" : "seqRule", "tail" : "(rule: rules.Rule[In, In, A, X]): SeqRule[In, A, X]", "member" : "scala.tools.scalap.scalax.rules.Rules.seqRule", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/ByteCodeReader.html#seqRule[In,A,X](rule:scala.tools.scalap.scalax.rules.Rule[In,In,A,X]):scala.tools.scalap.scalax.rules.SeqRule[In,A,X]", "kind" : "implicit def"}, {"label" : "inRule", "tail" : "(rule: rules.Rule[In, Out, A, X]): InRule[In, Out, A, X]", "member" : "scala.tools.scalap.scalax.rules.Rules.inRule", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/ByteCodeReader.html#inRule[In,Out,A,X](rule:scala.tools.scalap.scalax.rules.Rule[In,Out,A,X]):scala.tools.scalap.scalax.rules.InRule[In,Out,A,X]", "kind" : "implicit def"}, {"label" : "rule", "tail" : "(f: (In) => Result[Out, A, X]): rules.Rule[In, Out, A, X]", "member" : "scala.tools.scalap.scalax.rules.Rules.rule", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/ByteCodeReader.html#rule[In,Out,A,X](f:In=>scala.tools.scalap.scalax.rules.Result[Out,A,X]):scala.tools.scalap.scalax.rules.Rule[In,Out,A,X]", "kind" : "implicit def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/ByteCodeReader.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/ByteCodeReader.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/ByteCodeReader.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/ByteCodeReader.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/ByteCodeReader.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/ByteCodeReader.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/ByteCodeReader.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/ByteCodeReader.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/ByteCodeReader.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/ByteCodeReader.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/ByteCodeReader.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/ByteCodeReader.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/ByteCodeReader.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/ByteCodeReader.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/ByteCodeReader.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/ByteCodeReader.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/ByteCodeReader.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/ByteCodeReader.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/ByteCodeReader.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "shortDescription" : "Provides rules for parsing byte-code."}, {"name" : "scala.tools.scalap.scalax.rules.scalasig.Children", "shortDescription" : "", "members_case class" : [{"label" : "+", "tail" : "(other: String): String", "member" : "scala.Predef.any2stringadd.+", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/Children.html#+(other:String):String", "kind" : "def"}, {"label" : "formatted", "tail" : "(fmtstr: String): String", "member" : "scala.Predef.StringFormat.formatted", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/Children.html#formatted(fmtstr:String):String", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: (Children) => Boolean, msg: => Any): Children", "member" : "scala.Predef.Ensuring.ensuring", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/Children.html#ensuring(cond:A=>Boolean,msg:=>Any):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: (Children) => Boolean): Children", "member" : "scala.Predef.Ensuring.ensuring", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/Children.html#ensuring(cond:A=>Boolean):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: Boolean, msg: => Any): Children", "member" : "scala.Predef.Ensuring.ensuring", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/Children.html#ensuring(cond:Boolean,msg:=>Any):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: Boolean): Children", "member" : "scala.Predef.Ensuring.ensuring", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/Children.html#ensuring(cond:Boolean):A", "kind" : "def"}, {"label" : "→", "tail" : "(y: B): (Children, B)", "member" : "scala.Predef.ArrowAssoc.→", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/Children.html#→[B](y:B):(A,B)", "kind" : "def"}, {"label" : "->", "tail" : "(y: B): (Children, B)", "member" : "scala.Predef.ArrowAssoc.->", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/Children.html#->[B](y:B):(A,B)", "kind" : "def"}, {"member" : "scala.tools.scalap.scalax.rules.scalasig.Children#<init>", "error" : "unsupported entity"}, {"label" : "symbolRefs", "tail" : ": Seq[Int]", "member" : "scala.tools.scalap.scalax.rules.scalasig.Children.symbolRefs", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/Children.html#symbolRefs:Seq[Int]", "kind" : "val"}, {"label" : "productElementNames", "tail" : "(): Iterator[String]", "member" : "scala.Product.productElementNames", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/Children.html#productElementNames:Iterator[String]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/Children.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/Children.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/Children.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/Children.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/Children.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/Children.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/Children.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/Children.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/Children.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/Children.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/Children.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/Children.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/Children.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/Children.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/Children.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/Children.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/Children.html", "kind" : "case class"}, {"name" : "scala.tools.scalap.scalax.rules.scalasig.ClassFile", "shortDescription" : "", "members_case class" : [{"label" : "+", "tail" : "(other: String): String", "member" : "scala.Predef.any2stringadd.+", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/ClassFile.html#+(other:String):String", "kind" : "def"}, {"label" : "formatted", "tail" : "(fmtstr: String): String", "member" : "scala.Predef.StringFormat.formatted", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/ClassFile.html#formatted(fmtstr:String):String", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: (ClassFile) => Boolean, msg: => Any): ClassFile", "member" : "scala.Predef.Ensuring.ensuring", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/ClassFile.html#ensuring(cond:A=>Boolean,msg:=>Any):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: (ClassFile) => Boolean): ClassFile", "member" : "scala.Predef.Ensuring.ensuring", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/ClassFile.html#ensuring(cond:A=>Boolean):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: Boolean, msg: => Any): ClassFile", "member" : "scala.Predef.Ensuring.ensuring", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/ClassFile.html#ensuring(cond:Boolean,msg:=>Any):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: Boolean): ClassFile", "member" : "scala.Predef.Ensuring.ensuring", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/ClassFile.html#ensuring(cond:Boolean):A", "kind" : "def"}, {"label" : "→", "tail" : "(y: B): (ClassFile, B)", "member" : "scala.Predef.ArrowAssoc.→", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/ClassFile.html#→[B](y:B):(A,B)", "kind" : "def"}, {"label" : "->", "tail" : "(y: B): (ClassFile, B)", "member" : "scala.Predef.ArrowAssoc.->", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/ClassFile.html#->[B](y:B):(A,B)", "kind" : "def"}, {"label" : "annotation", "tail" : "(name: String): Option[Annotation]", "member" : "scala.tools.scalap.scalax.rules.scalasig.ClassFile.annotation", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/ClassFile.html#annotation(name:String):Option[scala.tools.scalap.scalax.rules.scalasig.ClassFileParser.Annotation]", "kind" : "def"}, {"label" : "annotations", "tail" : "(): Option[Seq[Annotation]]", "member" : "scala.tools.scalap.scalax.rules.scalasig.ClassFile.annotations", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/ClassFile.html#annotations:Option[Seq[scala.tools.scalap.scalax.rules.scalasig.ClassFileParser.Annotation]]", "kind" : "def"}, {"label" : "RUNTIME_VISIBLE_ANNOTATIONS", "tail" : ": String", "member" : "scala.tools.scalap.scalax.rules.scalasig.ClassFile.RUNTIME_VISIBLE_ANNOTATIONS", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/ClassFile.html#RUNTIME_VISIBLE_ANNOTATIONS:String", "kind" : "val"}, {"label" : "attribute", "tail" : "(name: String): Option[Attribute]", "member" : "scala.tools.scalap.scalax.rules.scalasig.ClassFile.attribute", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/ClassFile.html#attribute(name:String):Option[scala.tools.scalap.scalax.rules.scalasig.Attribute]", "kind" : "def"}, {"label" : "constantWrapped", "tail" : "(index: Int): Any", "member" : "scala.tools.scalap.scalax.rules.scalasig.ClassFile.constantWrapped", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/ClassFile.html#constantWrapped(index:Int):Any", "kind" : "def"}, {"label" : "constant", "tail" : "(index: Int): Any", "member" : "scala.tools.scalap.scalax.rules.scalasig.ClassFile.constant", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/ClassFile.html#constant(index:Int):Any", "kind" : "def"}, {"label" : "interfaces", "tail" : "(): collection.immutable.Seq[Any]", "member" : "scala.tools.scalap.scalax.rules.scalasig.ClassFile.interfaces", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/ClassFile.html#interfaces:Seq[Any]", "kind" : "def"}, {"label" : "superClass", "tail" : "(): Any", "member" : "scala.tools.scalap.scalax.rules.scalasig.ClassFile.superClass", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/ClassFile.html#superClass:Any", "kind" : "def"}, {"label" : "className", "tail" : "(): Any", "member" : "scala.tools.scalap.scalax.rules.scalasig.ClassFile.className", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/ClassFile.html#className:Any", "kind" : "def"}, {"label" : "minorVersion", "tail" : "(): Int", "member" : "scala.tools.scalap.scalax.rules.scalasig.ClassFile.minorVersion", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/ClassFile.html#minorVersion:Int", "kind" : "def"}, {"label" : "majorVersion", "tail" : "(): Int", "member" : "scala.tools.scalap.scalax.rules.scalasig.ClassFile.majorVersion", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/ClassFile.html#majorVersion:Int", "kind" : "def"}, {"member" : "scala.tools.scalap.scalax.rules.scalasig.ClassFile#<init>", "error" : "unsupported entity"}, {"label" : "attributes", "tail" : ": Seq[Attribute]", "member" : "scala.tools.scalap.scalax.rules.scalasig.ClassFile.attributes", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/ClassFile.html#attributes:Seq[scala.tools.scalap.scalax.rules.scalasig.Attribute]", "kind" : "val"}, {"label" : "methods", "tail" : ": Seq[Method]", "member" : "scala.tools.scalap.scalax.rules.scalasig.ClassFile.methods", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/ClassFile.html#methods:Seq[scala.tools.scalap.scalax.rules.scalasig.Method]", "kind" : "val"}, {"label" : "fields", "tail" : ": Seq[Field]", "member" : "scala.tools.scalap.scalax.rules.scalasig.ClassFile.fields", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/ClassFile.html#fields:Seq[scala.tools.scalap.scalax.rules.scalasig.Field]", "kind" : "val"}, {"label" : "header", "tail" : ": ClassFileHeader", "member" : "scala.tools.scalap.scalax.rules.scalasig.ClassFile.header", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/ClassFile.html#header:scala.tools.scalap.scalax.rules.scalasig.ClassFileHeader", "kind" : "val"}, {"label" : "productElementNames", "tail" : "(): Iterator[String]", "member" : "scala.Product.productElementNames", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/ClassFile.html#productElementNames:Iterator[String]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/ClassFile.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/ClassFile.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/ClassFile.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/ClassFile.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/ClassFile.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/ClassFile.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/ClassFile.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/ClassFile.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/ClassFile.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/ClassFile.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/ClassFile.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/ClassFile.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/ClassFile.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/ClassFile.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/ClassFile.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/ClassFile.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/ClassFile.html", "kind" : "case class"}, {"name" : "scala.tools.scalap.scalax.rules.scalasig.ClassFileHeader", "shortDescription" : "", "members_case class" : [{"label" : "+", "tail" : "(other: String): String", "member" : "scala.Predef.any2stringadd.+", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/ClassFileHeader.html#+(other:String):String", "kind" : "def"}, {"label" : "formatted", "tail" : "(fmtstr: String): String", "member" : "scala.Predef.StringFormat.formatted", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/ClassFileHeader.html#formatted(fmtstr:String):String", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: (ClassFileHeader) => Boolean, msg: => Any): ClassFileHeader", "member" : "scala.Predef.Ensuring.ensuring", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/ClassFileHeader.html#ensuring(cond:A=>Boolean,msg:=>Any):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: (ClassFileHeader) => Boolean): ClassFileHeader", "member" : "scala.Predef.Ensuring.ensuring", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/ClassFileHeader.html#ensuring(cond:A=>Boolean):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: Boolean, msg: => Any): ClassFileHeader", "member" : "scala.Predef.Ensuring.ensuring", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/ClassFileHeader.html#ensuring(cond:Boolean,msg:=>Any):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: Boolean): ClassFileHeader", "member" : "scala.Predef.Ensuring.ensuring", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/ClassFileHeader.html#ensuring(cond:Boolean):A", "kind" : "def"}, {"label" : "→", "tail" : "(y: B): (ClassFileHeader, B)", "member" : "scala.Predef.ArrowAssoc.→", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/ClassFileHeader.html#→[B](y:B):(A,B)", "kind" : "def"}, {"label" : "->", "tail" : "(y: B): (ClassFileHeader, B)", "member" : "scala.Predef.ArrowAssoc.->", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/ClassFileHeader.html#->[B](y:B):(A,B)", "kind" : "def"}, {"label" : "constant", "tail" : "(index: Int): Any", "member" : "scala.tools.scalap.scalax.rules.scalasig.ClassFileHeader.constant", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/ClassFileHeader.html#constant(index:Int):Any", "kind" : "def"}, {"member" : "scala.tools.scalap.scalax.rules.scalasig.ClassFileHeader#<init>", "error" : "unsupported entity"}, {"label" : "interfaces", "tail" : ": Seq[Int]", "member" : "scala.tools.scalap.scalax.rules.scalasig.ClassFileHeader.interfaces", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/ClassFileHeader.html#interfaces:Seq[Int]", "kind" : "val"}, {"label" : "superClassIndex", "tail" : ": Int", "member" : "scala.tools.scalap.scalax.rules.scalasig.ClassFileHeader.superClassIndex", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/ClassFileHeader.html#superClassIndex:Int", "kind" : "val"}, {"label" : "classIndex", "tail" : ": Int", "member" : "scala.tools.scalap.scalax.rules.scalasig.ClassFileHeader.classIndex", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/ClassFileHeader.html#classIndex:Int", "kind" : "val"}, {"label" : "flags", "tail" : ": Int", "member" : "scala.tools.scalap.scalax.rules.scalasig.ClassFileHeader.flags", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/ClassFileHeader.html#flags:Int", "kind" : "val"}, {"label" : "constants", "tail" : ": ConstantPool", "member" : "scala.tools.scalap.scalax.rules.scalasig.ClassFileHeader.constants", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/ClassFileHeader.html#constants:scala.tools.scalap.scalax.rules.scalasig.ConstantPool", "kind" : "val"}, {"label" : "major", "tail" : ": Int", "member" : "scala.tools.scalap.scalax.rules.scalasig.ClassFileHeader.major", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/ClassFileHeader.html#major:Int", "kind" : "val"}, {"label" : "minor", "tail" : ": Int", "member" : "scala.tools.scalap.scalax.rules.scalasig.ClassFileHeader.minor", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/ClassFileHeader.html#minor:Int", "kind" : "val"}, {"label" : "productElementNames", "tail" : "(): Iterator[String]", "member" : "scala.Product.productElementNames", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/ClassFileHeader.html#productElementNames:Iterator[String]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/ClassFileHeader.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/ClassFileHeader.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/ClassFileHeader.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/ClassFileHeader.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/ClassFileHeader.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/ClassFileHeader.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/ClassFileHeader.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/ClassFileHeader.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/ClassFileHeader.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/ClassFileHeader.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/ClassFileHeader.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/ClassFileHeader.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/ClassFileHeader.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/ClassFileHeader.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/ClassFileHeader.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/ClassFileHeader.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/ClassFileHeader.html", "kind" : "case class"}, {"name" : "scala.tools.scalap.scalax.rules.scalasig.ClassFileParser", "shortDescription" : "", "object" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/ClassFileParser$.html", "members_object" : [{"label" : "DefaultRule", "tail" : "", "member" : "scala.tools.scalap.scalax.rules.Rules.DefaultRule", "link" : "scala\/tools\/scalap\/scalax\/rules\/Rules.html#DefaultRule[In,Out,A,X]extendsRule[In,Out,A,X]", "kind" : "class"}, {"label" : "FromRule", "tail" : "", "member" : "scala.tools.scalap.scalax.rules.Rules.FromRule", "link" : "scala\/tools\/scalap\/scalax\/rules\/Rules.html#FromRule[In]extendsAnyRef", "kind" : "trait"}, {"label" : "add2", "tail" : "(f: (T) => (ConstantPool) => Any)(raw: T)(pool: ConstantPool): ConstantPool", "member" : "scala.tools.scalap.scalax.rules.scalasig.ClassFileParser.add2", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/ClassFileParser$.html#add2[T](f:T=>(scala.tools.scalap.scalax.rules.scalasig.ConstantPool=>Any))(raw:T)(pool:scala.tools.scalap.scalax.rules.scalasig.ConstantPool):scala.tools.scalap.scalax.rules.scalasig.ConstantPool", "kind" : "def"}, {"label" : "add1", "tail" : "(f: (T) => (ConstantPool) => Any)(raw: T)(pool: ConstantPool): ConstantPool", "member" : "scala.tools.scalap.scalax.rules.scalasig.ClassFileParser.add1", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/ClassFileParser$.html#add1[T](f:T=>(scala.tools.scalap.scalax.rules.scalasig.ConstantPool=>Any))(raw:T)(pool:scala.tools.scalap.scalax.rules.scalasig.ConstantPool):scala.tools.scalap.scalax.rules.scalasig.ConstantPool", "kind" : "def"}, {"label" : "memberRef", "tail" : "(description: String): rules.Rule[S, S, (ConstantPool) => ConstantPool, Nothing]", "member" : "scala.tools.scalap.scalax.rules.scalasig.ClassFileParser.memberRef", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/ClassFileParser$.html#memberRef(description:String):scala.tools.scalap.scalax.rules.Rule[scala.tools.scalap.scalax.rules.scalasig.ClassFileParser.S,scala.tools.scalap.scalax.rules.scalasig.ClassFileParser.S,scala.tools.scalap.scalax.rules.scalasig.ConstantPool=>scala.tools.scalap.scalax.rules.scalasig.ConstantPool,Nothing]", "kind" : "def"}, {"label" : "classFile", "tail" : ": rules.Rule[S, S, ClassFile, String]", "member" : "scala.tools.scalap.scalax.rules.scalasig.ClassFileParser.classFile", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/ClassFileParser$.html#classFile:scala.tools.scalap.scalax.rules.Rule[scala.tools.scalap.scalax.rules.scalasig.ClassFileParser.S,scala.tools.scalap.scalax.rules.scalasig.ClassFileParser.S,scala.tools.scalap.scalax.rules.scalasig.ClassFile,String]", "kind" : "val"}, {"label" : "header", "tail" : ": rules.Rule[S, S, ClassFileHeader, String]", "member" : "scala.tools.scalap.scalax.rules.scalasig.ClassFileParser.header", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/ClassFileParser$.html#header:scala.tools.scalap.scalax.rules.Rule[scala.tools.scalap.scalax.rules.scalasig.ClassFileParser.S,scala.tools.scalap.scalax.rules.scalasig.ClassFileParser.S,scala.tools.scalap.scalax.rules.scalasig.ClassFileHeader,String]", "kind" : "val"}, {"label" : "methods", "tail" : ": rules.Rule[S, S, Seq[Method], Nothing]", "member" : "scala.tools.scalap.scalax.rules.scalasig.ClassFileParser.methods", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/ClassFileParser$.html#methods:scala.tools.scalap.scalax.rules.Rule[scala.tools.scalap.scalax.rules.scalasig.ClassFileParser.S,scala.tools.scalap.scalax.rules.scalasig.ClassFileParser.S,Seq[scala.tools.scalap.scalax.rules.scalasig.Method],Nothing]", "kind" : "val"}, {"label" : "method", "tail" : ": rules.Rule[S, S, Method, Nothing]", "member" : "scala.tools.scalap.scalax.rules.scalasig.ClassFileParser.method", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/ClassFileParser$.html#method:scala.tools.scalap.scalax.rules.Rule[scala.tools.scalap.scalax.rules.scalasig.ClassFileParser.S,scala.tools.scalap.scalax.rules.scalasig.ClassFileParser.S,scala.tools.scalap.scalax.rules.scalasig.Method,Nothing]", "kind" : "val"}, {"label" : "fields", "tail" : ": rules.Rule[S, S, Seq[Field], Nothing]", "member" : "scala.tools.scalap.scalax.rules.scalasig.ClassFileParser.fields", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/ClassFileParser$.html#fields:scala.tools.scalap.scalax.rules.Rule[scala.tools.scalap.scalax.rules.scalasig.ClassFileParser.S,scala.tools.scalap.scalax.rules.scalasig.ClassFileParser.S,Seq[scala.tools.scalap.scalax.rules.scalasig.Field],Nothing]", "kind" : "val"}, {"label" : "field", "tail" : ": rules.Rule[S, S, Field, Nothing]", "member" : "scala.tools.scalap.scalax.rules.scalasig.ClassFileParser.field", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/ClassFileParser$.html#field:scala.tools.scalap.scalax.rules.Rule[scala.tools.scalap.scalax.rules.scalasig.ClassFileParser.S,scala.tools.scalap.scalax.rules.scalasig.ClassFileParser.S,scala.tools.scalap.scalax.rules.scalasig.Field,Nothing]", "kind" : "val"}, {"label" : "annotations", "tail" : ": rules.Rule[S, S, Seq[Annotation], String]", "member" : "scala.tools.scalap.scalax.rules.scalasig.ClassFileParser.annotations", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/ClassFileParser$.html#annotations:scala.tools.scalap.scalax.rules.Rule[scala.tools.scalap.scalax.rules.scalasig.ClassFileParser.S,scala.tools.scalap.scalax.rules.scalasig.ClassFileParser.S,Seq[scala.tools.scalap.scalax.rules.scalasig.ClassFileParser.Annotation],String]", "kind" : "val"}, {"label" : "annotation", "tail" : ": Parser[Annotation]", "member" : "scala.tools.scalap.scalax.rules.scalasig.ClassFileParser.annotation", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/ClassFileParser$.html#annotation:scala.tools.scalap.scalax.rules.scalasig.ClassFileParser.Parser[scala.tools.scalap.scalax.rules.scalasig.ClassFileParser.Annotation]", "kind" : "val"}, {"label" : "element_value_pair", "tail" : ": rules.Rule[S, S, AnnotationElement, String]", "member" : "scala.tools.scalap.scalax.rules.scalasig.ClassFileParser.element_value_pair", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/ClassFileParser$.html#element_value_pair:scala.tools.scalap.scalax.rules.Rule[scala.tools.scalap.scalax.rules.scalasig.ClassFileParser.S,scala.tools.scalap.scalax.rules.scalasig.ClassFileParser.S,scala.tools.scalap.scalax.rules.scalasig.ClassFileParser.AnnotationElement,String]", "kind" : "val"}, {"label" : "element_value", "tail" : "(): Parser[ElementValue]", "member" : "scala.tools.scalap.scalax.rules.scalasig.ClassFileParser.element_value", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/ClassFileParser$.html#element_value:scala.tools.scalap.scalax.rules.scalasig.ClassFileParser.Parser[scala.tools.scalap.scalax.rules.scalasig.ClassFileParser.ElementValue]", "kind" : "def"}, {"label" : "ArrayValue", "tail" : "", "member" : "scala.tools.scalap.scalax.rules.scalasig.ClassFileParser.ArrayValue", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/ClassFileParser$.html#ArrayValueextendsClassFileParser.ElementValuewithProductwithSerializable", "kind" : "case class"}, {"label" : "Annotation", "tail" : "", "member" : "scala.tools.scalap.scalax.rules.scalasig.ClassFileParser.Annotation", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/ClassFileParser$.html#AnnotationextendsClassFileParser.ElementValuewithProductwithSerializable", "kind" : "case class"}, {"label" : "ClassInfoIndex", "tail" : "", "member" : "scala.tools.scalap.scalax.rules.scalasig.ClassFileParser.ClassInfoIndex", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/ClassFileParser$.html#ClassInfoIndexextendsClassFileParser.ElementValuewithProductwithSerializable", "kind" : "case class"}, {"label" : "EnumConstValue", "tail" : "", "member" : "scala.tools.scalap.scalax.rules.scalasig.ClassFileParser.EnumConstValue", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/ClassFileParser$.html#EnumConstValueextendsClassFileParser.ElementValuewithProductwithSerializable", "kind" : "case class"}, {"label" : "ConstValueIndex", "tail" : "", "member" : "scala.tools.scalap.scalax.rules.scalasig.ClassFileParser.ConstValueIndex", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/ClassFileParser$.html#ConstValueIndexextendsClassFileParser.ElementValuewithProductwithSerializable", "kind" : "case class"}, {"label" : "AnnotationElement", "tail" : "", "member" : "scala.tools.scalap.scalax.rules.scalasig.ClassFileParser.AnnotationElement", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/ClassFileParser$.html#AnnotationElementextendsProductwithSerializable", "kind" : "case class"}, {"label" : "ElementValue", "tail" : "", "member" : "scala.tools.scalap.scalax.rules.scalasig.ClassFileParser.ElementValue", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/ClassFileParser$.html#ElementValueextendsAnyRef", "kind" : "abstract class"}, {"label" : "attributes", "tail" : ": rules.Rule[S, S, Seq[Attribute], Nothing]", "member" : "scala.tools.scalap.scalax.rules.scalasig.ClassFileParser.attributes", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/ClassFileParser$.html#attributes:scala.tools.scalap.scalax.rules.Rule[scala.tools.scalap.scalax.rules.scalasig.ClassFileParser.S,scala.tools.scalap.scalax.rules.scalasig.ClassFileParser.S,Seq[scala.tools.scalap.scalax.rules.scalasig.Attribute],Nothing]", "kind" : "val"}, {"label" : "attribute", "tail" : ": rules.Rule[S, S, Attribute, Nothing]", "member" : "scala.tools.scalap.scalax.rules.scalasig.ClassFileParser.attribute", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/ClassFileParser$.html#attribute:scala.tools.scalap.scalax.rules.Rule[scala.tools.scalap.scalax.rules.scalasig.ClassFileParser.S,scala.tools.scalap.scalax.rules.scalasig.ClassFileParser.S,scala.tools.scalap.scalax.rules.scalasig.Attribute,Nothing]", "kind" : "val"}, {"label" : "interfaces", "tail" : ": rules.Rule[S, S, Seq[Int], Nothing]", "member" : "scala.tools.scalap.scalax.rules.scalasig.ClassFileParser.interfaces", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/ClassFileParser$.html#interfaces:scala.tools.scalap.scalax.rules.Rule[scala.tools.scalap.scalax.rules.scalasig.ClassFileParser.S,scala.tools.scalap.scalax.rules.scalasig.ClassFileParser.S,Seq[Int],Nothing]", "kind" : "val"}, {"label" : "constantPoolEntry", "tail" : ": rules.Rule[S, S, (ConstantPool) => ConstantPool, Nothing]", "member" : "scala.tools.scalap.scalax.rules.scalasig.ClassFileParser.constantPoolEntry", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/ClassFileParser$.html#constantPoolEntry:scala.tools.scalap.scalax.rules.Rule[scala.tools.scalap.scalax.rules.scalasig.ClassFileParser.S,scala.tools.scalap.scalax.rules.scalasig.ClassFileParser.S,scala.tools.scalap.scalax.rules.scalasig.ConstantPool=>scala.tools.scalap.scalax.rules.scalasig.ConstantPool,Nothing]", "kind" : "val"}, {"label" : "invokeDynamic", "tail" : ": rules.Rule[S, S, (ConstantPool) => ConstantPool, Nothing]", "member" : "scala.tools.scalap.scalax.rules.scalasig.ClassFileParser.invokeDynamic", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/ClassFileParser$.html#invokeDynamic:scala.tools.scalap.scalax.rules.Rule[scala.tools.scalap.scalax.rules.scalasig.ClassFileParser.S,scala.tools.scalap.scalax.rules.scalasig.ClassFileParser.S,scala.tools.scalap.scalax.rules.scalasig.ConstantPool=>scala.tools.scalap.scalax.rules.scalasig.ConstantPool,Nothing]", "kind" : "val"}, {"label" : "methodType", "tail" : ": rules.Rule[S, S, (ConstantPool) => ConstantPool, Nothing]", "member" : "scala.tools.scalap.scalax.rules.scalasig.ClassFileParser.methodType", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/ClassFileParser$.html#methodType:scala.tools.scalap.scalax.rules.Rule[scala.tools.scalap.scalax.rules.scalasig.ClassFileParser.S,scala.tools.scalap.scalax.rules.scalasig.ClassFileParser.S,scala.tools.scalap.scalax.rules.scalasig.ConstantPool=>scala.tools.scalap.scalax.rules.scalasig.ConstantPool,Nothing]", "kind" : "val"}, {"label" : "methodHandle", "tail" : ": rules.Rule[S, S, (ConstantPool) => ConstantPool, Nothing]", "member" : "scala.tools.scalap.scalax.rules.scalasig.ClassFileParser.methodHandle", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/ClassFileParser$.html#methodHandle:scala.tools.scalap.scalax.rules.Rule[scala.tools.scalap.scalax.rules.scalasig.ClassFileParser.S,scala.tools.scalap.scalax.rules.scalasig.ClassFileParser.S,scala.tools.scalap.scalax.rules.scalasig.ConstantPool=>scala.tools.scalap.scalax.rules.scalasig.ConstantPool,Nothing]", "kind" : "val"}, {"label" : "nameAndType", "tail" : ": rules.Rule[S, S, (ConstantPool) => ConstantPool, Nothing]", "member" : "scala.tools.scalap.scalax.rules.scalasig.ClassFileParser.nameAndType", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/ClassFileParser$.html#nameAndType:scala.tools.scalap.scalax.rules.Rule[scala.tools.scalap.scalax.rules.scalasig.ClassFileParser.S,scala.tools.scalap.scalax.rules.scalasig.ClassFileParser.S,scala.tools.scalap.scalax.rules.scalasig.ConstantPool=>scala.tools.scalap.scalax.rules.scalasig.ConstantPool,Nothing]", "kind" : "val"}, {"label" : "interfaceMethodRef", "tail" : ": rules.Rule[S, S, (ConstantPool) => ConstantPool, Nothing]", "member" : "scala.tools.scalap.scalax.rules.scalasig.ClassFileParser.interfaceMethodRef", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/ClassFileParser$.html#interfaceMethodRef:scala.tools.scalap.scalax.rules.Rule[scala.tools.scalap.scalax.rules.scalasig.ClassFileParser.S,scala.tools.scalap.scalax.rules.scalasig.ClassFileParser.S,scala.tools.scalap.scalax.rules.scalasig.ConstantPool=>scala.tools.scalap.scalax.rules.scalasig.ConstantPool,Nothing]", "kind" : "val"}, {"label" : "methodRef", "tail" : ": rules.Rule[S, S, (ConstantPool) => ConstantPool, Nothing]", "member" : "scala.tools.scalap.scalax.rules.scalasig.ClassFileParser.methodRef", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/ClassFileParser$.html#methodRef:scala.tools.scalap.scalax.rules.Rule[scala.tools.scalap.scalax.rules.scalasig.ClassFileParser.S,scala.tools.scalap.scalax.rules.scalasig.ClassFileParser.S,scala.tools.scalap.scalax.rules.scalasig.ConstantPool=>scala.tools.scalap.scalax.rules.scalasig.ConstantPool,Nothing]", "kind" : "val"}, {"label" : "fieldRef", "tail" : ": rules.Rule[S, S, (ConstantPool) => ConstantPool, Nothing]", "member" : "scala.tools.scalap.scalax.rules.scalasig.ClassFileParser.fieldRef", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/ClassFileParser$.html#fieldRef:scala.tools.scalap.scalax.rules.Rule[scala.tools.scalap.scalax.rules.scalasig.ClassFileParser.S,scala.tools.scalap.scalax.rules.scalasig.ClassFileParser.S,scala.tools.scalap.scalax.rules.scalasig.ConstantPool=>scala.tools.scalap.scalax.rules.scalasig.ConstantPool,Nothing]", "kind" : "val"}, {"label" : "stringRef", "tail" : ": rules.Rule[S, S, (ConstantPool) => ConstantPool, Nothing]", "member" : "scala.tools.scalap.scalax.rules.scalasig.ClassFileParser.stringRef", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/ClassFileParser$.html#stringRef:scala.tools.scalap.scalax.rules.Rule[scala.tools.scalap.scalax.rules.scalasig.ClassFileParser.S,scala.tools.scalap.scalax.rules.scalasig.ClassFileParser.S,scala.tools.scalap.scalax.rules.scalasig.ConstantPool=>scala.tools.scalap.scalax.rules.scalasig.ConstantPool,Nothing]", "kind" : "val"}, {"label" : "classRef", "tail" : ": rules.Rule[S, S, (ConstantPool) => ConstantPool, Nothing]", "member" : "scala.tools.scalap.scalax.rules.scalasig.ClassFileParser.classRef", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/ClassFileParser$.html#classRef:scala.tools.scalap.scalax.rules.Rule[scala.tools.scalap.scalax.rules.scalasig.ClassFileParser.S,scala.tools.scalap.scalax.rules.scalasig.ClassFileParser.S,scala.tools.scalap.scalax.rules.scalasig.ConstantPool=>scala.tools.scalap.scalax.rules.scalasig.ConstantPool,Nothing]", "kind" : "val"}, {"label" : "doubleConstant", "tail" : ": rules.Rule[S, S, (ConstantPool) => ConstantPool, Nothing]", "member" : "scala.tools.scalap.scalax.rules.scalasig.ClassFileParser.doubleConstant", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/ClassFileParser$.html#doubleConstant:scala.tools.scalap.scalax.rules.Rule[scala.tools.scalap.scalax.rules.scalasig.ClassFileParser.S,scala.tools.scalap.scalax.rules.scalasig.ClassFileParser.S,scala.tools.scalap.scalax.rules.scalasig.ConstantPool=>scala.tools.scalap.scalax.rules.scalasig.ConstantPool,Nothing]", "kind" : "val"}, {"label" : "longConstant", "tail" : ": rules.Rule[S, S, (ConstantPool) => ConstantPool, Nothing]", "member" : "scala.tools.scalap.scalax.rules.scalasig.ClassFileParser.longConstant", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/ClassFileParser$.html#longConstant:scala.tools.scalap.scalax.rules.Rule[scala.tools.scalap.scalax.rules.scalasig.ClassFileParser.S,scala.tools.scalap.scalax.rules.scalasig.ClassFileParser.S,scala.tools.scalap.scalax.rules.scalasig.ConstantPool=>scala.tools.scalap.scalax.rules.scalasig.ConstantPool,Nothing]", "kind" : "val"}, {"label" : "floatConstant", "tail" : ": rules.Rule[S, S, (ConstantPool) => ConstantPool, Nothing]", "member" : "scala.tools.scalap.scalax.rules.scalasig.ClassFileParser.floatConstant", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/ClassFileParser$.html#floatConstant:scala.tools.scalap.scalax.rules.Rule[scala.tools.scalap.scalax.rules.scalasig.ClassFileParser.S,scala.tools.scalap.scalax.rules.scalasig.ClassFileParser.S,scala.tools.scalap.scalax.rules.scalasig.ConstantPool=>scala.tools.scalap.scalax.rules.scalasig.ConstantPool,Nothing]", "kind" : "val"}, {"label" : "intConstant", "tail" : ": rules.Rule[S, S, (ConstantPool) => ConstantPool, Nothing]", "member" : "scala.tools.scalap.scalax.rules.scalasig.ClassFileParser.intConstant", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/ClassFileParser$.html#intConstant:scala.tools.scalap.scalax.rules.Rule[scala.tools.scalap.scalax.rules.scalasig.ClassFileParser.S,scala.tools.scalap.scalax.rules.scalasig.ClassFileParser.S,scala.tools.scalap.scalax.rules.scalasig.ConstantPool=>scala.tools.scalap.scalax.rules.scalasig.ConstantPool,Nothing]", "kind" : "val"}, {"label" : "utf8String", "tail" : ": rules.Rule[S, S, (ConstantPool) => ConstantPool, Nothing]", "member" : "scala.tools.scalap.scalax.rules.scalasig.ClassFileParser.utf8String", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/ClassFileParser$.html#utf8String:scala.tools.scalap.scalax.rules.Rule[scala.tools.scalap.scalax.rules.scalasig.ClassFileParser.S,scala.tools.scalap.scalax.rules.scalasig.ClassFileParser.S,scala.tools.scalap.scalax.rules.scalasig.ConstantPool=>scala.tools.scalap.scalax.rules.scalasig.ConstantPool,Nothing]", "kind" : "val"}, {"label" : "constantPool", "tail" : ": rules.Rule[S, S, ConstantPool, Nothing]", "member" : "scala.tools.scalap.scalax.rules.scalasig.ClassFileParser.constantPool", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/ClassFileParser$.html#constantPool:scala.tools.scalap.scalax.rules.Rule[scala.tools.scalap.scalax.rules.scalasig.ClassFileParser.S,scala.tools.scalap.scalax.rules.scalasig.ClassFileParser.S,scala.tools.scalap.scalax.rules.scalasig.ConstantPool,Nothing]", "kind" : "val"}, {"label" : "version", "tail" : ": rules.Rule[S, S, (Int, Int), Nothing]", "member" : "scala.tools.scalap.scalax.rules.scalasig.ClassFileParser.version", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/ClassFileParser$.html#version:scala.tools.scalap.scalax.rules.Rule[scala.tools.scalap.scalax.rules.scalasig.ClassFileParser.S,scala.tools.scalap.scalax.rules.scalasig.ClassFileParser.S,(Int,Int),Nothing]", "kind" : "val"}, {"label" : "magicNumber", "tail" : ": rules.Rule[S, S, Int, String]", "member" : "scala.tools.scalap.scalax.rules.scalasig.ClassFileParser.magicNumber", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/ClassFileParser$.html#magicNumber:scala.tools.scalap.scalax.rules.Rule[scala.tools.scalap.scalax.rules.scalasig.ClassFileParser.S,scala.tools.scalap.scalax.rules.scalasig.ClassFileParser.S,Int,String]", "kind" : "val"}, {"label" : "parseAnnotations", "tail" : "(byteCode: ByteCode): Seq[Annotation]", "member" : "scala.tools.scalap.scalax.rules.scalasig.ClassFileParser.parseAnnotations", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/ClassFileParser$.html#parseAnnotations(byteCode:scala.tools.scalap.scalax.rules.scalasig.ByteCode):Seq[scala.tools.scalap.scalax.rules.scalasig.ClassFileParser.Annotation]", "kind" : "def"}, {"label" : "parse", "tail" : "(byteCode: ByteCode): ClassFile", "member" : "scala.tools.scalap.scalax.rules.scalasig.ClassFileParser.parse", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/ClassFileParser$.html#parse(byteCode:scala.tools.scalap.scalax.rules.scalasig.ByteCode):scala.tools.scalap.scalax.rules.scalasig.ClassFile", "kind" : "def"}, {"label" : "bytes", "tail" : "(n: Int): rules.Rule[S, S, ByteCode, Nothing]", "member" : "scala.tools.scalap.scalax.rules.scalasig.ByteCodeReader.bytes", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/ClassFileParser$.html#bytes(n:Int):scala.tools.scalap.scalax.rules.Rule[ByteCodeReader.this.S,ByteCodeReader.this.S,scala.tools.scalap.scalax.rules.scalasig.ByteCode,Nothing]", "kind" : "def"}, {"label" : "u4", "tail" : ": rules.Rule[S, S, Int, Nothing]", "member" : "scala.tools.scalap.scalax.rules.scalasig.ByteCodeReader.u4", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/ClassFileParser$.html#u4:scala.tools.scalap.scalax.rules.Rule[ByteCodeReader.this.S,ByteCodeReader.this.S,Int,Nothing]", "kind" : "val"}, {"label" : "u2", "tail" : ": rules.Rule[S, S, Int, Nothing]", "member" : "scala.tools.scalap.scalax.rules.scalasig.ByteCodeReader.u2", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/ClassFileParser$.html#u2:scala.tools.scalap.scalax.rules.Rule[ByteCodeReader.this.S,ByteCodeReader.this.S,Int,Nothing]", "kind" : "val"}, {"label" : "u1", "tail" : ": rules.Rule[S, S, Int, Nothing]", "member" : "scala.tools.scalap.scalax.rules.scalasig.ByteCodeReader.u1", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/ClassFileParser$.html#u1:scala.tools.scalap.scalax.rules.Rule[ByteCodeReader.this.S,ByteCodeReader.this.S,Int,Nothing]", "kind" : "val"}, {"label" : "byte", "tail" : ": rules.Rule[S, S, Byte, Nothing]", "member" : "scala.tools.scalap.scalax.rules.scalasig.ByteCodeReader.byte", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/ClassFileParser$.html#byte:scala.tools.scalap.scalax.rules.Rule[ByteCodeReader.this.S,ByteCodeReader.this.S,Byte,Nothing]", "kind" : "val"}, {"label" : "Parser", "tail" : "", "member" : "scala.tools.scalap.scalax.rules.scalasig.ByteCodeReader.Parser", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/ClassFileParser$.html#Parser[A]=ByteCodeReader.this.Rule[A,String]", "kind" : "type"}, {"label" : "S", "tail" : "", "member" : "scala.tools.scalap.scalax.rules.scalasig.ByteCodeReader.S", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/ClassFileParser$.html#S=scala.tools.scalap.scalax.rules.scalasig.ByteCode", "kind" : "type"}, {"label" : "factory", "tail" : ": RulesWithState", "member" : "scala.tools.scalap.scalax.rules.RulesWithState.factory", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/ClassFileParser$.html#factory:scala.tools.scalap.scalax.rules.RulesWithState", "kind" : "val"}, {"label" : "repeatUntil", "tail" : "(rule: Rule[(T) => T, X])(finished: (T) => Boolean)(initial: T): rules.Rule[S, S, T, X]", "member" : "scala.tools.scalap.scalax.rules.StateRules.repeatUntil", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/ClassFileParser$.html#repeatUntil[T,X](rule:StateRules.this.Rule[T=>T,X])(finished:T=>Boolean)(initial:T):scala.tools.scalap.scalax.rules.Rule[StateRules.this.S,StateRules.this.S,T,X]", "kind" : "def"}, {"label" : "anyOf", "tail" : "(rules: Seq[Rule[A, X]]): rules.Rule[S, S, collection.immutable.List[A], X]", "member" : "scala.tools.scalap.scalax.rules.StateRules.anyOf", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/ClassFileParser$.html#anyOf[A,X](rules:Seq[StateRules.this.Rule[A,X]]):scala.tools.scalap.scalax.rules.Rule[StateRules.this.S,StateRules.this.S,List[A],X]", "kind" : "def"}, {"label" : "allOf", "tail" : "(rules: Seq[Rule[A, X]]): (S) => Result[S, List[A], X]", "member" : "scala.tools.scalap.scalax.rules.StateRules.allOf", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/ClassFileParser$.html#allOf[A,X](rules:Seq[StateRules.this.Rule[A,X]]):StateRules.this.S=>scala.tools.scalap.scalax.rules.Result[StateRules.this.S,List[A],X]", "kind" : "def"}, {"label" : "cond", "tail" : "(f: (S) => Boolean): rules.Rule[S, S, S, Nothing]", "member" : "scala.tools.scalap.scalax.rules.StateRules.cond", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/ClassFileParser$.html#cond(f:StateRules.this.S=>Boolean):scala.tools.scalap.scalax.rules.Rule[StateRules.this.S,StateRules.this.S,StateRules.this.S,Nothing]", "kind" : "def"}, {"label" : "none", "tail" : "(): rules.Rule[S, S, None.type, Nothing]", "member" : "scala.tools.scalap.scalax.rules.StateRules.none", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/ClassFileParser$.html#none:scala.tools.scalap.scalax.rules.Rule[StateRules.this.S,StateRules.this.S,None.type,Nothing]", "kind" : "def"}, {"label" : "nil", "tail" : "(): rules.Rule[S, S, collection.immutable.Nil.type, Nothing]", "member" : "scala.tools.scalap.scalax.rules.StateRules.nil", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/ClassFileParser$.html#nil:scala.tools.scalap.scalax.rules.Rule[StateRules.this.S,StateRules.this.S,scala.collection.immutable.Nil.type,Nothing]", "kind" : "def"}, {"label" : "update", "tail" : "(f: (S) => S): rules.Rule[S, S, S, Nothing]", "member" : "scala.tools.scalap.scalax.rules.StateRules.update", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/ClassFileParser$.html#update(f:StateRules.this.S=>StateRules.this.S):scala.tools.scalap.scalax.rules.Rule[StateRules.this.S,StateRules.this.S,StateRules.this.S,Nothing]", "kind" : "def"}, {"label" : "set", "tail" : "(s: => S): rules.Rule[S, S, S, Nothing]", "member" : "scala.tools.scalap.scalax.rules.StateRules.set", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/ClassFileParser$.html#set(s:=>StateRules.this.S):scala.tools.scalap.scalax.rules.Rule[StateRules.this.S,StateRules.this.S,StateRules.this.S,Nothing]", "kind" : "def"}, {"label" : "get", "tail" : "(): rules.Rule[S, S, S, Nothing]", "member" : "scala.tools.scalap.scalax.rules.StateRules.get", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/ClassFileParser$.html#get:scala.tools.scalap.scalax.rules.Rule[StateRules.this.S,StateRules.this.S,StateRules.this.S,Nothing]", "kind" : "def"}, {"label" : "read", "tail" : "(f: (S) => A): rules.Rule[S, S, A, Nothing]", "member" : "scala.tools.scalap.scalax.rules.StateRules.read", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/ClassFileParser$.html#read[A](f:StateRules.this.S=>A):scala.tools.scalap.scalax.rules.Rule[StateRules.this.S,StateRules.this.S,A,Nothing]", "kind" : "def"}, {"label" : "unit", "tail" : "(a: => A): rules.Rule[S, S, A, Nothing]", "member" : "scala.tools.scalap.scalax.rules.StateRules.unit", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/ClassFileParser$.html#unit[A](a:=>A):scala.tools.scalap.scalax.rules.Rule[StateRules.this.S,StateRules.this.S,A,Nothing]", "kind" : "def"}, {"label" : "apply", "tail" : "(f: (S) => Result[S, A, X]): rules.Rule[S, S, A, X]", "member" : "scala.tools.scalap.scalax.rules.StateRules.apply", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/ClassFileParser$.html#apply[A,X](f:StateRules.this.S=>scala.tools.scalap.scalax.rules.Result[StateRules.this.S,A,X]):scala.tools.scalap.scalax.rules.Rule[StateRules.this.S,StateRules.this.S,A,X]", "kind" : "def"}, {"label" : "Rule", "tail" : "", "member" : "scala.tools.scalap.scalax.rules.StateRules.Rule", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/ClassFileParser$.html#Rule[+A,+X]=scala.tools.scalap.scalax.rules.Rule[StateRules.this.S,StateRules.this.S,A,X]", "kind" : "type"}, {"label" : "expect", "tail" : "(rule: rules.Rule[In, Out, A, R]): (In) => A", "member" : "scala.tools.scalap.scalax.rules.Rules.expect", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/ClassFileParser$.html#expect[In,Out,A,R](rule:scala.tools.scalap.scalax.rules.Rule[In,Out,A,R]):In=>A", "kind" : "def"}, {"label" : "ruleWithName", "tail" : "(_name: String, f: (In) => Result[Out, A, X]): rules.Rule[In, Out, A, X] with Name", "member" : "scala.tools.scalap.scalax.rules.Rules.ruleWithName", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/ClassFileParser$.html#ruleWithName[In,Out,A,X](_name:String,f:In=>scala.tools.scalap.scalax.rules.Result[Out,A,X]):scala.tools.scalap.scalax.rules.Rule[In,Out,A,X]withscala.tools.scalap.scalax.rules.Name", "kind" : "def"}, {"label" : "oneOf", "tail" : "(rules: rules.Rule[In, Out, A, X]*): rules.Rule[In, Out, A, X]", "member" : "scala.tools.scalap.scalax.rules.Rules.oneOf", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/ClassFileParser$.html#oneOf[In,Out,A,X](rules:scala.tools.scalap.scalax.rules.Rule[In,Out,A,X]*):scala.tools.scalap.scalax.rules.Rule[In,Out,A,X]", "kind" : "def"}, {"label" : "error", "tail" : "(err: X): rules.Rule[Any, Nothing, Nothing, X]", "member" : "scala.tools.scalap.scalax.rules.Rules.error", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/ClassFileParser$.html#error[X](err:X):scala.tools.scalap.scalax.rules.Rule[Any,Nothing,Nothing,X]", "kind" : "def"}, {"label" : "error", "tail" : "(): rules.Rule[In, Nothing, Nothing, In]", "member" : "scala.tools.scalap.scalax.rules.Rules.error", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/ClassFileParser$.html#error[In]:scala.tools.scalap.scalax.rules.Rule[In,Nothing,Nothing,In]", "kind" : "def"}, {"label" : "failure", "tail" : "(): rules.Rule[Any, Nothing, Nothing, Nothing]", "member" : "scala.tools.scalap.scalax.rules.Rules.failure", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/ClassFileParser$.html#failure:scala.tools.scalap.scalax.rules.Rule[Any,Nothing,Nothing,Nothing]", "kind" : "def"}, {"label" : "success", "tail" : "(out: Out, a: A): rules.Rule[Any, Out, A, Nothing]", "member" : "scala.tools.scalap.scalax.rules.Rules.success", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/ClassFileParser$.html#success[Out,A](out:Out,a:A):scala.tools.scalap.scalax.rules.Rule[Any,Out,A,Nothing]", "kind" : "def"}, {"label" : "state", "tail" : "(): StateRules { type S = s }", "member" : "scala.tools.scalap.scalax.rules.Rules.state", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/ClassFileParser$.html#state[s]:scala.tools.scalap.scalax.rules.StateRules{typeS=s}", "kind" : "def"}, {"label" : "from", "tail" : "(): FromRule[In]", "member" : "scala.tools.scalap.scalax.rules.Rules.from", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/ClassFileParser$.html#from[In]:Rules.this.FromRule[In]", "kind" : "def"}, {"label" : "seqRule", "tail" : "(rule: rules.Rule[In, In, A, X]): SeqRule[In, A, X]", "member" : "scala.tools.scalap.scalax.rules.Rules.seqRule", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/ClassFileParser$.html#seqRule[In,A,X](rule:scala.tools.scalap.scalax.rules.Rule[In,In,A,X]):scala.tools.scalap.scalax.rules.SeqRule[In,A,X]", "kind" : "implicit def"}, {"label" : "inRule", "tail" : "(rule: rules.Rule[In, Out, A, X]): InRule[In, Out, A, X]", "member" : "scala.tools.scalap.scalax.rules.Rules.inRule", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/ClassFileParser$.html#inRule[In,Out,A,X](rule:scala.tools.scalap.scalax.rules.Rule[In,Out,A,X]):scala.tools.scalap.scalax.rules.InRule[In,Out,A,X]", "kind" : "implicit def"}, {"label" : "rule", "tail" : "(f: (In) => Result[Out, A, X]): rules.Rule[In, Out, A, X]", "member" : "scala.tools.scalap.scalax.rules.Rules.rule", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/ClassFileParser$.html#rule[In,Out,A,X](f:In=>scala.tools.scalap.scalax.rules.Result[Out,A,X]):scala.tools.scalap.scalax.rules.Rule[In,Out,A,X]", "kind" : "implicit def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/ClassFileParser$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/ClassFileParser$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/ClassFileParser$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/ClassFileParser$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/ClassFileParser$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/ClassFileParser$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/ClassFileParser$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/ClassFileParser$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/ClassFileParser$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/ClassFileParser$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/ClassFileParser$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/ClassFileParser$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/ClassFileParser$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/ClassFileParser$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/ClassFileParser$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/ClassFileParser$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/ClassFileParser$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/ClassFileParser$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/ClassFileParser$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "scala.tools.scalap.scalax.rules.scalasig.ClassInfoType", "shortDescription" : "", "members_case class" : [{"label" : "+", "tail" : "(other: String): String", "member" : "scala.Predef.any2stringadd.+", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/ClassInfoType.html#+(other:String):String", "kind" : "def"}, {"label" : "formatted", "tail" : "(fmtstr: String): String", "member" : "scala.Predef.StringFormat.formatted", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/ClassInfoType.html#formatted(fmtstr:String):String", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: (ClassInfoType) => Boolean, msg: => Any): ClassInfoType", "member" : "scala.Predef.Ensuring.ensuring", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/ClassInfoType.html#ensuring(cond:A=>Boolean,msg:=>Any):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: (ClassInfoType) => Boolean): ClassInfoType", "member" : "scala.Predef.Ensuring.ensuring", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/ClassInfoType.html#ensuring(cond:A=>Boolean):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: Boolean, msg: => Any): ClassInfoType", "member" : "scala.Predef.Ensuring.ensuring", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/ClassInfoType.html#ensuring(cond:Boolean,msg:=>Any):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: Boolean): ClassInfoType", "member" : "scala.Predef.Ensuring.ensuring", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/ClassInfoType.html#ensuring(cond:Boolean):A", "kind" : "def"}, {"label" : "→", "tail" : "(y: B): (ClassInfoType, B)", "member" : "scala.Predef.ArrowAssoc.→", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/ClassInfoType.html#→[B](y:B):(A,B)", "kind" : "def"}, {"label" : "->", "tail" : "(y: B): (ClassInfoType, B)", "member" : "scala.Predef.ArrowAssoc.->", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/ClassInfoType.html#->[B](y:B):(A,B)", "kind" : "def"}, {"member" : "scala.tools.scalap.scalax.rules.scalasig.ClassInfoType#<init>", "error" : "unsupported entity"}, {"label" : "typeRefs", "tail" : ": Seq[Type]", "member" : "scala.tools.scalap.scalax.rules.scalasig.ClassInfoType.typeRefs", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/ClassInfoType.html#typeRefs:Seq[scala.tools.scalap.scalax.rules.scalasig.Type]", "kind" : "val"}, {"label" : "symbol", "tail" : ": Symbol", "member" : "scala.tools.scalap.scalax.rules.scalasig.ClassInfoType.symbol", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/ClassInfoType.html#symbol:scala.tools.scalap.scalax.rules.scalasig.Symbol", "kind" : "val"}, {"label" : "productElementNames", "tail" : "(): Iterator[String]", "member" : "scala.Product.productElementNames", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/ClassInfoType.html#productElementNames:Iterator[String]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/ClassInfoType.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/ClassInfoType.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/ClassInfoType.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/ClassInfoType.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/ClassInfoType.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/ClassInfoType.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/ClassInfoType.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/ClassInfoType.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/ClassInfoType.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/ClassInfoType.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/ClassInfoType.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/ClassInfoType.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/ClassInfoType.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/ClassInfoType.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/ClassInfoType.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/ClassInfoType.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/ClassInfoType.html", "kind" : "case class"}, {"name" : "scala.tools.scalap.scalax.rules.scalasig.ClassInfoTypeWithCons", "shortDescription" : "", "members_case class" : [{"label" : "+", "tail" : "(other: String): String", "member" : "scala.Predef.any2stringadd.+", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/ClassInfoTypeWithCons.html#+(other:String):String", "kind" : "def"}, {"label" : "formatted", "tail" : "(fmtstr: String): String", "member" : "scala.Predef.StringFormat.formatted", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/ClassInfoTypeWithCons.html#formatted(fmtstr:String):String", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: (ClassInfoTypeWithCons) => Boolean, msg: => Any): ClassInfoTypeWithCons", "member" : "scala.Predef.Ensuring.ensuring", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/ClassInfoTypeWithCons.html#ensuring(cond:A=>Boolean,msg:=>Any):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: (ClassInfoTypeWithCons) => Boolean): ClassInfoTypeWithCons", "member" : "scala.Predef.Ensuring.ensuring", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/ClassInfoTypeWithCons.html#ensuring(cond:A=>Boolean):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: Boolean, msg: => Any): ClassInfoTypeWithCons", "member" : "scala.Predef.Ensuring.ensuring", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/ClassInfoTypeWithCons.html#ensuring(cond:Boolean,msg:=>Any):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: Boolean): ClassInfoTypeWithCons", "member" : "scala.Predef.Ensuring.ensuring", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/ClassInfoTypeWithCons.html#ensuring(cond:Boolean):A", "kind" : "def"}, {"label" : "→", "tail" : "(y: B): (ClassInfoTypeWithCons, B)", "member" : "scala.Predef.ArrowAssoc.→", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/ClassInfoTypeWithCons.html#→[B](y:B):(A,B)", "kind" : "def"}, {"label" : "->", "tail" : "(y: B): (ClassInfoTypeWithCons, B)", "member" : "scala.Predef.ArrowAssoc.->", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/ClassInfoTypeWithCons.html#->[B](y:B):(A,B)", "kind" : "def"}, {"member" : "scala.tools.scalap.scalax.rules.scalasig.ClassInfoTypeWithCons#<init>", "error" : "unsupported entity"}, {"label" : "cons", "tail" : ": String", "member" : "scala.tools.scalap.scalax.rules.scalasig.ClassInfoTypeWithCons.cons", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/ClassInfoTypeWithCons.html#cons:String", "kind" : "val"}, {"label" : "typeRefs", "tail" : ": Seq[Type]", "member" : "scala.tools.scalap.scalax.rules.scalasig.ClassInfoTypeWithCons.typeRefs", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/ClassInfoTypeWithCons.html#typeRefs:Seq[scala.tools.scalap.scalax.rules.scalasig.Type]", "kind" : "val"}, {"label" : "symbol", "tail" : ": Symbol", "member" : "scala.tools.scalap.scalax.rules.scalasig.ClassInfoTypeWithCons.symbol", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/ClassInfoTypeWithCons.html#symbol:scala.tools.scalap.scalax.rules.scalasig.Symbol", "kind" : "val"}, {"label" : "productElementNames", "tail" : "(): Iterator[String]", "member" : "scala.Product.productElementNames", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/ClassInfoTypeWithCons.html#productElementNames:Iterator[String]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/ClassInfoTypeWithCons.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/ClassInfoTypeWithCons.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/ClassInfoTypeWithCons.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/ClassInfoTypeWithCons.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/ClassInfoTypeWithCons.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/ClassInfoTypeWithCons.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/ClassInfoTypeWithCons.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/ClassInfoTypeWithCons.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/ClassInfoTypeWithCons.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/ClassInfoTypeWithCons.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/ClassInfoTypeWithCons.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/ClassInfoTypeWithCons.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/ClassInfoTypeWithCons.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/ClassInfoTypeWithCons.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/ClassInfoTypeWithCons.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/ClassInfoTypeWithCons.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/ClassInfoTypeWithCons.html", "kind" : "case class"}, {"name" : "scala.tools.scalap.scalax.rules.scalasig.ClassSymbol", "shortDescription" : "", "members_case class" : [{"label" : "+", "tail" : "(other: String): String", "member" : "scala.Predef.any2stringadd.+", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/ClassSymbol.html#+(other:String):String", "kind" : "def"}, {"label" : "formatted", "tail" : "(fmtstr: String): String", "member" : "scala.Predef.StringFormat.formatted", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/ClassSymbol.html#formatted(fmtstr:String):String", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: (ClassSymbol) => Boolean, msg: => Any): ClassSymbol", "member" : "scala.Predef.Ensuring.ensuring", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/ClassSymbol.html#ensuring(cond:A=>Boolean,msg:=>Any):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: (ClassSymbol) => Boolean): ClassSymbol", "member" : "scala.Predef.Ensuring.ensuring", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/ClassSymbol.html#ensuring(cond:A=>Boolean):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: Boolean, msg: => Any): ClassSymbol", "member" : "scala.Predef.Ensuring.ensuring", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/ClassSymbol.html#ensuring(cond:Boolean,msg:=>Any):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: Boolean): ClassSymbol", "member" : "scala.Predef.Ensuring.ensuring", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/ClassSymbol.html#ensuring(cond:Boolean):A", "kind" : "def"}, {"label" : "→", "tail" : "(y: B): (ClassSymbol, B)", "member" : "scala.Predef.ArrowAssoc.→", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/ClassSymbol.html#→[B](y:B):(A,B)", "kind" : "def"}, {"label" : "->", "tail" : "(y: B): (ClassSymbol, B)", "member" : "scala.Predef.ArrowAssoc.->", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/ClassSymbol.html#->[B](y:B):(A,B)", "kind" : "def"}, {"label" : "selfType", "tail" : ": Option[Type]", "member" : "scala.tools.scalap.scalax.rules.scalasig.ClassSymbol.selfType", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/ClassSymbol.html#selfType:Option[scala.tools.scalap.scalax.rules.scalasig.Type]", "kind" : "lazy val"}, {"member" : "scala.tools.scalap.scalax.rules.scalasig.ClassSymbol#<init>", "error" : "unsupported entity"}, {"label" : "thisTypeRef", "tail" : ": Option[Int]", "member" : "scala.tools.scalap.scalax.rules.scalasig.ClassSymbol.thisTypeRef", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/ClassSymbol.html#thisTypeRef:Option[Int]", "kind" : "val"}, {"label" : "symbolInfo", "tail" : ": SymbolInfo", "member" : "scala.tools.scalap.scalax.rules.scalasig.ClassSymbol.symbolInfo", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/ClassSymbol.html#symbolInfo:scala.tools.scalap.scalax.rules.scalasig.SymbolInfo", "kind" : "val"}, {"label" : "productElementNames", "tail" : "(): Iterator[String]", "member" : "scala.Product.productElementNames", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/ClassSymbol.html#productElementNames:Iterator[String]", "kind" : "def"}, {"label" : "infoType", "tail" : ": Type", "member" : "scala.tools.scalap.scalax.rules.scalasig.SymbolInfoSymbol.infoType", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/ClassSymbol.html#infoType:scala.tools.scalap.scalax.rules.scalasig.Type", "kind" : "lazy val"}, {"label" : "hasFlag", "tail" : "(flag: Long): Boolean", "member" : "scala.tools.scalap.scalax.rules.scalasig.SymbolInfoSymbol.hasFlag", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/ClassSymbol.html#hasFlag(flag:Long):Boolean", "kind" : "def"}, {"label" : "parent", "tail" : "(): Some[Symbol]", "member" : "scala.tools.scalap.scalax.rules.scalasig.SymbolInfoSymbol.parent", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/ClassSymbol.html#parent:Some[scala.tools.scalap.scalax.rules.scalasig.Symbol]", "kind" : "def"}, {"label" : "name", "tail" : "(): String", "member" : "scala.tools.scalap.scalax.rules.scalasig.SymbolInfoSymbol.name", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/ClassSymbol.html#name:String", "kind" : "def"}, {"label" : "entry", "tail" : "(): Entry", "member" : "scala.tools.scalap.scalax.rules.scalasig.SymbolInfoSymbol.entry", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/ClassSymbol.html#entry:scala.tools.scalap.scalax.rules.scalasig.ScalaSig#Entry", "kind" : "def"}, {"label" : "attributes", "tail" : ": Seq[AttributeInfo]", "member" : "scala.tools.scalap.scalax.rules.scalasig.ScalaSigSymbol.attributes", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/ClassSymbol.html#attributes:Seq[scala.tools.scalap.scalax.rules.scalasig.AttributeInfo]", "kind" : "lazy val"}, {"label" : "children", "tail" : ": Seq[Symbol]", "member" : "scala.tools.scalap.scalax.rules.scalasig.ScalaSigSymbol.children", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/ClassSymbol.html#children:Seq[scala.tools.scalap.scalax.rules.scalasig.Symbol]", "kind" : "lazy val"}, {"label" : "index", "tail" : "(): Int", "member" : "scala.tools.scalap.scalax.rules.scalasig.ScalaSigSymbol.index", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/ClassSymbol.html#index:Int", "kind" : "def"}, {"label" : "applyScalaSigRule", "tail" : "(rule: Parser[A]): A", "member" : "scala.tools.scalap.scalax.rules.scalasig.ScalaSigSymbol.applyScalaSigRule", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/ClassSymbol.html#applyScalaSigRule[A](rule:scala.tools.scalap.scalax.rules.scalasig.ScalaSigParsers.Parser[A]):A", "kind" : "def"}, {"label" : "applyRule", "tail" : "(rule: EntryParser[A]): A", "member" : "scala.tools.scalap.scalax.rules.scalasig.ScalaSigSymbol.applyRule", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/ClassSymbol.html#applyRule[A](rule:scala.tools.scalap.scalax.rules.scalasig.ScalaSigEntryParsers.EntryParser[A]):A", "kind" : "def"}, {"label" : "path", "tail" : "(): String", "member" : "scala.tools.scalap.scalax.rules.scalasig.Symbol.path", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/ClassSymbol.html#path:String", "kind" : "def"}, {"label" : "isPreSuper", "tail" : "(): Boolean", "member" : "scala.tools.scalap.scalax.rules.scalasig.Flags.isPreSuper", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/ClassSymbol.html#isPreSuper:Boolean", "kind" : "def"}, {"label" : "isImplementationClass", "tail" : "(): Boolean", "member" : "scala.tools.scalap.scalax.rules.scalasig.Flags.isImplementationClass", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/ClassSymbol.html#isImplementationClass:Boolean", "kind" : "def"}, {"label" : "isExpandedName", "tail" : "(): Boolean", "member" : "scala.tools.scalap.scalax.rules.scalasig.Flags.isExpandedName", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/ClassSymbol.html#isExpandedName:Boolean", "kind" : "def"}, {"label" : "isExistential", "tail" : "(): Boolean", "member" : "scala.tools.scalap.scalax.rules.scalasig.Flags.isExistential", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/ClassSymbol.html#isExistential:Boolean", "kind" : "def"}, {"label" : "isMixedIn", "tail" : "(): Boolean", "member" : "scala.tools.scalap.scalax.rules.scalasig.Flags.isMixedIn", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/ClassSymbol.html#isMixedIn:Boolean", "kind" : "def"}, {"label" : "isLifted", "tail" : "(): Boolean", "member" : "scala.tools.scalap.scalax.rules.scalasig.Flags.isLifted", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/ClassSymbol.html#isLifted:Boolean", "kind" : "def"}, {"label" : "isOverloaded", "tail" : "(): Boolean", "member" : "scala.tools.scalap.scalax.rules.scalasig.Flags.isOverloaded", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/ClassSymbol.html#isOverloaded:Boolean", "kind" : "def"}, {"label" : "isError", "tail" : "(): Boolean", "member" : "scala.tools.scalap.scalax.rules.scalasig.Flags.isError", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/ClassSymbol.html#isError:Boolean", "kind" : "def"}, {"label" : "isLazy", "tail" : "(): Boolean", "member" : "scala.tools.scalap.scalax.rules.scalasig.Flags.isLazy", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/ClassSymbol.html#isLazy:Boolean", "kind" : "def"}, {"label" : "isMonomorphic", "tail" : "(): Boolean", "member" : "scala.tools.scalap.scalax.rules.scalasig.Flags.isMonomorphic", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/ClassSymbol.html#isMonomorphic:Boolean", "kind" : "def"}, {"label" : "isModuleVar", "tail" : "(): Boolean", "member" : "scala.tools.scalap.scalax.rules.scalasig.Flags.isModuleVar", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/ClassSymbol.html#isModuleVar:Boolean", "kind" : "def"}, {"label" : "isParamAccessor", "tail" : "(): Boolean", "member" : "scala.tools.scalap.scalax.rules.scalasig.Flags.isParamAccessor", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/ClassSymbol.html#isParamAccessor:Boolean", "kind" : "def"}, {"label" : "isSuperAccessor", "tail" : "(): Boolean", "member" : "scala.tools.scalap.scalax.rules.scalasig.Flags.isSuperAccessor", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/ClassSymbol.html#isSuperAccessor:Boolean", "kind" : "def"}, {"label" : "isAccessor", "tail" : "(): Boolean", "member" : "scala.tools.scalap.scalax.rules.scalasig.Flags.isAccessor", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/ClassSymbol.html#isAccessor:Boolean", "kind" : "def"}, {"label" : "isBridge", "tail" : "(): Boolean", "member" : "scala.tools.scalap.scalax.rules.scalasig.Flags.isBridge", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/ClassSymbol.html#isBridge:Boolean", "kind" : "def"}, {"label" : "isTrait", "tail" : "(): Boolean", "member" : "scala.tools.scalap.scalax.rules.scalasig.Flags.isTrait", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/ClassSymbol.html#isTrait:Boolean", "kind" : "def"}, {"label" : "isCaseAccessor", "tail" : "(): Boolean", "member" : "scala.tools.scalap.scalax.rules.scalasig.Flags.isCaseAccessor", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/ClassSymbol.html#isCaseAccessor:Boolean", "kind" : "def"}, {"label" : "isStatic", "tail" : "(): Boolean", "member" : "scala.tools.scalap.scalax.rules.scalasig.Flags.isStatic", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/ClassSymbol.html#isStatic:Boolean", "kind" : "def"}, {"label" : "isStable", "tail" : "(): Boolean", "member" : "scala.tools.scalap.scalax.rules.scalasig.Flags.isStable", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/ClassSymbol.html#isStable:Boolean", "kind" : "def"}, {"label" : "isSynthetic", "tail" : "(): Boolean", "member" : "scala.tools.scalap.scalax.rules.scalasig.Flags.isSynthetic", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/ClassSymbol.html#isSynthetic:Boolean", "kind" : "def"}, {"label" : "isJava", "tail" : "(): Boolean", "member" : "scala.tools.scalap.scalax.rules.scalasig.Flags.isJava", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/ClassSymbol.html#isJava:Boolean", "kind" : "def"}, {"label" : "isLocal", "tail" : "(): Boolean", "member" : "scala.tools.scalap.scalax.rules.scalasig.Flags.isLocal", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/ClassSymbol.html#isLocal:Boolean", "kind" : "def"}, {"label" : "isAbstractOverride", "tail" : "(): Boolean", "member" : "scala.tools.scalap.scalax.rules.scalasig.Flags.isAbstractOverride", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/ClassSymbol.html#isAbstractOverride:Boolean", "kind" : "def"}, {"label" : "isInConstructor", "tail" : "(): Boolean", "member" : "scala.tools.scalap.scalax.rules.scalasig.Flags.isInConstructor", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/ClassSymbol.html#isInConstructor:Boolean", "kind" : "def"}, {"label" : "isLabel", "tail" : "(): Boolean", "member" : "scala.tools.scalap.scalax.rules.scalasig.Flags.isLabel", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/ClassSymbol.html#isLabel:Boolean", "kind" : "def"}, {"label" : "isContravariant", "tail" : "(): Boolean", "member" : "scala.tools.scalap.scalax.rules.scalasig.Flags.isContravariant", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/ClassSymbol.html#isContravariant:Boolean", "kind" : "def"}, {"label" : "isByNameParam", "tail" : "(): Boolean", "member" : "scala.tools.scalap.scalax.rules.scalasig.Flags.isByNameParam", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/ClassSymbol.html#isByNameParam:Boolean", "kind" : "def"}, {"label" : "isCaptured", "tail" : "(): Boolean", "member" : "scala.tools.scalap.scalax.rules.scalasig.Flags.isCaptured", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/ClassSymbol.html#isCaptured:Boolean", "kind" : "def"}, {"label" : "isCovariant", "tail" : "(): Boolean", "member" : "scala.tools.scalap.scalax.rules.scalasig.Flags.isCovariant", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/ClassSymbol.html#isCovariant:Boolean", "kind" : "def"}, {"label" : "isDeprecated", "tail" : "(): Boolean", "member" : "scala.tools.scalap.scalax.rules.scalasig.Flags.isDeprecated", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/ClassSymbol.html#isDeprecated:Boolean", "kind" : "def"}, {"label" : "isPackage", "tail" : "(): Boolean", "member" : "scala.tools.scalap.scalax.rules.scalasig.Flags.isPackage", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/ClassSymbol.html#isPackage:Boolean", "kind" : "def"}, {"label" : "isParam", "tail" : "(): Boolean", "member" : "scala.tools.scalap.scalax.rules.scalasig.Flags.isParam", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/ClassSymbol.html#isParam:Boolean", "kind" : "def"}, {"label" : "isMutable", "tail" : "(): Boolean", "member" : "scala.tools.scalap.scalax.rules.scalasig.Flags.isMutable", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/ClassSymbol.html#isMutable:Boolean", "kind" : "def"}, {"label" : "isInterface", "tail" : "(): Boolean", "member" : "scala.tools.scalap.scalax.rules.scalasig.Flags.isInterface", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/ClassSymbol.html#isInterface:Boolean", "kind" : "def"}, {"label" : "isModule", "tail" : "(): Boolean", "member" : "scala.tools.scalap.scalax.rules.scalasig.Flags.isModule", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/ClassSymbol.html#isModule:Boolean", "kind" : "def"}, {"label" : "isMethod", "tail" : "(): Boolean", "member" : "scala.tools.scalap.scalax.rules.scalasig.Flags.isMethod", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/ClassSymbol.html#isMethod:Boolean", "kind" : "def"}, {"label" : "isDeferred", "tail" : "(): Boolean", "member" : "scala.tools.scalap.scalax.rules.scalasig.Flags.isDeferred", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/ClassSymbol.html#isDeferred:Boolean", "kind" : "def"}, {"label" : "isAbstract", "tail" : "(): Boolean", "member" : "scala.tools.scalap.scalax.rules.scalasig.Flags.isAbstract", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/ClassSymbol.html#isAbstract:Boolean", "kind" : "def"}, {"label" : "isCase", "tail" : "(): Boolean", "member" : "scala.tools.scalap.scalax.rules.scalasig.Flags.isCase", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/ClassSymbol.html#isCase:Boolean", "kind" : "def"}, {"label" : "isOverride", "tail" : "(): Boolean", "member" : "scala.tools.scalap.scalax.rules.scalasig.Flags.isOverride", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/ClassSymbol.html#isOverride:Boolean", "kind" : "def"}, {"label" : "isSealed", "tail" : "(): Boolean", "member" : "scala.tools.scalap.scalax.rules.scalasig.Flags.isSealed", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/ClassSymbol.html#isSealed:Boolean", "kind" : "def"}, {"label" : "isProtected", "tail" : "(): Boolean", "member" : "scala.tools.scalap.scalax.rules.scalasig.Flags.isProtected", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/ClassSymbol.html#isProtected:Boolean", "kind" : "def"}, {"label" : "isPrivate", "tail" : "(): Boolean", "member" : "scala.tools.scalap.scalax.rules.scalasig.Flags.isPrivate", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/ClassSymbol.html#isPrivate:Boolean", "kind" : "def"}, {"label" : "isFinal", "tail" : "(): Boolean", "member" : "scala.tools.scalap.scalax.rules.scalasig.Flags.isFinal", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/ClassSymbol.html#isFinal:Boolean", "kind" : "def"}, {"label" : "isImplicit", "tail" : "(): Boolean", "member" : "scala.tools.scalap.scalax.rules.scalasig.Flags.isImplicit", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/ClassSymbol.html#isImplicit:Boolean", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/ClassSymbol.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/ClassSymbol.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/ClassSymbol.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/ClassSymbol.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/ClassSymbol.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/ClassSymbol.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/ClassSymbol.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/ClassSymbol.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/ClassSymbol.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/ClassSymbol.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/ClassSymbol.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/ClassSymbol.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/ClassSymbol.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/ClassSymbol.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/ClassSymbol.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/ClassSymbol.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/ClassSymbol.html", "kind" : "case class"}, {"name" : "scala.tools.scalap.scalax.rules.scalasig.ConstantPool", "shortDescription" : "", "members_case class" : [{"label" : "+", "tail" : "(other: String): String", "member" : "scala.Predef.any2stringadd.+", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/ConstantPool.html#+(other:String):String", "kind" : "def"}, {"label" : "formatted", "tail" : "(fmtstr: String): String", "member" : "scala.Predef.StringFormat.formatted", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/ConstantPool.html#formatted(fmtstr:String):String", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: (ConstantPool) => Boolean, msg: => Any): ConstantPool", "member" : "scala.Predef.Ensuring.ensuring", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/ConstantPool.html#ensuring(cond:A=>Boolean,msg:=>Any):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: (ConstantPool) => Boolean): ConstantPool", "member" : "scala.Predef.Ensuring.ensuring", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/ConstantPool.html#ensuring(cond:A=>Boolean):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: Boolean, msg: => Any): ConstantPool", "member" : "scala.Predef.Ensuring.ensuring", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/ConstantPool.html#ensuring(cond:Boolean,msg:=>Any):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: Boolean): ConstantPool", "member" : "scala.Predef.Ensuring.ensuring", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/ConstantPool.html#ensuring(cond:Boolean):A", "kind" : "def"}, {"label" : "→", "tail" : "(y: B): (ConstantPool, B)", "member" : "scala.Predef.ArrowAssoc.→", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/ConstantPool.html#→[B](y:B):(A,B)", "kind" : "def"}, {"label" : "->", "tail" : "(y: B): (ConstantPool, B)", "member" : "scala.Predef.ArrowAssoc.->", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/ConstantPool.html#->[B](y:B):(A,B)", "kind" : "def"}, {"label" : "add", "tail" : "(f: (ConstantPool) => Any): ConstantPool", "member" : "scala.tools.scalap.scalax.rules.scalasig.ConstantPool.add", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/ConstantPool.html#add(f:scala.tools.scalap.scalax.rules.scalasig.ConstantPool=>Any):scala.tools.scalap.scalax.rules.scalasig.ConstantPool", "kind" : "def"}, {"label" : "apply", "tail" : "(index: Int): Any", "member" : "scala.tools.scalap.scalax.rules.scalasig.ConstantPool.apply", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/ConstantPool.html#apply(index:Int):Any", "kind" : "def"}, {"label" : "isFull", "tail" : "(): Boolean", "member" : "scala.tools.scalap.scalax.rules.scalasig.ConstantPool.isFull", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/ConstantPool.html#isFull:Boolean", "kind" : "def"}, {"label" : "size", "tail" : ": Int", "member" : "scala.tools.scalap.scalax.rules.scalasig.ConstantPool.size", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/ConstantPool.html#size:Int", "kind" : "val"}, {"member" : "scala.tools.scalap.scalax.rules.scalasig.ConstantPool#<init>", "error" : "unsupported entity"}, {"label" : "len", "tail" : ": Int", "member" : "scala.tools.scalap.scalax.rules.scalasig.ConstantPool.len", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/ConstantPool.html#len:Int", "kind" : "val"}, {"label" : "productElementNames", "tail" : "(): Iterator[String]", "member" : "scala.Product.productElementNames", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/ConstantPool.html#productElementNames:Iterator[String]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/ConstantPool.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/ConstantPool.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/ConstantPool.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/ConstantPool.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/ConstantPool.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/ConstantPool.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/ConstantPool.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/ConstantPool.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/ConstantPool.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/ConstantPool.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/ConstantPool.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/ConstantPool.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/ConstantPool.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/ConstantPool.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/ConstantPool.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/ConstantPool.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/ConstantPool.html", "kind" : "case class"}, {"name" : "scala.tools.scalap.scalax.rules.scalasig.ConstantType", "shortDescription" : "", "members_case class" : [{"label" : "+", "tail" : "(other: String): String", "member" : "scala.Predef.any2stringadd.+", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/ConstantType.html#+(other:String):String", "kind" : "def"}, {"label" : "formatted", "tail" : "(fmtstr: String): String", "member" : "scala.Predef.StringFormat.formatted", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/ConstantType.html#formatted(fmtstr:String):String", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: (ConstantType) => Boolean, msg: => Any): ConstantType", "member" : "scala.Predef.Ensuring.ensuring", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/ConstantType.html#ensuring(cond:A=>Boolean,msg:=>Any):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: (ConstantType) => Boolean): ConstantType", "member" : "scala.Predef.Ensuring.ensuring", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/ConstantType.html#ensuring(cond:A=>Boolean):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: Boolean, msg: => Any): ConstantType", "member" : "scala.Predef.Ensuring.ensuring", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/ConstantType.html#ensuring(cond:Boolean,msg:=>Any):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: Boolean): ConstantType", "member" : "scala.Predef.Ensuring.ensuring", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/ConstantType.html#ensuring(cond:Boolean):A", "kind" : "def"}, {"label" : "→", "tail" : "(y: B): (ConstantType, B)", "member" : "scala.Predef.ArrowAssoc.→", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/ConstantType.html#→[B](y:B):(A,B)", "kind" : "def"}, {"label" : "->", "tail" : "(y: B): (ConstantType, B)", "member" : "scala.Predef.ArrowAssoc.->", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/ConstantType.html#->[B](y:B):(A,B)", "kind" : "def"}, {"member" : "scala.tools.scalap.scalax.rules.scalasig.ConstantType#<init>", "error" : "unsupported entity"}, {"label" : "constant", "tail" : ": Any", "member" : "scala.tools.scalap.scalax.rules.scalasig.ConstantType.constant", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/ConstantType.html#constant:Any", "kind" : "val"}, {"label" : "productElementNames", "tail" : "(): Iterator[String]", "member" : "scala.Product.productElementNames", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/ConstantType.html#productElementNames:Iterator[String]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/ConstantType.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/ConstantType.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/ConstantType.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/ConstantType.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/ConstantType.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/ConstantType.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/ConstantType.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/ConstantType.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/ConstantType.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/ConstantType.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/ConstantType.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/ConstantType.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/ConstantType.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/ConstantType.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/ConstantType.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/ConstantType.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/ConstantType.html", "kind" : "case class"}, {"name" : "scala.tools.scalap.scalax.rules.scalasig.ExistentialType", "shortDescription" : "", "members_case class" : [{"label" : "+", "tail" : "(other: String): String", "member" : "scala.Predef.any2stringadd.+", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/ExistentialType.html#+(other:String):String", "kind" : "def"}, {"label" : "formatted", "tail" : "(fmtstr: String): String", "member" : "scala.Predef.StringFormat.formatted", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/ExistentialType.html#formatted(fmtstr:String):String", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: (ExistentialType) => Boolean, msg: => Any): ExistentialType", "member" : "scala.Predef.Ensuring.ensuring", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/ExistentialType.html#ensuring(cond:A=>Boolean,msg:=>Any):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: (ExistentialType) => Boolean): ExistentialType", "member" : "scala.Predef.Ensuring.ensuring", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/ExistentialType.html#ensuring(cond:A=>Boolean):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: Boolean, msg: => Any): ExistentialType", "member" : "scala.Predef.Ensuring.ensuring", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/ExistentialType.html#ensuring(cond:Boolean,msg:=>Any):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: Boolean): ExistentialType", "member" : "scala.Predef.Ensuring.ensuring", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/ExistentialType.html#ensuring(cond:Boolean):A", "kind" : "def"}, {"label" : "→", "tail" : "(y: B): (ExistentialType, B)", "member" : "scala.Predef.ArrowAssoc.→", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/ExistentialType.html#→[B](y:B):(A,B)", "kind" : "def"}, {"label" : "->", "tail" : "(y: B): (ExistentialType, B)", "member" : "scala.Predef.ArrowAssoc.->", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/ExistentialType.html#->[B](y:B):(A,B)", "kind" : "def"}, {"member" : "scala.tools.scalap.scalax.rules.scalasig.ExistentialType#<init>", "error" : "unsupported entity"}, {"label" : "symbols", "tail" : ": Seq[Symbol]", "member" : "scala.tools.scalap.scalax.rules.scalasig.ExistentialType.symbols", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/ExistentialType.html#symbols:Seq[scala.tools.scalap.scalax.rules.scalasig.Symbol]", "kind" : "val"}, {"label" : "typeRef", "tail" : ": Type", "member" : "scala.tools.scalap.scalax.rules.scalasig.ExistentialType.typeRef", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/ExistentialType.html#typeRef:scala.tools.scalap.scalax.rules.scalasig.Type", "kind" : "val"}, {"label" : "productElementNames", "tail" : "(): Iterator[String]", "member" : "scala.Product.productElementNames", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/ExistentialType.html#productElementNames:Iterator[String]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/ExistentialType.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/ExistentialType.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/ExistentialType.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/ExistentialType.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/ExistentialType.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/ExistentialType.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/ExistentialType.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/ExistentialType.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/ExistentialType.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/ExistentialType.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/ExistentialType.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/ExistentialType.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/ExistentialType.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/ExistentialType.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/ExistentialType.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/ExistentialType.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/ExistentialType.html", "kind" : "case class"}, {"name" : "scala.tools.scalap.scalax.rules.scalasig.ExternalSymbol", "shortDescription" : "", "members_case class" : [{"label" : "+", "tail" : "(other: String): String", "member" : "scala.Predef.any2stringadd.+", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/ExternalSymbol.html#+(other:String):String", "kind" : "def"}, {"label" : "formatted", "tail" : "(fmtstr: String): String", "member" : "scala.Predef.StringFormat.formatted", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/ExternalSymbol.html#formatted(fmtstr:String):String", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: (ExternalSymbol) => Boolean, msg: => Any): ExternalSymbol", "member" : "scala.Predef.Ensuring.ensuring", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/ExternalSymbol.html#ensuring(cond:A=>Boolean,msg:=>Any):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: (ExternalSymbol) => Boolean): ExternalSymbol", "member" : "scala.Predef.Ensuring.ensuring", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/ExternalSymbol.html#ensuring(cond:A=>Boolean):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: Boolean, msg: => Any): ExternalSymbol", "member" : "scala.Predef.Ensuring.ensuring", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/ExternalSymbol.html#ensuring(cond:Boolean,msg:=>Any):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: Boolean): ExternalSymbol", "member" : "scala.Predef.Ensuring.ensuring", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/ExternalSymbol.html#ensuring(cond:Boolean):A", "kind" : "def"}, {"label" : "→", "tail" : "(y: B): (ExternalSymbol, B)", "member" : "scala.Predef.ArrowAssoc.→", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/ExternalSymbol.html#→[B](y:B):(A,B)", "kind" : "def"}, {"label" : "->", "tail" : "(y: B): (ExternalSymbol, B)", "member" : "scala.Predef.ArrowAssoc.->", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/ExternalSymbol.html#->[B](y:B):(A,B)", "kind" : "def"}, {"label" : "hasFlag", "tail" : "(flag: Long): Boolean", "member" : "scala.tools.scalap.scalax.rules.scalasig.ExternalSymbol.hasFlag", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/ExternalSymbol.html#hasFlag(flag:Long):Boolean", "kind" : "def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.tools.scalap.scalax.rules.scalasig.ExternalSymbol.toString", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/ExternalSymbol.html#toString():String", "kind" : "def"}, {"member" : "scala.tools.scalap.scalax.rules.scalasig.ExternalSymbol#<init>", "error" : "unsupported entity"}, {"label" : "entry", "tail" : ": Entry", "member" : "scala.tools.scalap.scalax.rules.scalasig.ExternalSymbol.entry", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/ExternalSymbol.html#entry:scala.tools.scalap.scalax.rules.scalasig.ScalaSig#Entry", "kind" : "val"}, {"label" : "parent", "tail" : ": Option[Symbol]", "member" : "scala.tools.scalap.scalax.rules.scalasig.ExternalSymbol.parent", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/ExternalSymbol.html#parent:Option[scala.tools.scalap.scalax.rules.scalasig.Symbol]", "kind" : "val"}, {"label" : "name", "tail" : ": String", "member" : "scala.tools.scalap.scalax.rules.scalasig.ExternalSymbol.name", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/ExternalSymbol.html#name:String", "kind" : "val"}, {"label" : "productElementNames", "tail" : "(): Iterator[String]", "member" : "scala.Product.productElementNames", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/ExternalSymbol.html#productElementNames:Iterator[String]", "kind" : "def"}, {"label" : "attributes", "tail" : ": Seq[AttributeInfo]", "member" : "scala.tools.scalap.scalax.rules.scalasig.ScalaSigSymbol.attributes", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/ExternalSymbol.html#attributes:Seq[scala.tools.scalap.scalax.rules.scalasig.AttributeInfo]", "kind" : "lazy val"}, {"label" : "children", "tail" : ": Seq[Symbol]", "member" : "scala.tools.scalap.scalax.rules.scalasig.ScalaSigSymbol.children", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/ExternalSymbol.html#children:Seq[scala.tools.scalap.scalax.rules.scalasig.Symbol]", "kind" : "lazy val"}, {"label" : "index", "tail" : "(): Int", "member" : "scala.tools.scalap.scalax.rules.scalasig.ScalaSigSymbol.index", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/ExternalSymbol.html#index:Int", "kind" : "def"}, {"label" : "applyScalaSigRule", "tail" : "(rule: Parser[A]): A", "member" : "scala.tools.scalap.scalax.rules.scalasig.ScalaSigSymbol.applyScalaSigRule", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/ExternalSymbol.html#applyScalaSigRule[A](rule:scala.tools.scalap.scalax.rules.scalasig.ScalaSigParsers.Parser[A]):A", "kind" : "def"}, {"label" : "applyRule", "tail" : "(rule: EntryParser[A]): A", "member" : "scala.tools.scalap.scalax.rules.scalasig.ScalaSigSymbol.applyRule", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/ExternalSymbol.html#applyRule[A](rule:scala.tools.scalap.scalax.rules.scalasig.ScalaSigEntryParsers.EntryParser[A]):A", "kind" : "def"}, {"label" : "path", "tail" : "(): String", "member" : "scala.tools.scalap.scalax.rules.scalasig.Symbol.path", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/ExternalSymbol.html#path:String", "kind" : "def"}, {"label" : "isPreSuper", "tail" : "(): Boolean", "member" : "scala.tools.scalap.scalax.rules.scalasig.Flags.isPreSuper", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/ExternalSymbol.html#isPreSuper:Boolean", "kind" : "def"}, {"label" : "isImplementationClass", "tail" : "(): Boolean", "member" : "scala.tools.scalap.scalax.rules.scalasig.Flags.isImplementationClass", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/ExternalSymbol.html#isImplementationClass:Boolean", "kind" : "def"}, {"label" : "isExpandedName", "tail" : "(): Boolean", "member" : "scala.tools.scalap.scalax.rules.scalasig.Flags.isExpandedName", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/ExternalSymbol.html#isExpandedName:Boolean", "kind" : "def"}, {"label" : "isExistential", "tail" : "(): Boolean", "member" : "scala.tools.scalap.scalax.rules.scalasig.Flags.isExistential", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/ExternalSymbol.html#isExistential:Boolean", "kind" : "def"}, {"label" : "isMixedIn", "tail" : "(): Boolean", "member" : "scala.tools.scalap.scalax.rules.scalasig.Flags.isMixedIn", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/ExternalSymbol.html#isMixedIn:Boolean", "kind" : "def"}, {"label" : "isLifted", "tail" : "(): Boolean", "member" : "scala.tools.scalap.scalax.rules.scalasig.Flags.isLifted", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/ExternalSymbol.html#isLifted:Boolean", "kind" : "def"}, {"label" : "isOverloaded", "tail" : "(): Boolean", "member" : "scala.tools.scalap.scalax.rules.scalasig.Flags.isOverloaded", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/ExternalSymbol.html#isOverloaded:Boolean", "kind" : "def"}, {"label" : "isError", "tail" : "(): Boolean", "member" : "scala.tools.scalap.scalax.rules.scalasig.Flags.isError", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/ExternalSymbol.html#isError:Boolean", "kind" : "def"}, {"label" : "isLazy", "tail" : "(): Boolean", "member" : "scala.tools.scalap.scalax.rules.scalasig.Flags.isLazy", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/ExternalSymbol.html#isLazy:Boolean", "kind" : "def"}, {"label" : "isMonomorphic", "tail" : "(): Boolean", "member" : "scala.tools.scalap.scalax.rules.scalasig.Flags.isMonomorphic", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/ExternalSymbol.html#isMonomorphic:Boolean", "kind" : "def"}, {"label" : "isModuleVar", "tail" : "(): Boolean", "member" : "scala.tools.scalap.scalax.rules.scalasig.Flags.isModuleVar", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/ExternalSymbol.html#isModuleVar:Boolean", "kind" : "def"}, {"label" : "isParamAccessor", "tail" : "(): Boolean", "member" : "scala.tools.scalap.scalax.rules.scalasig.Flags.isParamAccessor", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/ExternalSymbol.html#isParamAccessor:Boolean", "kind" : "def"}, {"label" : "isSuperAccessor", "tail" : "(): Boolean", "member" : "scala.tools.scalap.scalax.rules.scalasig.Flags.isSuperAccessor", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/ExternalSymbol.html#isSuperAccessor:Boolean", "kind" : "def"}, {"label" : "isAccessor", "tail" : "(): Boolean", "member" : "scala.tools.scalap.scalax.rules.scalasig.Flags.isAccessor", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/ExternalSymbol.html#isAccessor:Boolean", "kind" : "def"}, {"label" : "isBridge", "tail" : "(): Boolean", "member" : "scala.tools.scalap.scalax.rules.scalasig.Flags.isBridge", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/ExternalSymbol.html#isBridge:Boolean", "kind" : "def"}, {"label" : "isTrait", "tail" : "(): Boolean", "member" : "scala.tools.scalap.scalax.rules.scalasig.Flags.isTrait", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/ExternalSymbol.html#isTrait:Boolean", "kind" : "def"}, {"label" : "isCaseAccessor", "tail" : "(): Boolean", "member" : "scala.tools.scalap.scalax.rules.scalasig.Flags.isCaseAccessor", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/ExternalSymbol.html#isCaseAccessor:Boolean", "kind" : "def"}, {"label" : "isStatic", "tail" : "(): Boolean", "member" : "scala.tools.scalap.scalax.rules.scalasig.Flags.isStatic", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/ExternalSymbol.html#isStatic:Boolean", "kind" : "def"}, {"label" : "isStable", "tail" : "(): Boolean", "member" : "scala.tools.scalap.scalax.rules.scalasig.Flags.isStable", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/ExternalSymbol.html#isStable:Boolean", "kind" : "def"}, {"label" : "isSynthetic", "tail" : "(): Boolean", "member" : "scala.tools.scalap.scalax.rules.scalasig.Flags.isSynthetic", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/ExternalSymbol.html#isSynthetic:Boolean", "kind" : "def"}, {"label" : "isJava", "tail" : "(): Boolean", "member" : "scala.tools.scalap.scalax.rules.scalasig.Flags.isJava", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/ExternalSymbol.html#isJava:Boolean", "kind" : "def"}, {"label" : "isLocal", "tail" : "(): Boolean", "member" : "scala.tools.scalap.scalax.rules.scalasig.Flags.isLocal", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/ExternalSymbol.html#isLocal:Boolean", "kind" : "def"}, {"label" : "isAbstractOverride", "tail" : "(): Boolean", "member" : "scala.tools.scalap.scalax.rules.scalasig.Flags.isAbstractOverride", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/ExternalSymbol.html#isAbstractOverride:Boolean", "kind" : "def"}, {"label" : "isInConstructor", "tail" : "(): Boolean", "member" : "scala.tools.scalap.scalax.rules.scalasig.Flags.isInConstructor", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/ExternalSymbol.html#isInConstructor:Boolean", "kind" : "def"}, {"label" : "isLabel", "tail" : "(): Boolean", "member" : "scala.tools.scalap.scalax.rules.scalasig.Flags.isLabel", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/ExternalSymbol.html#isLabel:Boolean", "kind" : "def"}, {"label" : "isContravariant", "tail" : "(): Boolean", "member" : "scala.tools.scalap.scalax.rules.scalasig.Flags.isContravariant", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/ExternalSymbol.html#isContravariant:Boolean", "kind" : "def"}, {"label" : "isByNameParam", "tail" : "(): Boolean", "member" : "scala.tools.scalap.scalax.rules.scalasig.Flags.isByNameParam", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/ExternalSymbol.html#isByNameParam:Boolean", "kind" : "def"}, {"label" : "isCaptured", "tail" : "(): Boolean", "member" : "scala.tools.scalap.scalax.rules.scalasig.Flags.isCaptured", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/ExternalSymbol.html#isCaptured:Boolean", "kind" : "def"}, {"label" : "isCovariant", "tail" : "(): Boolean", "member" : "scala.tools.scalap.scalax.rules.scalasig.Flags.isCovariant", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/ExternalSymbol.html#isCovariant:Boolean", "kind" : "def"}, {"label" : "isDeprecated", "tail" : "(): Boolean", "member" : "scala.tools.scalap.scalax.rules.scalasig.Flags.isDeprecated", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/ExternalSymbol.html#isDeprecated:Boolean", "kind" : "def"}, {"label" : "isPackage", "tail" : "(): Boolean", "member" : "scala.tools.scalap.scalax.rules.scalasig.Flags.isPackage", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/ExternalSymbol.html#isPackage:Boolean", "kind" : "def"}, {"label" : "isParam", "tail" : "(): Boolean", "member" : "scala.tools.scalap.scalax.rules.scalasig.Flags.isParam", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/ExternalSymbol.html#isParam:Boolean", "kind" : "def"}, {"label" : "isMutable", "tail" : "(): Boolean", "member" : "scala.tools.scalap.scalax.rules.scalasig.Flags.isMutable", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/ExternalSymbol.html#isMutable:Boolean", "kind" : "def"}, {"label" : "isInterface", "tail" : "(): Boolean", "member" : "scala.tools.scalap.scalax.rules.scalasig.Flags.isInterface", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/ExternalSymbol.html#isInterface:Boolean", "kind" : "def"}, {"label" : "isModule", "tail" : "(): Boolean", "member" : "scala.tools.scalap.scalax.rules.scalasig.Flags.isModule", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/ExternalSymbol.html#isModule:Boolean", "kind" : "def"}, {"label" : "isMethod", "tail" : "(): Boolean", "member" : "scala.tools.scalap.scalax.rules.scalasig.Flags.isMethod", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/ExternalSymbol.html#isMethod:Boolean", "kind" : "def"}, {"label" : "isDeferred", "tail" : "(): Boolean", "member" : "scala.tools.scalap.scalax.rules.scalasig.Flags.isDeferred", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/ExternalSymbol.html#isDeferred:Boolean", "kind" : "def"}, {"label" : "isAbstract", "tail" : "(): Boolean", "member" : "scala.tools.scalap.scalax.rules.scalasig.Flags.isAbstract", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/ExternalSymbol.html#isAbstract:Boolean", "kind" : "def"}, {"label" : "isCase", "tail" : "(): Boolean", "member" : "scala.tools.scalap.scalax.rules.scalasig.Flags.isCase", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/ExternalSymbol.html#isCase:Boolean", "kind" : "def"}, {"label" : "isOverride", "tail" : "(): Boolean", "member" : "scala.tools.scalap.scalax.rules.scalasig.Flags.isOverride", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/ExternalSymbol.html#isOverride:Boolean", "kind" : "def"}, {"label" : "isSealed", "tail" : "(): Boolean", "member" : "scala.tools.scalap.scalax.rules.scalasig.Flags.isSealed", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/ExternalSymbol.html#isSealed:Boolean", "kind" : "def"}, {"label" : "isProtected", "tail" : "(): Boolean", "member" : "scala.tools.scalap.scalax.rules.scalasig.Flags.isProtected", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/ExternalSymbol.html#isProtected:Boolean", "kind" : "def"}, {"label" : "isPrivate", "tail" : "(): Boolean", "member" : "scala.tools.scalap.scalax.rules.scalasig.Flags.isPrivate", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/ExternalSymbol.html#isPrivate:Boolean", "kind" : "def"}, {"label" : "isFinal", "tail" : "(): Boolean", "member" : "scala.tools.scalap.scalax.rules.scalasig.Flags.isFinal", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/ExternalSymbol.html#isFinal:Boolean", "kind" : "def"}, {"label" : "isImplicit", "tail" : "(): Boolean", "member" : "scala.tools.scalap.scalax.rules.scalasig.Flags.isImplicit", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/ExternalSymbol.html#isImplicit:Boolean", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/ExternalSymbol.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/ExternalSymbol.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/ExternalSymbol.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/ExternalSymbol.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/ExternalSymbol.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/ExternalSymbol.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/ExternalSymbol.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/ExternalSymbol.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/ExternalSymbol.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/ExternalSymbol.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/ExternalSymbol.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/ExternalSymbol.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/ExternalSymbol.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/ExternalSymbol.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/ExternalSymbol.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/ExternalSymbol.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/ExternalSymbol.html", "kind" : "case class"}, {"name" : "scala.tools.scalap.scalax.rules.scalasig.Field", "shortDescription" : "", "members_case class" : [{"label" : "+", "tail" : "(other: String): String", "member" : "scala.Predef.any2stringadd.+", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/Field.html#+(other:String):String", "kind" : "def"}, {"label" : "formatted", "tail" : "(fmtstr: String): String", "member" : "scala.Predef.StringFormat.formatted", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/Field.html#formatted(fmtstr:String):String", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: (Field) => Boolean, msg: => Any): Field", "member" : "scala.Predef.Ensuring.ensuring", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/Field.html#ensuring(cond:A=>Boolean,msg:=>Any):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: (Field) => Boolean): Field", "member" : "scala.Predef.Ensuring.ensuring", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/Field.html#ensuring(cond:A=>Boolean):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: Boolean, msg: => Any): Field", "member" : "scala.Predef.Ensuring.ensuring", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/Field.html#ensuring(cond:Boolean,msg:=>Any):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: Boolean): Field", "member" : "scala.Predef.Ensuring.ensuring", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/Field.html#ensuring(cond:Boolean):A", "kind" : "def"}, {"label" : "→", "tail" : "(y: B): (Field, B)", "member" : "scala.Predef.ArrowAssoc.→", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/Field.html#→[B](y:B):(A,B)", "kind" : "def"}, {"label" : "->", "tail" : "(y: B): (Field, B)", "member" : "scala.Predef.ArrowAssoc.->", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/Field.html#->[B](y:B):(A,B)", "kind" : "def"}, {"member" : "scala.tools.scalap.scalax.rules.scalasig.Field#<init>", "error" : "unsupported entity"}, {"label" : "attributes", "tail" : ": Seq[Attribute]", "member" : "scala.tools.scalap.scalax.rules.scalasig.Field.attributes", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/Field.html#attributes:Seq[scala.tools.scalap.scalax.rules.scalasig.Attribute]", "kind" : "val"}, {"label" : "descriptorIndex", "tail" : ": Int", "member" : "scala.tools.scalap.scalax.rules.scalasig.Field.descriptorIndex", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/Field.html#descriptorIndex:Int", "kind" : "val"}, {"label" : "nameIndex", "tail" : ": Int", "member" : "scala.tools.scalap.scalax.rules.scalasig.Field.nameIndex", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/Field.html#nameIndex:Int", "kind" : "val"}, {"label" : "flags", "tail" : ": Int", "member" : "scala.tools.scalap.scalax.rules.scalasig.Field.flags", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/Field.html#flags:Int", "kind" : "val"}, {"label" : "productElementNames", "tail" : "(): Iterator[String]", "member" : "scala.Product.productElementNames", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/Field.html#productElementNames:Iterator[String]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/Field.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/Field.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/Field.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/Field.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/Field.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/Field.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/Field.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/Field.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/Field.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/Field.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/Field.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/Field.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/Field.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/Field.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/Field.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/Field.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/Field.html", "kind" : "case class"}, {"name" : "scala.tools.scalap.scalax.rules.scalasig.Flags", "trait" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/Flags.html", "kind" : "trait", "members_trait" : [{"label" : "+", "tail" : "(other: String): String", "member" : "scala.Predef.any2stringadd.+", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/Flags.html#+(other:String):String", "kind" : "def"}, {"label" : "formatted", "tail" : "(fmtstr: String): String", "member" : "scala.Predef.StringFormat.formatted", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/Flags.html#formatted(fmtstr:String):String", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: (Flags) => Boolean, msg: => Any): Flags", "member" : "scala.Predef.Ensuring.ensuring", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/Flags.html#ensuring(cond:A=>Boolean,msg:=>Any):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: (Flags) => Boolean): Flags", "member" : "scala.Predef.Ensuring.ensuring", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/Flags.html#ensuring(cond:A=>Boolean):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: Boolean, msg: => Any): Flags", "member" : "scala.Predef.Ensuring.ensuring", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/Flags.html#ensuring(cond:Boolean,msg:=>Any):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: Boolean): Flags", "member" : "scala.Predef.Ensuring.ensuring", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/Flags.html#ensuring(cond:Boolean):A", "kind" : "def"}, {"label" : "→", "tail" : "(y: B): (Flags, B)", "member" : "scala.Predef.ArrowAssoc.→", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/Flags.html#→[B](y:B):(A,B)", "kind" : "def"}, {"label" : "->", "tail" : "(y: B): (Flags, B)", "member" : "scala.Predef.ArrowAssoc.->", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/Flags.html#->[B](y:B):(A,B)", "kind" : "def"}, {"label" : "isPreSuper", "tail" : "(): Boolean", "member" : "scala.tools.scalap.scalax.rules.scalasig.Flags.isPreSuper", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/Flags.html#isPreSuper:Boolean", "kind" : "def"}, {"label" : "isImplementationClass", "tail" : "(): Boolean", "member" : "scala.tools.scalap.scalax.rules.scalasig.Flags.isImplementationClass", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/Flags.html#isImplementationClass:Boolean", "kind" : "def"}, {"label" : "isExpandedName", "tail" : "(): Boolean", "member" : "scala.tools.scalap.scalax.rules.scalasig.Flags.isExpandedName", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/Flags.html#isExpandedName:Boolean", "kind" : "def"}, {"label" : "isExistential", "tail" : "(): Boolean", "member" : "scala.tools.scalap.scalax.rules.scalasig.Flags.isExistential", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/Flags.html#isExistential:Boolean", "kind" : "def"}, {"label" : "isMixedIn", "tail" : "(): Boolean", "member" : "scala.tools.scalap.scalax.rules.scalasig.Flags.isMixedIn", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/Flags.html#isMixedIn:Boolean", "kind" : "def"}, {"label" : "isLifted", "tail" : "(): Boolean", "member" : "scala.tools.scalap.scalax.rules.scalasig.Flags.isLifted", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/Flags.html#isLifted:Boolean", "kind" : "def"}, {"label" : "isOverloaded", "tail" : "(): Boolean", "member" : "scala.tools.scalap.scalax.rules.scalasig.Flags.isOverloaded", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/Flags.html#isOverloaded:Boolean", "kind" : "def"}, {"label" : "isError", "tail" : "(): Boolean", "member" : "scala.tools.scalap.scalax.rules.scalasig.Flags.isError", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/Flags.html#isError:Boolean", "kind" : "def"}, {"label" : "isLazy", "tail" : "(): Boolean", "member" : "scala.tools.scalap.scalax.rules.scalasig.Flags.isLazy", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/Flags.html#isLazy:Boolean", "kind" : "def"}, {"label" : "isMonomorphic", "tail" : "(): Boolean", "member" : "scala.tools.scalap.scalax.rules.scalasig.Flags.isMonomorphic", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/Flags.html#isMonomorphic:Boolean", "kind" : "def"}, {"label" : "isModuleVar", "tail" : "(): Boolean", "member" : "scala.tools.scalap.scalax.rules.scalasig.Flags.isModuleVar", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/Flags.html#isModuleVar:Boolean", "kind" : "def"}, {"label" : "isParamAccessor", "tail" : "(): Boolean", "member" : "scala.tools.scalap.scalax.rules.scalasig.Flags.isParamAccessor", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/Flags.html#isParamAccessor:Boolean", "kind" : "def"}, {"label" : "isSuperAccessor", "tail" : "(): Boolean", "member" : "scala.tools.scalap.scalax.rules.scalasig.Flags.isSuperAccessor", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/Flags.html#isSuperAccessor:Boolean", "kind" : "def"}, {"label" : "isAccessor", "tail" : "(): Boolean", "member" : "scala.tools.scalap.scalax.rules.scalasig.Flags.isAccessor", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/Flags.html#isAccessor:Boolean", "kind" : "def"}, {"label" : "isBridge", "tail" : "(): Boolean", "member" : "scala.tools.scalap.scalax.rules.scalasig.Flags.isBridge", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/Flags.html#isBridge:Boolean", "kind" : "def"}, {"label" : "isTrait", "tail" : "(): Boolean", "member" : "scala.tools.scalap.scalax.rules.scalasig.Flags.isTrait", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/Flags.html#isTrait:Boolean", "kind" : "def"}, {"label" : "isCaseAccessor", "tail" : "(): Boolean", "member" : "scala.tools.scalap.scalax.rules.scalasig.Flags.isCaseAccessor", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/Flags.html#isCaseAccessor:Boolean", "kind" : "def"}, {"label" : "isStatic", "tail" : "(): Boolean", "member" : "scala.tools.scalap.scalax.rules.scalasig.Flags.isStatic", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/Flags.html#isStatic:Boolean", "kind" : "def"}, {"label" : "isStable", "tail" : "(): Boolean", "member" : "scala.tools.scalap.scalax.rules.scalasig.Flags.isStable", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/Flags.html#isStable:Boolean", "kind" : "def"}, {"label" : "isSynthetic", "tail" : "(): Boolean", "member" : "scala.tools.scalap.scalax.rules.scalasig.Flags.isSynthetic", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/Flags.html#isSynthetic:Boolean", "kind" : "def"}, {"label" : "isJava", "tail" : "(): Boolean", "member" : "scala.tools.scalap.scalax.rules.scalasig.Flags.isJava", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/Flags.html#isJava:Boolean", "kind" : "def"}, {"label" : "isLocal", "tail" : "(): Boolean", "member" : "scala.tools.scalap.scalax.rules.scalasig.Flags.isLocal", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/Flags.html#isLocal:Boolean", "kind" : "def"}, {"label" : "isAbstractOverride", "tail" : "(): Boolean", "member" : "scala.tools.scalap.scalax.rules.scalasig.Flags.isAbstractOverride", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/Flags.html#isAbstractOverride:Boolean", "kind" : "def"}, {"label" : "isInConstructor", "tail" : "(): Boolean", "member" : "scala.tools.scalap.scalax.rules.scalasig.Flags.isInConstructor", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/Flags.html#isInConstructor:Boolean", "kind" : "def"}, {"label" : "isLabel", "tail" : "(): Boolean", "member" : "scala.tools.scalap.scalax.rules.scalasig.Flags.isLabel", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/Flags.html#isLabel:Boolean", "kind" : "def"}, {"label" : "isContravariant", "tail" : "(): Boolean", "member" : "scala.tools.scalap.scalax.rules.scalasig.Flags.isContravariant", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/Flags.html#isContravariant:Boolean", "kind" : "def"}, {"label" : "isByNameParam", "tail" : "(): Boolean", "member" : "scala.tools.scalap.scalax.rules.scalasig.Flags.isByNameParam", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/Flags.html#isByNameParam:Boolean", "kind" : "def"}, {"label" : "isCaptured", "tail" : "(): Boolean", "member" : "scala.tools.scalap.scalax.rules.scalasig.Flags.isCaptured", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/Flags.html#isCaptured:Boolean", "kind" : "def"}, {"label" : "isCovariant", "tail" : "(): Boolean", "member" : "scala.tools.scalap.scalax.rules.scalasig.Flags.isCovariant", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/Flags.html#isCovariant:Boolean", "kind" : "def"}, {"label" : "isDeprecated", "tail" : "(): Boolean", "member" : "scala.tools.scalap.scalax.rules.scalasig.Flags.isDeprecated", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/Flags.html#isDeprecated:Boolean", "kind" : "def"}, {"label" : "isPackage", "tail" : "(): Boolean", "member" : "scala.tools.scalap.scalax.rules.scalasig.Flags.isPackage", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/Flags.html#isPackage:Boolean", "kind" : "def"}, {"label" : "isParam", "tail" : "(): Boolean", "member" : "scala.tools.scalap.scalax.rules.scalasig.Flags.isParam", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/Flags.html#isParam:Boolean", "kind" : "def"}, {"label" : "isMutable", "tail" : "(): Boolean", "member" : "scala.tools.scalap.scalax.rules.scalasig.Flags.isMutable", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/Flags.html#isMutable:Boolean", "kind" : "def"}, {"label" : "isInterface", "tail" : "(): Boolean", "member" : "scala.tools.scalap.scalax.rules.scalasig.Flags.isInterface", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/Flags.html#isInterface:Boolean", "kind" : "def"}, {"label" : "isModule", "tail" : "(): Boolean", "member" : "scala.tools.scalap.scalax.rules.scalasig.Flags.isModule", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/Flags.html#isModule:Boolean", "kind" : "def"}, {"label" : "isMethod", "tail" : "(): Boolean", "member" : "scala.tools.scalap.scalax.rules.scalasig.Flags.isMethod", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/Flags.html#isMethod:Boolean", "kind" : "def"}, {"label" : "isDeferred", "tail" : "(): Boolean", "member" : "scala.tools.scalap.scalax.rules.scalasig.Flags.isDeferred", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/Flags.html#isDeferred:Boolean", "kind" : "def"}, {"label" : "isAbstract", "tail" : "(): Boolean", "member" : "scala.tools.scalap.scalax.rules.scalasig.Flags.isAbstract", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/Flags.html#isAbstract:Boolean", "kind" : "def"}, {"label" : "isCase", "tail" : "(): Boolean", "member" : "scala.tools.scalap.scalax.rules.scalasig.Flags.isCase", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/Flags.html#isCase:Boolean", "kind" : "def"}, {"label" : "isOverride", "tail" : "(): Boolean", "member" : "scala.tools.scalap.scalax.rules.scalasig.Flags.isOverride", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/Flags.html#isOverride:Boolean", "kind" : "def"}, {"label" : "isSealed", "tail" : "(): Boolean", "member" : "scala.tools.scalap.scalax.rules.scalasig.Flags.isSealed", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/Flags.html#isSealed:Boolean", "kind" : "def"}, {"label" : "isProtected", "tail" : "(): Boolean", "member" : "scala.tools.scalap.scalax.rules.scalasig.Flags.isProtected", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/Flags.html#isProtected:Boolean", "kind" : "def"}, {"label" : "isPrivate", "tail" : "(): Boolean", "member" : "scala.tools.scalap.scalax.rules.scalasig.Flags.isPrivate", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/Flags.html#isPrivate:Boolean", "kind" : "def"}, {"label" : "isFinal", "tail" : "(): Boolean", "member" : "scala.tools.scalap.scalax.rules.scalasig.Flags.isFinal", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/Flags.html#isFinal:Boolean", "kind" : "def"}, {"label" : "isImplicit", "tail" : "(): Boolean", "member" : "scala.tools.scalap.scalax.rules.scalasig.Flags.isImplicit", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/Flags.html#isImplicit:Boolean", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/Flags.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/Flags.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/Flags.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/Flags.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/Flags.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/Flags.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/Flags.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/Flags.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/Flags.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/Flags.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/Flags.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/Flags.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/Flags.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/Flags.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/Flags.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/Flags.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/Flags.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/Flags.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/Flags.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "hasFlag", "tail" : "(flag: Long): Boolean", "member" : "scala.tools.scalap.scalax.rules.scalasig.Flags.hasFlag", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/Flags.html#hasFlag(flag:Long):Boolean", "kind" : "abstract def"}], "shortDescription" : ""}, {"name" : "scala.tools.scalap.scalax.rules.scalasig.Method", "shortDescription" : "", "members_case class" : [{"label" : "+", "tail" : "(other: String): String", "member" : "scala.Predef.any2stringadd.+", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/Method.html#+(other:String):String", "kind" : "def"}, {"label" : "formatted", "tail" : "(fmtstr: String): String", "member" : "scala.Predef.StringFormat.formatted", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/Method.html#formatted(fmtstr:String):String", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: (Method) => Boolean, msg: => Any): Method", "member" : "scala.Predef.Ensuring.ensuring", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/Method.html#ensuring(cond:A=>Boolean,msg:=>Any):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: (Method) => Boolean): Method", "member" : "scala.Predef.Ensuring.ensuring", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/Method.html#ensuring(cond:A=>Boolean):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: Boolean, msg: => Any): Method", "member" : "scala.Predef.Ensuring.ensuring", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/Method.html#ensuring(cond:Boolean,msg:=>Any):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: Boolean): Method", "member" : "scala.Predef.Ensuring.ensuring", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/Method.html#ensuring(cond:Boolean):A", "kind" : "def"}, {"label" : "→", "tail" : "(y: B): (Method, B)", "member" : "scala.Predef.ArrowAssoc.→", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/Method.html#→[B](y:B):(A,B)", "kind" : "def"}, {"label" : "->", "tail" : "(y: B): (Method, B)", "member" : "scala.Predef.ArrowAssoc.->", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/Method.html#->[B](y:B):(A,B)", "kind" : "def"}, {"member" : "scala.tools.scalap.scalax.rules.scalasig.Method#<init>", "error" : "unsupported entity"}, {"label" : "attributes", "tail" : ": Seq[Attribute]", "member" : "scala.tools.scalap.scalax.rules.scalasig.Method.attributes", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/Method.html#attributes:Seq[scala.tools.scalap.scalax.rules.scalasig.Attribute]", "kind" : "val"}, {"label" : "descriptorIndex", "tail" : ": Int", "member" : "scala.tools.scalap.scalax.rules.scalasig.Method.descriptorIndex", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/Method.html#descriptorIndex:Int", "kind" : "val"}, {"label" : "nameIndex", "tail" : ": Int", "member" : "scala.tools.scalap.scalax.rules.scalasig.Method.nameIndex", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/Method.html#nameIndex:Int", "kind" : "val"}, {"label" : "flags", "tail" : ": Int", "member" : "scala.tools.scalap.scalax.rules.scalasig.Method.flags", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/Method.html#flags:Int", "kind" : "val"}, {"label" : "productElementNames", "tail" : "(): Iterator[String]", "member" : "scala.Product.productElementNames", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/Method.html#productElementNames:Iterator[String]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/Method.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/Method.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/Method.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/Method.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/Method.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/Method.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/Method.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/Method.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/Method.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/Method.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/Method.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/Method.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/Method.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/Method.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/Method.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/Method.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/Method.html", "kind" : "case class"}, {"name" : "scala.tools.scalap.scalax.rules.scalasig.MethodSymbol", "shortDescription" : "", "members_case class" : [{"label" : "+", "tail" : "(other: String): String", "member" : "scala.Predef.any2stringadd.+", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/MethodSymbol.html#+(other:String):String", "kind" : "def"}, {"label" : "formatted", "tail" : "(fmtstr: String): String", "member" : "scala.Predef.StringFormat.formatted", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/MethodSymbol.html#formatted(fmtstr:String):String", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: (MethodSymbol) => Boolean, msg: => Any): MethodSymbol", "member" : "scala.Predef.Ensuring.ensuring", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/MethodSymbol.html#ensuring(cond:A=>Boolean,msg:=>Any):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: (MethodSymbol) => Boolean): MethodSymbol", "member" : "scala.Predef.Ensuring.ensuring", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/MethodSymbol.html#ensuring(cond:A=>Boolean):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: Boolean, msg: => Any): MethodSymbol", "member" : "scala.Predef.Ensuring.ensuring", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/MethodSymbol.html#ensuring(cond:Boolean,msg:=>Any):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: Boolean): MethodSymbol", "member" : "scala.Predef.Ensuring.ensuring", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/MethodSymbol.html#ensuring(cond:Boolean):A", "kind" : "def"}, {"label" : "→", "tail" : "(y: B): (MethodSymbol, B)", "member" : "scala.Predef.ArrowAssoc.→", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/MethodSymbol.html#→[B](y:B):(A,B)", "kind" : "def"}, {"label" : "->", "tail" : "(y: B): (MethodSymbol, B)", "member" : "scala.Predef.ArrowAssoc.->", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/MethodSymbol.html#->[B](y:B):(A,B)", "kind" : "def"}, {"member" : "scala.tools.scalap.scalax.rules.scalasig.MethodSymbol#<init>", "error" : "unsupported entity"}, {"label" : "aliasRef", "tail" : ": Option[Int]", "member" : "scala.tools.scalap.scalax.rules.scalasig.MethodSymbol.aliasRef", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/MethodSymbol.html#aliasRef:Option[Int]", "kind" : "val"}, {"label" : "symbolInfo", "tail" : ": SymbolInfo", "member" : "scala.tools.scalap.scalax.rules.scalasig.MethodSymbol.symbolInfo", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/MethodSymbol.html#symbolInfo:scala.tools.scalap.scalax.rules.scalasig.SymbolInfo", "kind" : "val"}, {"label" : "productElementNames", "tail" : "(): Iterator[String]", "member" : "scala.Product.productElementNames", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/MethodSymbol.html#productElementNames:Iterator[String]", "kind" : "def"}, {"label" : "infoType", "tail" : ": Type", "member" : "scala.tools.scalap.scalax.rules.scalasig.SymbolInfoSymbol.infoType", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/MethodSymbol.html#infoType:scala.tools.scalap.scalax.rules.scalasig.Type", "kind" : "lazy val"}, {"label" : "hasFlag", "tail" : "(flag: Long): Boolean", "member" : "scala.tools.scalap.scalax.rules.scalasig.SymbolInfoSymbol.hasFlag", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/MethodSymbol.html#hasFlag(flag:Long):Boolean", "kind" : "def"}, {"label" : "parent", "tail" : "(): Some[Symbol]", "member" : "scala.tools.scalap.scalax.rules.scalasig.SymbolInfoSymbol.parent", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/MethodSymbol.html#parent:Some[scala.tools.scalap.scalax.rules.scalasig.Symbol]", "kind" : "def"}, {"label" : "name", "tail" : "(): String", "member" : "scala.tools.scalap.scalax.rules.scalasig.SymbolInfoSymbol.name", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/MethodSymbol.html#name:String", "kind" : "def"}, {"label" : "entry", "tail" : "(): Entry", "member" : "scala.tools.scalap.scalax.rules.scalasig.SymbolInfoSymbol.entry", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/MethodSymbol.html#entry:scala.tools.scalap.scalax.rules.scalasig.ScalaSig#Entry", "kind" : "def"}, {"label" : "attributes", "tail" : ": Seq[AttributeInfo]", "member" : "scala.tools.scalap.scalax.rules.scalasig.ScalaSigSymbol.attributes", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/MethodSymbol.html#attributes:Seq[scala.tools.scalap.scalax.rules.scalasig.AttributeInfo]", "kind" : "lazy val"}, {"label" : "children", "tail" : ": Seq[Symbol]", "member" : "scala.tools.scalap.scalax.rules.scalasig.ScalaSigSymbol.children", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/MethodSymbol.html#children:Seq[scala.tools.scalap.scalax.rules.scalasig.Symbol]", "kind" : "lazy val"}, {"label" : "index", "tail" : "(): Int", "member" : "scala.tools.scalap.scalax.rules.scalasig.ScalaSigSymbol.index", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/MethodSymbol.html#index:Int", "kind" : "def"}, {"label" : "applyScalaSigRule", "tail" : "(rule: Parser[A]): A", "member" : "scala.tools.scalap.scalax.rules.scalasig.ScalaSigSymbol.applyScalaSigRule", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/MethodSymbol.html#applyScalaSigRule[A](rule:scala.tools.scalap.scalax.rules.scalasig.ScalaSigParsers.Parser[A]):A", "kind" : "def"}, {"label" : "applyRule", "tail" : "(rule: EntryParser[A]): A", "member" : "scala.tools.scalap.scalax.rules.scalasig.ScalaSigSymbol.applyRule", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/MethodSymbol.html#applyRule[A](rule:scala.tools.scalap.scalax.rules.scalasig.ScalaSigEntryParsers.EntryParser[A]):A", "kind" : "def"}, {"label" : "path", "tail" : "(): String", "member" : "scala.tools.scalap.scalax.rules.scalasig.Symbol.path", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/MethodSymbol.html#path:String", "kind" : "def"}, {"label" : "isPreSuper", "tail" : "(): Boolean", "member" : "scala.tools.scalap.scalax.rules.scalasig.Flags.isPreSuper", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/MethodSymbol.html#isPreSuper:Boolean", "kind" : "def"}, {"label" : "isImplementationClass", "tail" : "(): Boolean", "member" : "scala.tools.scalap.scalax.rules.scalasig.Flags.isImplementationClass", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/MethodSymbol.html#isImplementationClass:Boolean", "kind" : "def"}, {"label" : "isExpandedName", "tail" : "(): Boolean", "member" : "scala.tools.scalap.scalax.rules.scalasig.Flags.isExpandedName", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/MethodSymbol.html#isExpandedName:Boolean", "kind" : "def"}, {"label" : "isExistential", "tail" : "(): Boolean", "member" : "scala.tools.scalap.scalax.rules.scalasig.Flags.isExistential", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/MethodSymbol.html#isExistential:Boolean", "kind" : "def"}, {"label" : "isMixedIn", "tail" : "(): Boolean", "member" : "scala.tools.scalap.scalax.rules.scalasig.Flags.isMixedIn", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/MethodSymbol.html#isMixedIn:Boolean", "kind" : "def"}, {"label" : "isLifted", "tail" : "(): Boolean", "member" : "scala.tools.scalap.scalax.rules.scalasig.Flags.isLifted", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/MethodSymbol.html#isLifted:Boolean", "kind" : "def"}, {"label" : "isOverloaded", "tail" : "(): Boolean", "member" : "scala.tools.scalap.scalax.rules.scalasig.Flags.isOverloaded", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/MethodSymbol.html#isOverloaded:Boolean", "kind" : "def"}, {"label" : "isError", "tail" : "(): Boolean", "member" : "scala.tools.scalap.scalax.rules.scalasig.Flags.isError", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/MethodSymbol.html#isError:Boolean", "kind" : "def"}, {"label" : "isLazy", "tail" : "(): Boolean", "member" : "scala.tools.scalap.scalax.rules.scalasig.Flags.isLazy", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/MethodSymbol.html#isLazy:Boolean", "kind" : "def"}, {"label" : "isMonomorphic", "tail" : "(): Boolean", "member" : "scala.tools.scalap.scalax.rules.scalasig.Flags.isMonomorphic", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/MethodSymbol.html#isMonomorphic:Boolean", "kind" : "def"}, {"label" : "isModuleVar", "tail" : "(): Boolean", "member" : "scala.tools.scalap.scalax.rules.scalasig.Flags.isModuleVar", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/MethodSymbol.html#isModuleVar:Boolean", "kind" : "def"}, {"label" : "isParamAccessor", "tail" : "(): Boolean", "member" : "scala.tools.scalap.scalax.rules.scalasig.Flags.isParamAccessor", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/MethodSymbol.html#isParamAccessor:Boolean", "kind" : "def"}, {"label" : "isSuperAccessor", "tail" : "(): Boolean", "member" : "scala.tools.scalap.scalax.rules.scalasig.Flags.isSuperAccessor", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/MethodSymbol.html#isSuperAccessor:Boolean", "kind" : "def"}, {"label" : "isAccessor", "tail" : "(): Boolean", "member" : "scala.tools.scalap.scalax.rules.scalasig.Flags.isAccessor", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/MethodSymbol.html#isAccessor:Boolean", "kind" : "def"}, {"label" : "isBridge", "tail" : "(): Boolean", "member" : "scala.tools.scalap.scalax.rules.scalasig.Flags.isBridge", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/MethodSymbol.html#isBridge:Boolean", "kind" : "def"}, {"label" : "isTrait", "tail" : "(): Boolean", "member" : "scala.tools.scalap.scalax.rules.scalasig.Flags.isTrait", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/MethodSymbol.html#isTrait:Boolean", "kind" : "def"}, {"label" : "isCaseAccessor", "tail" : "(): Boolean", "member" : "scala.tools.scalap.scalax.rules.scalasig.Flags.isCaseAccessor", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/MethodSymbol.html#isCaseAccessor:Boolean", "kind" : "def"}, {"label" : "isStatic", "tail" : "(): Boolean", "member" : "scala.tools.scalap.scalax.rules.scalasig.Flags.isStatic", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/MethodSymbol.html#isStatic:Boolean", "kind" : "def"}, {"label" : "isStable", "tail" : "(): Boolean", "member" : "scala.tools.scalap.scalax.rules.scalasig.Flags.isStable", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/MethodSymbol.html#isStable:Boolean", "kind" : "def"}, {"label" : "isSynthetic", "tail" : "(): Boolean", "member" : "scala.tools.scalap.scalax.rules.scalasig.Flags.isSynthetic", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/MethodSymbol.html#isSynthetic:Boolean", "kind" : "def"}, {"label" : "isJava", "tail" : "(): Boolean", "member" : "scala.tools.scalap.scalax.rules.scalasig.Flags.isJava", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/MethodSymbol.html#isJava:Boolean", "kind" : "def"}, {"label" : "isLocal", "tail" : "(): Boolean", "member" : "scala.tools.scalap.scalax.rules.scalasig.Flags.isLocal", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/MethodSymbol.html#isLocal:Boolean", "kind" : "def"}, {"label" : "isAbstractOverride", "tail" : "(): Boolean", "member" : "scala.tools.scalap.scalax.rules.scalasig.Flags.isAbstractOverride", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/MethodSymbol.html#isAbstractOverride:Boolean", "kind" : "def"}, {"label" : "isInConstructor", "tail" : "(): Boolean", "member" : "scala.tools.scalap.scalax.rules.scalasig.Flags.isInConstructor", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/MethodSymbol.html#isInConstructor:Boolean", "kind" : "def"}, {"label" : "isLabel", "tail" : "(): Boolean", "member" : "scala.tools.scalap.scalax.rules.scalasig.Flags.isLabel", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/MethodSymbol.html#isLabel:Boolean", "kind" : "def"}, {"label" : "isContravariant", "tail" : "(): Boolean", "member" : "scala.tools.scalap.scalax.rules.scalasig.Flags.isContravariant", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/MethodSymbol.html#isContravariant:Boolean", "kind" : "def"}, {"label" : "isByNameParam", "tail" : "(): Boolean", "member" : "scala.tools.scalap.scalax.rules.scalasig.Flags.isByNameParam", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/MethodSymbol.html#isByNameParam:Boolean", "kind" : "def"}, {"label" : "isCaptured", "tail" : "(): Boolean", "member" : "scala.tools.scalap.scalax.rules.scalasig.Flags.isCaptured", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/MethodSymbol.html#isCaptured:Boolean", "kind" : "def"}, {"label" : "isCovariant", "tail" : "(): Boolean", "member" : "scala.tools.scalap.scalax.rules.scalasig.Flags.isCovariant", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/MethodSymbol.html#isCovariant:Boolean", "kind" : "def"}, {"label" : "isDeprecated", "tail" : "(): Boolean", "member" : "scala.tools.scalap.scalax.rules.scalasig.Flags.isDeprecated", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/MethodSymbol.html#isDeprecated:Boolean", "kind" : "def"}, {"label" : "isPackage", "tail" : "(): Boolean", "member" : "scala.tools.scalap.scalax.rules.scalasig.Flags.isPackage", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/MethodSymbol.html#isPackage:Boolean", "kind" : "def"}, {"label" : "isParam", "tail" : "(): Boolean", "member" : "scala.tools.scalap.scalax.rules.scalasig.Flags.isParam", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/MethodSymbol.html#isParam:Boolean", "kind" : "def"}, {"label" : "isMutable", "tail" : "(): Boolean", "member" : "scala.tools.scalap.scalax.rules.scalasig.Flags.isMutable", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/MethodSymbol.html#isMutable:Boolean", "kind" : "def"}, {"label" : "isInterface", "tail" : "(): Boolean", "member" : "scala.tools.scalap.scalax.rules.scalasig.Flags.isInterface", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/MethodSymbol.html#isInterface:Boolean", "kind" : "def"}, {"label" : "isModule", "tail" : "(): Boolean", "member" : "scala.tools.scalap.scalax.rules.scalasig.Flags.isModule", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/MethodSymbol.html#isModule:Boolean", "kind" : "def"}, {"label" : "isMethod", "tail" : "(): Boolean", "member" : "scala.tools.scalap.scalax.rules.scalasig.Flags.isMethod", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/MethodSymbol.html#isMethod:Boolean", "kind" : "def"}, {"label" : "isDeferred", "tail" : "(): Boolean", "member" : "scala.tools.scalap.scalax.rules.scalasig.Flags.isDeferred", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/MethodSymbol.html#isDeferred:Boolean", "kind" : "def"}, {"label" : "isAbstract", "tail" : "(): Boolean", "member" : "scala.tools.scalap.scalax.rules.scalasig.Flags.isAbstract", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/MethodSymbol.html#isAbstract:Boolean", "kind" : "def"}, {"label" : "isCase", "tail" : "(): Boolean", "member" : "scala.tools.scalap.scalax.rules.scalasig.Flags.isCase", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/MethodSymbol.html#isCase:Boolean", "kind" : "def"}, {"label" : "isOverride", "tail" : "(): Boolean", "member" : "scala.tools.scalap.scalax.rules.scalasig.Flags.isOverride", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/MethodSymbol.html#isOverride:Boolean", "kind" : "def"}, {"label" : "isSealed", "tail" : "(): Boolean", "member" : "scala.tools.scalap.scalax.rules.scalasig.Flags.isSealed", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/MethodSymbol.html#isSealed:Boolean", "kind" : "def"}, {"label" : "isProtected", "tail" : "(): Boolean", "member" : "scala.tools.scalap.scalax.rules.scalasig.Flags.isProtected", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/MethodSymbol.html#isProtected:Boolean", "kind" : "def"}, {"label" : "isPrivate", "tail" : "(): Boolean", "member" : "scala.tools.scalap.scalax.rules.scalasig.Flags.isPrivate", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/MethodSymbol.html#isPrivate:Boolean", "kind" : "def"}, {"label" : "isFinal", "tail" : "(): Boolean", "member" : "scala.tools.scalap.scalax.rules.scalasig.Flags.isFinal", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/MethodSymbol.html#isFinal:Boolean", "kind" : "def"}, {"label" : "isImplicit", "tail" : "(): Boolean", "member" : "scala.tools.scalap.scalax.rules.scalasig.Flags.isImplicit", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/MethodSymbol.html#isImplicit:Boolean", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/MethodSymbol.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/MethodSymbol.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/MethodSymbol.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/MethodSymbol.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/MethodSymbol.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/MethodSymbol.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/MethodSymbol.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/MethodSymbol.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/MethodSymbol.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/MethodSymbol.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/MethodSymbol.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/MethodSymbol.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/MethodSymbol.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/MethodSymbol.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/MethodSymbol.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/MethodSymbol.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/MethodSymbol.html", "kind" : "case class"}, {"name" : "scala.tools.scalap.scalax.rules.scalasig.MethodType", "shortDescription" : "", "members_case class" : [{"label" : "+", "tail" : "(other: String): String", "member" : "scala.Predef.any2stringadd.+", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/MethodType.html#+(other:String):String", "kind" : "def"}, {"label" : "formatted", "tail" : "(fmtstr: String): String", "member" : "scala.Predef.StringFormat.formatted", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/MethodType.html#formatted(fmtstr:String):String", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: (MethodType) => Boolean, msg: => Any): MethodType", "member" : "scala.Predef.Ensuring.ensuring", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/MethodType.html#ensuring(cond:A=>Boolean,msg:=>Any):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: (MethodType) => Boolean): MethodType", "member" : "scala.Predef.Ensuring.ensuring", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/MethodType.html#ensuring(cond:A=>Boolean):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: Boolean, msg: => Any): MethodType", "member" : "scala.Predef.Ensuring.ensuring", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/MethodType.html#ensuring(cond:Boolean,msg:=>Any):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: Boolean): MethodType", "member" : "scala.Predef.Ensuring.ensuring", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/MethodType.html#ensuring(cond:Boolean):A", "kind" : "def"}, {"label" : "→", "tail" : "(y: B): (MethodType, B)", "member" : "scala.Predef.ArrowAssoc.→", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/MethodType.html#→[B](y:B):(A,B)", "kind" : "def"}, {"label" : "->", "tail" : "(y: B): (MethodType, B)", "member" : "scala.Predef.ArrowAssoc.->", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/MethodType.html#->[B](y:B):(A,B)", "kind" : "def"}, {"member" : "scala.tools.scalap.scalax.rules.scalasig.MethodType#<init>", "error" : "unsupported entity"}, {"label" : "paramSymbols", "tail" : ": Seq[Symbol]", "member" : "scala.tools.scalap.scalax.rules.scalasig.MethodType.paramSymbols", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/MethodType.html#paramSymbols:Seq[scala.tools.scalap.scalax.rules.scalasig.Symbol]", "kind" : "val"}, {"label" : "resultType", "tail" : ": Type", "member" : "scala.tools.scalap.scalax.rules.scalasig.MethodType.resultType", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/MethodType.html#resultType:scala.tools.scalap.scalax.rules.scalasig.Type", "kind" : "val"}, {"label" : "productElementNames", "tail" : "(): Iterator[String]", "member" : "scala.Product.productElementNames", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/MethodType.html#productElementNames:Iterator[String]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/MethodType.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/MethodType.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/MethodType.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/MethodType.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/MethodType.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/MethodType.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/MethodType.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/MethodType.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/MethodType.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/MethodType.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/MethodType.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/MethodType.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/MethodType.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/MethodType.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/MethodType.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/MethodType.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/MethodType.html", "kind" : "case class"}, {"name" : "scala.tools.scalap.scalax.rules.scalasig.NoPrefixType", "shortDescription" : "", "object" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/NoPrefixType$.html", "members_object" : [{"label" : "productElementNames", "tail" : "(): Iterator[String]", "member" : "scala.Product.productElementNames", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/NoPrefixType$.html#productElementNames:Iterator[String]", "kind" : "def"}, {"label" : "productElementName", "tail" : "(n: Int): String", "member" : "scala.Product.productElementName", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/NoPrefixType$.html#productElementName(n:Int):String", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/NoPrefixType$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/NoPrefixType$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/NoPrefixType$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/NoPrefixType$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/NoPrefixType$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/NoPrefixType$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/NoPrefixType$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/NoPrefixType$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/NoPrefixType$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/NoPrefixType$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/NoPrefixType$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/NoPrefixType$.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/NoPrefixType$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/NoPrefixType$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/NoPrefixType$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/NoPrefixType$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/NoPrefixType$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "scala.tools.scalap.scalax.rules.scalasig.NoSymbol", "shortDescription" : "", "object" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/NoSymbol$.html", "members_object" : [{"label" : "children", "tail" : "(): collection.immutable.Nil", "member" : "scala.tools.scalap.scalax.rules.scalasig.NoSymbol.children", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/NoSymbol$.html#children:scala.collection.immutable.Nil.type", "kind" : "def"}, {"label" : "hasFlag", "tail" : "(flag: Long): Boolean", "member" : "scala.tools.scalap.scalax.rules.scalasig.NoSymbol.hasFlag", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/NoSymbol$.html#hasFlag(flag:Long):Boolean", "kind" : "def"}, {"label" : "parent", "tail" : "(): None", "member" : "scala.tools.scalap.scalax.rules.scalasig.NoSymbol.parent", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/NoSymbol$.html#parent:None.type", "kind" : "def"}, {"label" : "name", "tail" : "(): String", "member" : "scala.tools.scalap.scalax.rules.scalasig.NoSymbol.name", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/NoSymbol$.html#name:String", "kind" : "def"}, {"label" : "productElementNames", "tail" : "(): Iterator[String]", "member" : "scala.Product.productElementNames", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/NoSymbol$.html#productElementNames:Iterator[String]", "kind" : "def"}, {"label" : "productElementName", "tail" : "(n: Int): String", "member" : "scala.Product.productElementName", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/NoSymbol$.html#productElementName(n:Int):String", "kind" : "def"}, {"label" : "path", "tail" : "(): String", "member" : "scala.tools.scalap.scalax.rules.scalasig.Symbol.path", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/NoSymbol$.html#path:String", "kind" : "def"}, {"label" : "isPreSuper", "tail" : "(): Boolean", "member" : "scala.tools.scalap.scalax.rules.scalasig.Flags.isPreSuper", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/NoSymbol$.html#isPreSuper:Boolean", "kind" : "def"}, {"label" : "isImplementationClass", "tail" : "(): Boolean", "member" : "scala.tools.scalap.scalax.rules.scalasig.Flags.isImplementationClass", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/NoSymbol$.html#isImplementationClass:Boolean", "kind" : "def"}, {"label" : "isExpandedName", "tail" : "(): Boolean", "member" : "scala.tools.scalap.scalax.rules.scalasig.Flags.isExpandedName", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/NoSymbol$.html#isExpandedName:Boolean", "kind" : "def"}, {"label" : "isExistential", "tail" : "(): Boolean", "member" : "scala.tools.scalap.scalax.rules.scalasig.Flags.isExistential", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/NoSymbol$.html#isExistential:Boolean", "kind" : "def"}, {"label" : "isMixedIn", "tail" : "(): Boolean", "member" : "scala.tools.scalap.scalax.rules.scalasig.Flags.isMixedIn", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/NoSymbol$.html#isMixedIn:Boolean", "kind" : "def"}, {"label" : "isLifted", "tail" : "(): Boolean", "member" : "scala.tools.scalap.scalax.rules.scalasig.Flags.isLifted", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/NoSymbol$.html#isLifted:Boolean", "kind" : "def"}, {"label" : "isOverloaded", "tail" : "(): Boolean", "member" : "scala.tools.scalap.scalax.rules.scalasig.Flags.isOverloaded", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/NoSymbol$.html#isOverloaded:Boolean", "kind" : "def"}, {"label" : "isError", "tail" : "(): Boolean", "member" : "scala.tools.scalap.scalax.rules.scalasig.Flags.isError", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/NoSymbol$.html#isError:Boolean", "kind" : "def"}, {"label" : "isLazy", "tail" : "(): Boolean", "member" : "scala.tools.scalap.scalax.rules.scalasig.Flags.isLazy", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/NoSymbol$.html#isLazy:Boolean", "kind" : "def"}, {"label" : "isMonomorphic", "tail" : "(): Boolean", "member" : "scala.tools.scalap.scalax.rules.scalasig.Flags.isMonomorphic", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/NoSymbol$.html#isMonomorphic:Boolean", "kind" : "def"}, {"label" : "isModuleVar", "tail" : "(): Boolean", "member" : "scala.tools.scalap.scalax.rules.scalasig.Flags.isModuleVar", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/NoSymbol$.html#isModuleVar:Boolean", "kind" : "def"}, {"label" : "isParamAccessor", "tail" : "(): Boolean", "member" : "scala.tools.scalap.scalax.rules.scalasig.Flags.isParamAccessor", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/NoSymbol$.html#isParamAccessor:Boolean", "kind" : "def"}, {"label" : "isSuperAccessor", "tail" : "(): Boolean", "member" : "scala.tools.scalap.scalax.rules.scalasig.Flags.isSuperAccessor", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/NoSymbol$.html#isSuperAccessor:Boolean", "kind" : "def"}, {"label" : "isAccessor", "tail" : "(): Boolean", "member" : "scala.tools.scalap.scalax.rules.scalasig.Flags.isAccessor", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/NoSymbol$.html#isAccessor:Boolean", "kind" : "def"}, {"label" : "isBridge", "tail" : "(): Boolean", "member" : "scala.tools.scalap.scalax.rules.scalasig.Flags.isBridge", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/NoSymbol$.html#isBridge:Boolean", "kind" : "def"}, {"label" : "isTrait", "tail" : "(): Boolean", "member" : "scala.tools.scalap.scalax.rules.scalasig.Flags.isTrait", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/NoSymbol$.html#isTrait:Boolean", "kind" : "def"}, {"label" : "isCaseAccessor", "tail" : "(): Boolean", "member" : "scala.tools.scalap.scalax.rules.scalasig.Flags.isCaseAccessor", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/NoSymbol$.html#isCaseAccessor:Boolean", "kind" : "def"}, {"label" : "isStatic", "tail" : "(): Boolean", "member" : "scala.tools.scalap.scalax.rules.scalasig.Flags.isStatic", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/NoSymbol$.html#isStatic:Boolean", "kind" : "def"}, {"label" : "isStable", "tail" : "(): Boolean", "member" : "scala.tools.scalap.scalax.rules.scalasig.Flags.isStable", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/NoSymbol$.html#isStable:Boolean", "kind" : "def"}, {"label" : "isSynthetic", "tail" : "(): Boolean", "member" : "scala.tools.scalap.scalax.rules.scalasig.Flags.isSynthetic", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/NoSymbol$.html#isSynthetic:Boolean", "kind" : "def"}, {"label" : "isJava", "tail" : "(): Boolean", "member" : "scala.tools.scalap.scalax.rules.scalasig.Flags.isJava", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/NoSymbol$.html#isJava:Boolean", "kind" : "def"}, {"label" : "isLocal", "tail" : "(): Boolean", "member" : "scala.tools.scalap.scalax.rules.scalasig.Flags.isLocal", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/NoSymbol$.html#isLocal:Boolean", "kind" : "def"}, {"label" : "isAbstractOverride", "tail" : "(): Boolean", "member" : "scala.tools.scalap.scalax.rules.scalasig.Flags.isAbstractOverride", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/NoSymbol$.html#isAbstractOverride:Boolean", "kind" : "def"}, {"label" : "isInConstructor", "tail" : "(): Boolean", "member" : "scala.tools.scalap.scalax.rules.scalasig.Flags.isInConstructor", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/NoSymbol$.html#isInConstructor:Boolean", "kind" : "def"}, {"label" : "isLabel", "tail" : "(): Boolean", "member" : "scala.tools.scalap.scalax.rules.scalasig.Flags.isLabel", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/NoSymbol$.html#isLabel:Boolean", "kind" : "def"}, {"label" : "isContravariant", "tail" : "(): Boolean", "member" : "scala.tools.scalap.scalax.rules.scalasig.Flags.isContravariant", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/NoSymbol$.html#isContravariant:Boolean", "kind" : "def"}, {"label" : "isByNameParam", "tail" : "(): Boolean", "member" : "scala.tools.scalap.scalax.rules.scalasig.Flags.isByNameParam", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/NoSymbol$.html#isByNameParam:Boolean", "kind" : "def"}, {"label" : "isCaptured", "tail" : "(): Boolean", "member" : "scala.tools.scalap.scalax.rules.scalasig.Flags.isCaptured", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/NoSymbol$.html#isCaptured:Boolean", "kind" : "def"}, {"label" : "isCovariant", "tail" : "(): Boolean", "member" : "scala.tools.scalap.scalax.rules.scalasig.Flags.isCovariant", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/NoSymbol$.html#isCovariant:Boolean", "kind" : "def"}, {"label" : "isDeprecated", "tail" : "(): Boolean", "member" : "scala.tools.scalap.scalax.rules.scalasig.Flags.isDeprecated", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/NoSymbol$.html#isDeprecated:Boolean", "kind" : "def"}, {"label" : "isPackage", "tail" : "(): Boolean", "member" : "scala.tools.scalap.scalax.rules.scalasig.Flags.isPackage", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/NoSymbol$.html#isPackage:Boolean", "kind" : "def"}, {"label" : "isParam", "tail" : "(): Boolean", "member" : "scala.tools.scalap.scalax.rules.scalasig.Flags.isParam", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/NoSymbol$.html#isParam:Boolean", "kind" : "def"}, {"label" : "isMutable", "tail" : "(): Boolean", "member" : "scala.tools.scalap.scalax.rules.scalasig.Flags.isMutable", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/NoSymbol$.html#isMutable:Boolean", "kind" : "def"}, {"label" : "isInterface", "tail" : "(): Boolean", "member" : "scala.tools.scalap.scalax.rules.scalasig.Flags.isInterface", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/NoSymbol$.html#isInterface:Boolean", "kind" : "def"}, {"label" : "isModule", "tail" : "(): Boolean", "member" : "scala.tools.scalap.scalax.rules.scalasig.Flags.isModule", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/NoSymbol$.html#isModule:Boolean", "kind" : "def"}, {"label" : "isMethod", "tail" : "(): Boolean", "member" : "scala.tools.scalap.scalax.rules.scalasig.Flags.isMethod", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/NoSymbol$.html#isMethod:Boolean", "kind" : "def"}, {"label" : "isDeferred", "tail" : "(): Boolean", "member" : "scala.tools.scalap.scalax.rules.scalasig.Flags.isDeferred", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/NoSymbol$.html#isDeferred:Boolean", "kind" : "def"}, {"label" : "isAbstract", "tail" : "(): Boolean", "member" : "scala.tools.scalap.scalax.rules.scalasig.Flags.isAbstract", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/NoSymbol$.html#isAbstract:Boolean", "kind" : "def"}, {"label" : "isCase", "tail" : "(): Boolean", "member" : "scala.tools.scalap.scalax.rules.scalasig.Flags.isCase", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/NoSymbol$.html#isCase:Boolean", "kind" : "def"}, {"label" : "isOverride", "tail" : "(): Boolean", "member" : "scala.tools.scalap.scalax.rules.scalasig.Flags.isOverride", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/NoSymbol$.html#isOverride:Boolean", "kind" : "def"}, {"label" : "isSealed", "tail" : "(): Boolean", "member" : "scala.tools.scalap.scalax.rules.scalasig.Flags.isSealed", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/NoSymbol$.html#isSealed:Boolean", "kind" : "def"}, {"label" : "isProtected", "tail" : "(): Boolean", "member" : "scala.tools.scalap.scalax.rules.scalasig.Flags.isProtected", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/NoSymbol$.html#isProtected:Boolean", "kind" : "def"}, {"label" : "isPrivate", "tail" : "(): Boolean", "member" : "scala.tools.scalap.scalax.rules.scalasig.Flags.isPrivate", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/NoSymbol$.html#isPrivate:Boolean", "kind" : "def"}, {"label" : "isFinal", "tail" : "(): Boolean", "member" : "scala.tools.scalap.scalax.rules.scalasig.Flags.isFinal", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/NoSymbol$.html#isFinal:Boolean", "kind" : "def"}, {"label" : "isImplicit", "tail" : "(): Boolean", "member" : "scala.tools.scalap.scalax.rules.scalasig.Flags.isImplicit", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/NoSymbol$.html#isImplicit:Boolean", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/NoSymbol$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/NoSymbol$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/NoSymbol$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/NoSymbol$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/NoSymbol$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/NoSymbol$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/NoSymbol$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/NoSymbol$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/NoSymbol$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/NoSymbol$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/NoSymbol$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/NoSymbol$.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/NoSymbol$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/NoSymbol$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/NoSymbol$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/NoSymbol$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/NoSymbol$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "scala.tools.scalap.scalax.rules.scalasig.NoType", "shortDescription" : "", "object" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/NoType$.html", "members_object" : [{"label" : "productElementNames", "tail" : "(): Iterator[String]", "member" : "scala.Product.productElementNames", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/NoType$.html#productElementNames:Iterator[String]", "kind" : "def"}, {"label" : "productElementName", "tail" : "(n: Int): String", "member" : "scala.Product.productElementName", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/NoType$.html#productElementName(n:Int):String", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/NoType$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/NoType$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/NoType$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/NoType$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/NoType$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/NoType$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/NoType$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/NoType$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/NoType$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/NoType$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/NoType$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/NoType$.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/NoType$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/NoType$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/NoType$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/NoType$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/NoType$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "scala.tools.scalap.scalax.rules.scalasig.NullaryMethodType", "shortDescription" : "", "members_case class" : [{"label" : "+", "tail" : "(other: String): String", "member" : "scala.Predef.any2stringadd.+", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/NullaryMethodType.html#+(other:String):String", "kind" : "def"}, {"label" : "formatted", "tail" : "(fmtstr: String): String", "member" : "scala.Predef.StringFormat.formatted", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/NullaryMethodType.html#formatted(fmtstr:String):String", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: (NullaryMethodType) => Boolean, msg: => Any): NullaryMethodType", "member" : "scala.Predef.Ensuring.ensuring", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/NullaryMethodType.html#ensuring(cond:A=>Boolean,msg:=>Any):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: (NullaryMethodType) => Boolean): NullaryMethodType", "member" : "scala.Predef.Ensuring.ensuring", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/NullaryMethodType.html#ensuring(cond:A=>Boolean):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: Boolean, msg: => Any): NullaryMethodType", "member" : "scala.Predef.Ensuring.ensuring", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/NullaryMethodType.html#ensuring(cond:Boolean,msg:=>Any):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: Boolean): NullaryMethodType", "member" : "scala.Predef.Ensuring.ensuring", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/NullaryMethodType.html#ensuring(cond:Boolean):A", "kind" : "def"}, {"label" : "→", "tail" : "(y: B): (NullaryMethodType, B)", "member" : "scala.Predef.ArrowAssoc.→", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/NullaryMethodType.html#→[B](y:B):(A,B)", "kind" : "def"}, {"label" : "->", "tail" : "(y: B): (NullaryMethodType, B)", "member" : "scala.Predef.ArrowAssoc.->", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/NullaryMethodType.html#->[B](y:B):(A,B)", "kind" : "def"}, {"member" : "scala.tools.scalap.scalax.rules.scalasig.NullaryMethodType#<init>", "error" : "unsupported entity"}, {"label" : "resultType", "tail" : ": Type", "member" : "scala.tools.scalap.scalax.rules.scalasig.NullaryMethodType.resultType", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/NullaryMethodType.html#resultType:scala.tools.scalap.scalax.rules.scalasig.Type", "kind" : "val"}, {"label" : "productElementNames", "tail" : "(): Iterator[String]", "member" : "scala.Product.productElementNames", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/NullaryMethodType.html#productElementNames:Iterator[String]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/NullaryMethodType.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/NullaryMethodType.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/NullaryMethodType.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/NullaryMethodType.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/NullaryMethodType.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/NullaryMethodType.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/NullaryMethodType.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/NullaryMethodType.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/NullaryMethodType.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/NullaryMethodType.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/NullaryMethodType.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/NullaryMethodType.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/NullaryMethodType.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/NullaryMethodType.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/NullaryMethodType.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/NullaryMethodType.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/NullaryMethodType.html", "kind" : "case class"}, {"name" : "scala.tools.scalap.scalax.rules.scalasig.ObjectSymbol", "shortDescription" : "", "members_case class" : [{"label" : "+", "tail" : "(other: String): String", "member" : "scala.Predef.any2stringadd.+", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/ObjectSymbol.html#+(other:String):String", "kind" : "def"}, {"label" : "formatted", "tail" : "(fmtstr: String): String", "member" : "scala.Predef.StringFormat.formatted", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/ObjectSymbol.html#formatted(fmtstr:String):String", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: (ObjectSymbol) => Boolean, msg: => Any): ObjectSymbol", "member" : "scala.Predef.Ensuring.ensuring", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/ObjectSymbol.html#ensuring(cond:A=>Boolean,msg:=>Any):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: (ObjectSymbol) => Boolean): ObjectSymbol", "member" : "scala.Predef.Ensuring.ensuring", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/ObjectSymbol.html#ensuring(cond:A=>Boolean):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: Boolean, msg: => Any): ObjectSymbol", "member" : "scala.Predef.Ensuring.ensuring", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/ObjectSymbol.html#ensuring(cond:Boolean,msg:=>Any):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: Boolean): ObjectSymbol", "member" : "scala.Predef.Ensuring.ensuring", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/ObjectSymbol.html#ensuring(cond:Boolean):A", "kind" : "def"}, {"label" : "→", "tail" : "(y: B): (ObjectSymbol, B)", "member" : "scala.Predef.ArrowAssoc.→", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/ObjectSymbol.html#→[B](y:B):(A,B)", "kind" : "def"}, {"label" : "->", "tail" : "(y: B): (ObjectSymbol, B)", "member" : "scala.Predef.ArrowAssoc.->", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/ObjectSymbol.html#->[B](y:B):(A,B)", "kind" : "def"}, {"member" : "scala.tools.scalap.scalax.rules.scalasig.ObjectSymbol#<init>", "error" : "unsupported entity"}, {"label" : "symbolInfo", "tail" : ": SymbolInfo", "member" : "scala.tools.scalap.scalax.rules.scalasig.ObjectSymbol.symbolInfo", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/ObjectSymbol.html#symbolInfo:scala.tools.scalap.scalax.rules.scalasig.SymbolInfo", "kind" : "val"}, {"label" : "productElementNames", "tail" : "(): Iterator[String]", "member" : "scala.Product.productElementNames", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/ObjectSymbol.html#productElementNames:Iterator[String]", "kind" : "def"}, {"label" : "infoType", "tail" : ": Type", "member" : "scala.tools.scalap.scalax.rules.scalasig.SymbolInfoSymbol.infoType", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/ObjectSymbol.html#infoType:scala.tools.scalap.scalax.rules.scalasig.Type", "kind" : "lazy val"}, {"label" : "hasFlag", "tail" : "(flag: Long): Boolean", "member" : "scala.tools.scalap.scalax.rules.scalasig.SymbolInfoSymbol.hasFlag", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/ObjectSymbol.html#hasFlag(flag:Long):Boolean", "kind" : "def"}, {"label" : "parent", "tail" : "(): Some[Symbol]", "member" : "scala.tools.scalap.scalax.rules.scalasig.SymbolInfoSymbol.parent", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/ObjectSymbol.html#parent:Some[scala.tools.scalap.scalax.rules.scalasig.Symbol]", "kind" : "def"}, {"label" : "name", "tail" : "(): String", "member" : "scala.tools.scalap.scalax.rules.scalasig.SymbolInfoSymbol.name", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/ObjectSymbol.html#name:String", "kind" : "def"}, {"label" : "entry", "tail" : "(): Entry", "member" : "scala.tools.scalap.scalax.rules.scalasig.SymbolInfoSymbol.entry", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/ObjectSymbol.html#entry:scala.tools.scalap.scalax.rules.scalasig.ScalaSig#Entry", "kind" : "def"}, {"label" : "attributes", "tail" : ": Seq[AttributeInfo]", "member" : "scala.tools.scalap.scalax.rules.scalasig.ScalaSigSymbol.attributes", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/ObjectSymbol.html#attributes:Seq[scala.tools.scalap.scalax.rules.scalasig.AttributeInfo]", "kind" : "lazy val"}, {"label" : "children", "tail" : ": Seq[Symbol]", "member" : "scala.tools.scalap.scalax.rules.scalasig.ScalaSigSymbol.children", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/ObjectSymbol.html#children:Seq[scala.tools.scalap.scalax.rules.scalasig.Symbol]", "kind" : "lazy val"}, {"label" : "index", "tail" : "(): Int", "member" : "scala.tools.scalap.scalax.rules.scalasig.ScalaSigSymbol.index", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/ObjectSymbol.html#index:Int", "kind" : "def"}, {"label" : "applyScalaSigRule", "tail" : "(rule: Parser[A]): A", "member" : "scala.tools.scalap.scalax.rules.scalasig.ScalaSigSymbol.applyScalaSigRule", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/ObjectSymbol.html#applyScalaSigRule[A](rule:scala.tools.scalap.scalax.rules.scalasig.ScalaSigParsers.Parser[A]):A", "kind" : "def"}, {"label" : "applyRule", "tail" : "(rule: EntryParser[A]): A", "member" : "scala.tools.scalap.scalax.rules.scalasig.ScalaSigSymbol.applyRule", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/ObjectSymbol.html#applyRule[A](rule:scala.tools.scalap.scalax.rules.scalasig.ScalaSigEntryParsers.EntryParser[A]):A", "kind" : "def"}, {"label" : "path", "tail" : "(): String", "member" : "scala.tools.scalap.scalax.rules.scalasig.Symbol.path", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/ObjectSymbol.html#path:String", "kind" : "def"}, {"label" : "isPreSuper", "tail" : "(): Boolean", "member" : "scala.tools.scalap.scalax.rules.scalasig.Flags.isPreSuper", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/ObjectSymbol.html#isPreSuper:Boolean", "kind" : "def"}, {"label" : "isImplementationClass", "tail" : "(): Boolean", "member" : "scala.tools.scalap.scalax.rules.scalasig.Flags.isImplementationClass", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/ObjectSymbol.html#isImplementationClass:Boolean", "kind" : "def"}, {"label" : "isExpandedName", "tail" : "(): Boolean", "member" : "scala.tools.scalap.scalax.rules.scalasig.Flags.isExpandedName", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/ObjectSymbol.html#isExpandedName:Boolean", "kind" : "def"}, {"label" : "isExistential", "tail" : "(): Boolean", "member" : "scala.tools.scalap.scalax.rules.scalasig.Flags.isExistential", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/ObjectSymbol.html#isExistential:Boolean", "kind" : "def"}, {"label" : "isMixedIn", "tail" : "(): Boolean", "member" : "scala.tools.scalap.scalax.rules.scalasig.Flags.isMixedIn", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/ObjectSymbol.html#isMixedIn:Boolean", "kind" : "def"}, {"label" : "isLifted", "tail" : "(): Boolean", "member" : "scala.tools.scalap.scalax.rules.scalasig.Flags.isLifted", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/ObjectSymbol.html#isLifted:Boolean", "kind" : "def"}, {"label" : "isOverloaded", "tail" : "(): Boolean", "member" : "scala.tools.scalap.scalax.rules.scalasig.Flags.isOverloaded", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/ObjectSymbol.html#isOverloaded:Boolean", "kind" : "def"}, {"label" : "isError", "tail" : "(): Boolean", "member" : "scala.tools.scalap.scalax.rules.scalasig.Flags.isError", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/ObjectSymbol.html#isError:Boolean", "kind" : "def"}, {"label" : "isLazy", "tail" : "(): Boolean", "member" : "scala.tools.scalap.scalax.rules.scalasig.Flags.isLazy", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/ObjectSymbol.html#isLazy:Boolean", "kind" : "def"}, {"label" : "isMonomorphic", "tail" : "(): Boolean", "member" : "scala.tools.scalap.scalax.rules.scalasig.Flags.isMonomorphic", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/ObjectSymbol.html#isMonomorphic:Boolean", "kind" : "def"}, {"label" : "isModuleVar", "tail" : "(): Boolean", "member" : "scala.tools.scalap.scalax.rules.scalasig.Flags.isModuleVar", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/ObjectSymbol.html#isModuleVar:Boolean", "kind" : "def"}, {"label" : "isParamAccessor", "tail" : "(): Boolean", "member" : "scala.tools.scalap.scalax.rules.scalasig.Flags.isParamAccessor", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/ObjectSymbol.html#isParamAccessor:Boolean", "kind" : "def"}, {"label" : "isSuperAccessor", "tail" : "(): Boolean", "member" : "scala.tools.scalap.scalax.rules.scalasig.Flags.isSuperAccessor", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/ObjectSymbol.html#isSuperAccessor:Boolean", "kind" : "def"}, {"label" : "isAccessor", "tail" : "(): Boolean", "member" : "scala.tools.scalap.scalax.rules.scalasig.Flags.isAccessor", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/ObjectSymbol.html#isAccessor:Boolean", "kind" : "def"}, {"label" : "isBridge", "tail" : "(): Boolean", "member" : "scala.tools.scalap.scalax.rules.scalasig.Flags.isBridge", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/ObjectSymbol.html#isBridge:Boolean", "kind" : "def"}, {"label" : "isTrait", "tail" : "(): Boolean", "member" : "scala.tools.scalap.scalax.rules.scalasig.Flags.isTrait", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/ObjectSymbol.html#isTrait:Boolean", "kind" : "def"}, {"label" : "isCaseAccessor", "tail" : "(): Boolean", "member" : "scala.tools.scalap.scalax.rules.scalasig.Flags.isCaseAccessor", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/ObjectSymbol.html#isCaseAccessor:Boolean", "kind" : "def"}, {"label" : "isStatic", "tail" : "(): Boolean", "member" : "scala.tools.scalap.scalax.rules.scalasig.Flags.isStatic", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/ObjectSymbol.html#isStatic:Boolean", "kind" : "def"}, {"label" : "isStable", "tail" : "(): Boolean", "member" : "scala.tools.scalap.scalax.rules.scalasig.Flags.isStable", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/ObjectSymbol.html#isStable:Boolean", "kind" : "def"}, {"label" : "isSynthetic", "tail" : "(): Boolean", "member" : "scala.tools.scalap.scalax.rules.scalasig.Flags.isSynthetic", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/ObjectSymbol.html#isSynthetic:Boolean", "kind" : "def"}, {"label" : "isJava", "tail" : "(): Boolean", "member" : "scala.tools.scalap.scalax.rules.scalasig.Flags.isJava", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/ObjectSymbol.html#isJava:Boolean", "kind" : "def"}, {"label" : "isLocal", "tail" : "(): Boolean", "member" : "scala.tools.scalap.scalax.rules.scalasig.Flags.isLocal", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/ObjectSymbol.html#isLocal:Boolean", "kind" : "def"}, {"label" : "isAbstractOverride", "tail" : "(): Boolean", "member" : "scala.tools.scalap.scalax.rules.scalasig.Flags.isAbstractOverride", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/ObjectSymbol.html#isAbstractOverride:Boolean", "kind" : "def"}, {"label" : "isInConstructor", "tail" : "(): Boolean", "member" : "scala.tools.scalap.scalax.rules.scalasig.Flags.isInConstructor", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/ObjectSymbol.html#isInConstructor:Boolean", "kind" : "def"}, {"label" : "isLabel", "tail" : "(): Boolean", "member" : "scala.tools.scalap.scalax.rules.scalasig.Flags.isLabel", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/ObjectSymbol.html#isLabel:Boolean", "kind" : "def"}, {"label" : "isContravariant", "tail" : "(): Boolean", "member" : "scala.tools.scalap.scalax.rules.scalasig.Flags.isContravariant", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/ObjectSymbol.html#isContravariant:Boolean", "kind" : "def"}, {"label" : "isByNameParam", "tail" : "(): Boolean", "member" : "scala.tools.scalap.scalax.rules.scalasig.Flags.isByNameParam", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/ObjectSymbol.html#isByNameParam:Boolean", "kind" : "def"}, {"label" : "isCaptured", "tail" : "(): Boolean", "member" : "scala.tools.scalap.scalax.rules.scalasig.Flags.isCaptured", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/ObjectSymbol.html#isCaptured:Boolean", "kind" : "def"}, {"label" : "isCovariant", "tail" : "(): Boolean", "member" : "scala.tools.scalap.scalax.rules.scalasig.Flags.isCovariant", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/ObjectSymbol.html#isCovariant:Boolean", "kind" : "def"}, {"label" : "isDeprecated", "tail" : "(): Boolean", "member" : "scala.tools.scalap.scalax.rules.scalasig.Flags.isDeprecated", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/ObjectSymbol.html#isDeprecated:Boolean", "kind" : "def"}, {"label" : "isPackage", "tail" : "(): Boolean", "member" : "scala.tools.scalap.scalax.rules.scalasig.Flags.isPackage", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/ObjectSymbol.html#isPackage:Boolean", "kind" : "def"}, {"label" : "isParam", "tail" : "(): Boolean", "member" : "scala.tools.scalap.scalax.rules.scalasig.Flags.isParam", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/ObjectSymbol.html#isParam:Boolean", "kind" : "def"}, {"label" : "isMutable", "tail" : "(): Boolean", "member" : "scala.tools.scalap.scalax.rules.scalasig.Flags.isMutable", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/ObjectSymbol.html#isMutable:Boolean", "kind" : "def"}, {"label" : "isInterface", "tail" : "(): Boolean", "member" : "scala.tools.scalap.scalax.rules.scalasig.Flags.isInterface", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/ObjectSymbol.html#isInterface:Boolean", "kind" : "def"}, {"label" : "isModule", "tail" : "(): Boolean", "member" : "scala.tools.scalap.scalax.rules.scalasig.Flags.isModule", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/ObjectSymbol.html#isModule:Boolean", "kind" : "def"}, {"label" : "isMethod", "tail" : "(): Boolean", "member" : "scala.tools.scalap.scalax.rules.scalasig.Flags.isMethod", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/ObjectSymbol.html#isMethod:Boolean", "kind" : "def"}, {"label" : "isDeferred", "tail" : "(): Boolean", "member" : "scala.tools.scalap.scalax.rules.scalasig.Flags.isDeferred", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/ObjectSymbol.html#isDeferred:Boolean", "kind" : "def"}, {"label" : "isAbstract", "tail" : "(): Boolean", "member" : "scala.tools.scalap.scalax.rules.scalasig.Flags.isAbstract", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/ObjectSymbol.html#isAbstract:Boolean", "kind" : "def"}, {"label" : "isCase", "tail" : "(): Boolean", "member" : "scala.tools.scalap.scalax.rules.scalasig.Flags.isCase", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/ObjectSymbol.html#isCase:Boolean", "kind" : "def"}, {"label" : "isOverride", "tail" : "(): Boolean", "member" : "scala.tools.scalap.scalax.rules.scalasig.Flags.isOverride", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/ObjectSymbol.html#isOverride:Boolean", "kind" : "def"}, {"label" : "isSealed", "tail" : "(): Boolean", "member" : "scala.tools.scalap.scalax.rules.scalasig.Flags.isSealed", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/ObjectSymbol.html#isSealed:Boolean", "kind" : "def"}, {"label" : "isProtected", "tail" : "(): Boolean", "member" : "scala.tools.scalap.scalax.rules.scalasig.Flags.isProtected", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/ObjectSymbol.html#isProtected:Boolean", "kind" : "def"}, {"label" : "isPrivate", "tail" : "(): Boolean", "member" : "scala.tools.scalap.scalax.rules.scalasig.Flags.isPrivate", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/ObjectSymbol.html#isPrivate:Boolean", "kind" : "def"}, {"label" : "isFinal", "tail" : "(): Boolean", "member" : "scala.tools.scalap.scalax.rules.scalasig.Flags.isFinal", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/ObjectSymbol.html#isFinal:Boolean", "kind" : "def"}, {"label" : "isImplicit", "tail" : "(): Boolean", "member" : "scala.tools.scalap.scalax.rules.scalasig.Flags.isImplicit", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/ObjectSymbol.html#isImplicit:Boolean", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/ObjectSymbol.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/ObjectSymbol.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/ObjectSymbol.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/ObjectSymbol.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/ObjectSymbol.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/ObjectSymbol.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/ObjectSymbol.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/ObjectSymbol.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/ObjectSymbol.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/ObjectSymbol.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/ObjectSymbol.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/ObjectSymbol.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/ObjectSymbol.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/ObjectSymbol.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/ObjectSymbol.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/ObjectSymbol.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/ObjectSymbol.html", "kind" : "case class"}, {"name" : "scala.tools.scalap.scalax.rules.scalasig.PolyType", "shortDescription" : "", "members_case class" : [{"label" : "+", "tail" : "(other: String): String", "member" : "scala.Predef.any2stringadd.+", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/PolyType.html#+(other:String):String", "kind" : "def"}, {"label" : "formatted", "tail" : "(fmtstr: String): String", "member" : "scala.Predef.StringFormat.formatted", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/PolyType.html#formatted(fmtstr:String):String", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: (PolyType) => Boolean, msg: => Any): PolyType", "member" : "scala.Predef.Ensuring.ensuring", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/PolyType.html#ensuring(cond:A=>Boolean,msg:=>Any):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: (PolyType) => Boolean): PolyType", "member" : "scala.Predef.Ensuring.ensuring", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/PolyType.html#ensuring(cond:A=>Boolean):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: Boolean, msg: => Any): PolyType", "member" : "scala.Predef.Ensuring.ensuring", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/PolyType.html#ensuring(cond:Boolean,msg:=>Any):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: Boolean): PolyType", "member" : "scala.Predef.Ensuring.ensuring", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/PolyType.html#ensuring(cond:Boolean):A", "kind" : "def"}, {"label" : "→", "tail" : "(y: B): (PolyType, B)", "member" : "scala.Predef.ArrowAssoc.→", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/PolyType.html#→[B](y:B):(A,B)", "kind" : "def"}, {"label" : "->", "tail" : "(y: B): (PolyType, B)", "member" : "scala.Predef.ArrowAssoc.->", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/PolyType.html#->[B](y:B):(A,B)", "kind" : "def"}, {"member" : "scala.tools.scalap.scalax.rules.scalasig.PolyType#<init>", "error" : "unsupported entity"}, {"label" : "symbols", "tail" : ": Seq[TypeSymbol]", "member" : "scala.tools.scalap.scalax.rules.scalasig.PolyType.symbols", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/PolyType.html#symbols:Seq[scala.tools.scalap.scalax.rules.scalasig.TypeSymbol]", "kind" : "val"}, {"label" : "typeRef", "tail" : ": Type", "member" : "scala.tools.scalap.scalax.rules.scalasig.PolyType.typeRef", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/PolyType.html#typeRef:scala.tools.scalap.scalax.rules.scalasig.Type", "kind" : "val"}, {"label" : "productElementNames", "tail" : "(): Iterator[String]", "member" : "scala.Product.productElementNames", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/PolyType.html#productElementNames:Iterator[String]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/PolyType.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/PolyType.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/PolyType.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/PolyType.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/PolyType.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/PolyType.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/PolyType.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/PolyType.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/PolyType.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/PolyType.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/PolyType.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/PolyType.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/PolyType.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/PolyType.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/PolyType.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/PolyType.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/PolyType.html", "kind" : "case class"}, {"name" : "scala.tools.scalap.scalax.rules.scalasig.PolyTypeWithCons", "shortDescription" : "", "members_case class" : [{"label" : "+", "tail" : "(other: String): String", "member" : "scala.Predef.any2stringadd.+", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/PolyTypeWithCons.html#+(other:String):String", "kind" : "def"}, {"label" : "formatted", "tail" : "(fmtstr: String): String", "member" : "scala.Predef.StringFormat.formatted", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/PolyTypeWithCons.html#formatted(fmtstr:String):String", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: (PolyTypeWithCons) => Boolean, msg: => Any): PolyTypeWithCons", "member" : "scala.Predef.Ensuring.ensuring", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/PolyTypeWithCons.html#ensuring(cond:A=>Boolean,msg:=>Any):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: (PolyTypeWithCons) => Boolean): PolyTypeWithCons", "member" : "scala.Predef.Ensuring.ensuring", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/PolyTypeWithCons.html#ensuring(cond:A=>Boolean):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: Boolean, msg: => Any): PolyTypeWithCons", "member" : "scala.Predef.Ensuring.ensuring", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/PolyTypeWithCons.html#ensuring(cond:Boolean,msg:=>Any):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: Boolean): PolyTypeWithCons", "member" : "scala.Predef.Ensuring.ensuring", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/PolyTypeWithCons.html#ensuring(cond:Boolean):A", "kind" : "def"}, {"label" : "→", "tail" : "(y: B): (PolyTypeWithCons, B)", "member" : "scala.Predef.ArrowAssoc.→", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/PolyTypeWithCons.html#→[B](y:B):(A,B)", "kind" : "def"}, {"label" : "->", "tail" : "(y: B): (PolyTypeWithCons, B)", "member" : "scala.Predef.ArrowAssoc.->", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/PolyTypeWithCons.html#->[B](y:B):(A,B)", "kind" : "def"}, {"member" : "scala.tools.scalap.scalax.rules.scalasig.PolyTypeWithCons#<init>", "error" : "unsupported entity"}, {"label" : "cons", "tail" : ": String", "member" : "scala.tools.scalap.scalax.rules.scalasig.PolyTypeWithCons.cons", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/PolyTypeWithCons.html#cons:String", "kind" : "val"}, {"label" : "symbols", "tail" : ": Seq[TypeSymbol]", "member" : "scala.tools.scalap.scalax.rules.scalasig.PolyTypeWithCons.symbols", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/PolyTypeWithCons.html#symbols:Seq[scala.tools.scalap.scalax.rules.scalasig.TypeSymbol]", "kind" : "val"}, {"label" : "typeRef", "tail" : ": Type", "member" : "scala.tools.scalap.scalax.rules.scalasig.PolyTypeWithCons.typeRef", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/PolyTypeWithCons.html#typeRef:scala.tools.scalap.scalax.rules.scalasig.Type", "kind" : "val"}, {"label" : "productElementNames", "tail" : "(): Iterator[String]", "member" : "scala.Product.productElementNames", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/PolyTypeWithCons.html#productElementNames:Iterator[String]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/PolyTypeWithCons.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/PolyTypeWithCons.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/PolyTypeWithCons.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/PolyTypeWithCons.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/PolyTypeWithCons.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/PolyTypeWithCons.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/PolyTypeWithCons.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/PolyTypeWithCons.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/PolyTypeWithCons.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/PolyTypeWithCons.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/PolyTypeWithCons.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/PolyTypeWithCons.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/PolyTypeWithCons.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/PolyTypeWithCons.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/PolyTypeWithCons.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/PolyTypeWithCons.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/PolyTypeWithCons.html", "kind" : "case class"}, {"name" : "scala.tools.scalap.scalax.rules.scalasig.RefinedType", "shortDescription" : "", "members_case class" : [{"label" : "+", "tail" : "(other: String): String", "member" : "scala.Predef.any2stringadd.+", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/RefinedType.html#+(other:String):String", "kind" : "def"}, {"label" : "formatted", "tail" : "(fmtstr: String): String", "member" : "scala.Predef.StringFormat.formatted", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/RefinedType.html#formatted(fmtstr:String):String", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: (RefinedType) => Boolean, msg: => Any): RefinedType", "member" : "scala.Predef.Ensuring.ensuring", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/RefinedType.html#ensuring(cond:A=>Boolean,msg:=>Any):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: (RefinedType) => Boolean): RefinedType", "member" : "scala.Predef.Ensuring.ensuring", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/RefinedType.html#ensuring(cond:A=>Boolean):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: Boolean, msg: => Any): RefinedType", "member" : "scala.Predef.Ensuring.ensuring", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/RefinedType.html#ensuring(cond:Boolean,msg:=>Any):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: Boolean): RefinedType", "member" : "scala.Predef.Ensuring.ensuring", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/RefinedType.html#ensuring(cond:Boolean):A", "kind" : "def"}, {"label" : "→", "tail" : "(y: B): (RefinedType, B)", "member" : "scala.Predef.ArrowAssoc.→", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/RefinedType.html#→[B](y:B):(A,B)", "kind" : "def"}, {"label" : "->", "tail" : "(y: B): (RefinedType, B)", "member" : "scala.Predef.ArrowAssoc.->", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/RefinedType.html#->[B](y:B):(A,B)", "kind" : "def"}, {"member" : "scala.tools.scalap.scalax.rules.scalasig.RefinedType#<init>", "error" : "unsupported entity"}, {"label" : "typeRefs", "tail" : ": List[Type]", "member" : "scala.tools.scalap.scalax.rules.scalasig.RefinedType.typeRefs", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/RefinedType.html#typeRefs:List[scala.tools.scalap.scalax.rules.scalasig.Type]", "kind" : "val"}, {"label" : "classSym", "tail" : ": Symbol", "member" : "scala.tools.scalap.scalax.rules.scalasig.RefinedType.classSym", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/RefinedType.html#classSym:scala.tools.scalap.scalax.rules.scalasig.Symbol", "kind" : "val"}, {"label" : "productElementNames", "tail" : "(): Iterator[String]", "member" : "scala.Product.productElementNames", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/RefinedType.html#productElementNames:Iterator[String]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/RefinedType.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/RefinedType.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/RefinedType.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/RefinedType.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/RefinedType.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/RefinedType.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/RefinedType.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/RefinedType.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/RefinedType.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/RefinedType.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/RefinedType.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/RefinedType.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/RefinedType.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/RefinedType.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/RefinedType.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/RefinedType.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/RefinedType.html", "kind" : "case class"}, {"name" : "scala.tools.scalap.scalax.rules.scalasig.ScalaSig", "shortDescription" : "", "members_case class" : [{"label" : "+", "tail" : "(other: String): String", "member" : "scala.Predef.any2stringadd.+", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/ScalaSig.html#+(other:String):String", "kind" : "def"}, {"label" : "formatted", "tail" : "(fmtstr: String): String", "member" : "scala.Predef.StringFormat.formatted", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/ScalaSig.html#formatted(fmtstr:String):String", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: (ScalaSig) => Boolean, msg: => Any): ScalaSig", "member" : "scala.Predef.Ensuring.ensuring", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/ScalaSig.html#ensuring(cond:A=>Boolean,msg:=>Any):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: (ScalaSig) => Boolean): ScalaSig", "member" : "scala.Predef.Ensuring.ensuring", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/ScalaSig.html#ensuring(cond:A=>Boolean):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: Boolean, msg: => Any): ScalaSig", "member" : "scala.Predef.Ensuring.ensuring", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/ScalaSig.html#ensuring(cond:Boolean,msg:=>Any):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: Boolean): ScalaSig", "member" : "scala.Predef.Ensuring.ensuring", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/ScalaSig.html#ensuring(cond:Boolean):A", "kind" : "def"}, {"label" : "→", "tail" : "(y: B): (ScalaSig, B)", "member" : "scala.Predef.ArrowAssoc.→", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/ScalaSig.html#→[B](y:B):(A,B)", "kind" : "def"}, {"label" : "->", "tail" : "(y: B): (ScalaSig, B)", "member" : "scala.Predef.ArrowAssoc.->", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/ScalaSig.html#->[B](y:B):(A,B)", "kind" : "def"}, {"label" : "topLevelObjects", "tail" : ": List[ObjectSymbol]", "member" : "scala.tools.scalap.scalax.rules.scalasig.ScalaSig.topLevelObjects", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/ScalaSig.html#topLevelObjects:List[scala.tools.scalap.scalax.rules.scalasig.ObjectSymbol]", "kind" : "lazy val"}, {"label" : "topLevelClasses", "tail" : ": List[ClassSymbol]", "member" : "scala.tools.scalap.scalax.rules.scalasig.ScalaSig.topLevelClasses", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/ScalaSig.html#topLevelClasses:List[scala.tools.scalap.scalax.rules.scalasig.ClassSymbol]", "kind" : "lazy val"}, {"label" : "symbols", "tail" : ": Seq[Symbol]", "member" : "scala.tools.scalap.scalax.rules.scalasig.ScalaSig.symbols", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/ScalaSig.html#symbols:Seq[scala.tools.scalap.scalax.rules.scalasig.Symbol]", "kind" : "lazy val"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.tools.scalap.scalax.rules.scalasig.ScalaSig.toString", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/ScalaSig.html#toString():String", "kind" : "def"}, {"label" : "applyRule", "tail" : "(parser: Parser[A]): A", "member" : "scala.tools.scalap.scalax.rules.scalasig.ScalaSig.applyRule", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/ScalaSig.html#applyRule[A](parser:scala.tools.scalap.scalax.rules.scalasig.ScalaSigParsers.Parser[A]):A", "kind" : "implicit def"}, {"label" : "parseEntry", "tail" : "(index: Int): Any", "member" : "scala.tools.scalap.scalax.rules.scalasig.ScalaSig.parseEntry", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/ScalaSig.html#parseEntry(index:Int):Any", "kind" : "def"}, {"label" : "getEntry", "tail" : "(index: Int): Entry", "member" : "scala.tools.scalap.scalax.rules.scalasig.ScalaSig.getEntry", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/ScalaSig.html#getEntry(index:Int):ScalaSig.this.Entry", "kind" : "def"}, {"label" : "hasEntry", "tail" : "(index: Int): Boolean", "member" : "scala.tools.scalap.scalax.rules.scalasig.ScalaSig.hasEntry", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/ScalaSig.html#hasEntry(index:Int):Boolean", "kind" : "def"}, {"label" : "Entry", "tail" : "", "member" : "scala.tools.scalap.scalax.rules.scalasig.ScalaSig.Entry", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/ScalaSig.html#EntryextendsDefaultMemoisablewithProductwithSerializable", "kind" : "case class"}, {"member" : "scala.tools.scalap.scalax.rules.scalasig.ScalaSig#<init>", "error" : "unsupported entity"}, {"label" : "table", "tail" : ": Seq[~[Int, ByteCode]]", "member" : "scala.tools.scalap.scalax.rules.scalasig.ScalaSig.table", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/ScalaSig.html#table:Seq[Int~scala.tools.scalap.scalax.rules.scalasig.ByteCode]", "kind" : "val"}, {"label" : "minorVersion", "tail" : ": Int", "member" : "scala.tools.scalap.scalax.rules.scalasig.ScalaSig.minorVersion", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/ScalaSig.html#minorVersion:Int", "kind" : "val"}, {"label" : "majorVersion", "tail" : ": Int", "member" : "scala.tools.scalap.scalax.rules.scalasig.ScalaSig.majorVersion", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/ScalaSig.html#majorVersion:Int", "kind" : "val"}, {"label" : "productElementNames", "tail" : "(): Iterator[String]", "member" : "scala.Product.productElementNames", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/ScalaSig.html#productElementNames:Iterator[String]", "kind" : "def"}, {"label" : "onSuccess", "tail" : "(key: AnyRef, result: Success[S, T]): Unit", "member" : "scala.tools.scalap.scalax.rules.DefaultMemoisable.onSuccess", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/ScalaSig.html#onSuccess[S,T](key:AnyRef,result:scala.tools.scalap.scalax.rules.Success[S,T]):Unit", "kind" : "def"}, {"label" : "compute", "tail" : "(key: AnyRef, a: => A): Any", "member" : "scala.tools.scalap.scalax.rules.DefaultMemoisable.compute", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/ScalaSig.html#compute[A](key:AnyRef,a:=>A):Any", "kind" : "def"}, {"label" : "memo", "tail" : "(key: AnyRef, a: => A): A", "member" : "scala.tools.scalap.scalax.rules.DefaultMemoisable.memo", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/ScalaSig.html#memo[A](key:AnyRef,a:=>A):A", "kind" : "def"}, {"label" : "map", "tail" : ": HashMap[AnyRef, Any]", "member" : "scala.tools.scalap.scalax.rules.DefaultMemoisable.map", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/ScalaSig.html#map:scala.collection.mutable.HashMap[AnyRef,Any]", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/ScalaSig.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/ScalaSig.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/ScalaSig.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/ScalaSig.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/ScalaSig.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/ScalaSig.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/ScalaSig.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/ScalaSig.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/ScalaSig.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/ScalaSig.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/ScalaSig.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/ScalaSig.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/ScalaSig.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/ScalaSig.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/ScalaSig.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/ScalaSig.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/ScalaSig.html", "kind" : "case class"}, {"name" : "scala.tools.scalap.scalax.rules.scalasig.ScalaSigAttributeParsers", "shortDescription" : "", "object" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/ScalaSigAttributeParsers$.html", "members_object" : [{"label" : "DefaultRule", "tail" : "", "member" : "scala.tools.scalap.scalax.rules.Rules.DefaultRule", "link" : "scala\/tools\/scalap\/scalax\/rules\/Rules.html#DefaultRule[In,Out,A,X]extendsRule[In,Out,A,X]", "kind" : "class"}, {"label" : "FromRule", "tail" : "", "member" : "scala.tools.scalap.scalax.rules.Rules.FromRule", "link" : "scala\/tools\/scalap\/scalax\/rules\/Rules.html#FromRule[In]extendsAnyRef", "kind" : "trait"}, {"label" : "longValue", "tail" : ": rules.Rule[S, S, Long, Nothing]", "member" : "scala.tools.scalap.scalax.rules.scalasig.ScalaSigAttributeParsers.longValue", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/ScalaSigAttributeParsers$.html#longValue:scala.tools.scalap.scalax.rules.Rule[scala.tools.scalap.scalax.rules.scalasig.ScalaSigAttributeParsers.S,scala.tools.scalap.scalax.rules.scalasig.ScalaSigAttributeParsers.S,Long,Nothing]", "kind" : "val"}, {"label" : "utf8", "tail" : ": rules.Rule[S, S, String, Nothing]", "member" : "scala.tools.scalap.scalax.rules.scalasig.ScalaSigAttributeParsers.utf8", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/ScalaSigAttributeParsers$.html#utf8:scala.tools.scalap.scalax.rules.Rule[scala.tools.scalap.scalax.rules.scalasig.ScalaSigAttributeParsers.S,scala.tools.scalap.scalax.rules.scalasig.ScalaSigAttributeParsers.S,String,Nothing]", "kind" : "val"}, {"label" : "scalaSig", "tail" : ": rules.Rule[S, S, ScalaSig, Nothing]", "member" : "scala.tools.scalap.scalax.rules.scalasig.ScalaSigAttributeParsers.scalaSig", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/ScalaSigAttributeParsers$.html#scalaSig:scala.tools.scalap.scalax.rules.Rule[scala.tools.scalap.scalax.rules.scalasig.ScalaSigAttributeParsers.S,scala.tools.scalap.scalax.rules.scalasig.ScalaSigAttributeParsers.S,scala.tools.scalap.scalax.rules.scalasig.ScalaSig,Nothing]", "kind" : "val"}, {"label" : "symtab", "tail" : ": rules.Rule[S, S, Seq[~[Int, ByteCode]], Nothing]", "member" : "scala.tools.scalap.scalax.rules.scalasig.ScalaSigAttributeParsers.symtab", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/ScalaSigAttributeParsers$.html#symtab:scala.tools.scalap.scalax.rules.Rule[scala.tools.scalap.scalax.rules.scalasig.ScalaSigAttributeParsers.S,scala.tools.scalap.scalax.rules.scalasig.ScalaSigAttributeParsers.S,Seq[Int~scala.tools.scalap.scalax.rules.scalasig.ByteCode],Nothing]", "kind" : "val"}, {"label" : "entry", "tail" : ": rules.Rule[S, S, ~[Int, ByteCode], Nothing]", "member" : "scala.tools.scalap.scalax.rules.scalasig.ScalaSigAttributeParsers.entry", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/ScalaSigAttributeParsers$.html#entry:scala.tools.scalap.scalax.rules.Rule[scala.tools.scalap.scalax.rules.scalasig.ScalaSigAttributeParsers.S,scala.tools.scalap.scalax.rules.scalasig.ScalaSigAttributeParsers.S,Int~scala.tools.scalap.scalax.rules.scalasig.ByteCode,Nothing]", "kind" : "val"}, {"label" : "rawBytes", "tail" : ": rules.Rule[S, S, ByteCode, Nothing]", "member" : "scala.tools.scalap.scalax.rules.scalasig.ScalaSigAttributeParsers.rawBytes", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/ScalaSigAttributeParsers$.html#rawBytes:scala.tools.scalap.scalax.rules.Rule[scala.tools.scalap.scalax.rules.scalasig.ScalaSigAttributeParsers.S,scala.tools.scalap.scalax.rules.scalasig.ScalaSigAttributeParsers.S,scala.tools.scalap.scalax.rules.scalasig.ByteCode,Nothing]", "kind" : "val"}, {"label" : "nat", "tail" : ": rules.Rule[S, S, Int, Nothing]", "member" : "scala.tools.scalap.scalax.rules.scalasig.ScalaSigAttributeParsers.nat", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/ScalaSigAttributeParsers$.html#nat:scala.tools.scalap.scalax.rules.Rule[scala.tools.scalap.scalax.rules.scalasig.ScalaSigAttributeParsers.S,scala.tools.scalap.scalax.rules.scalasig.ScalaSigAttributeParsers.S,Int,Nothing]", "kind" : "val"}, {"label" : "parse", "tail" : "(byteCode: ByteCode): ScalaSig", "member" : "scala.tools.scalap.scalax.rules.scalasig.ScalaSigAttributeParsers.parse", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/ScalaSigAttributeParsers$.html#parse(byteCode:scala.tools.scalap.scalax.rules.scalasig.ByteCode):scala.tools.scalap.scalax.rules.scalasig.ScalaSig", "kind" : "def"}, {"label" : "bytes", "tail" : "(n: Int): rules.Rule[S, S, ByteCode, Nothing]", "member" : "scala.tools.scalap.scalax.rules.scalasig.ByteCodeReader.bytes", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/ScalaSigAttributeParsers$.html#bytes(n:Int):scala.tools.scalap.scalax.rules.Rule[ByteCodeReader.this.S,ByteCodeReader.this.S,scala.tools.scalap.scalax.rules.scalasig.ByteCode,Nothing]", "kind" : "def"}, {"label" : "u4", "tail" : ": rules.Rule[S, S, Int, Nothing]", "member" : "scala.tools.scalap.scalax.rules.scalasig.ByteCodeReader.u4", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/ScalaSigAttributeParsers$.html#u4:scala.tools.scalap.scalax.rules.Rule[ByteCodeReader.this.S,ByteCodeReader.this.S,Int,Nothing]", "kind" : "val"}, {"label" : "u2", "tail" : ": rules.Rule[S, S, Int, Nothing]", "member" : "scala.tools.scalap.scalax.rules.scalasig.ByteCodeReader.u2", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/ScalaSigAttributeParsers$.html#u2:scala.tools.scalap.scalax.rules.Rule[ByteCodeReader.this.S,ByteCodeReader.this.S,Int,Nothing]", "kind" : "val"}, {"label" : "u1", "tail" : ": rules.Rule[S, S, Int, Nothing]", "member" : "scala.tools.scalap.scalax.rules.scalasig.ByteCodeReader.u1", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/ScalaSigAttributeParsers$.html#u1:scala.tools.scalap.scalax.rules.Rule[ByteCodeReader.this.S,ByteCodeReader.this.S,Int,Nothing]", "kind" : "val"}, {"label" : "byte", "tail" : ": rules.Rule[S, S, Byte, Nothing]", "member" : "scala.tools.scalap.scalax.rules.scalasig.ByteCodeReader.byte", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/ScalaSigAttributeParsers$.html#byte:scala.tools.scalap.scalax.rules.Rule[ByteCodeReader.this.S,ByteCodeReader.this.S,Byte,Nothing]", "kind" : "val"}, {"label" : "Parser", "tail" : "", "member" : "scala.tools.scalap.scalax.rules.scalasig.ByteCodeReader.Parser", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/ScalaSigAttributeParsers$.html#Parser[A]=ByteCodeReader.this.Rule[A,String]", "kind" : "type"}, {"label" : "S", "tail" : "", "member" : "scala.tools.scalap.scalax.rules.scalasig.ByteCodeReader.S", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/ScalaSigAttributeParsers$.html#S=scala.tools.scalap.scalax.rules.scalasig.ByteCode", "kind" : "type"}, {"label" : "factory", "tail" : ": RulesWithState", "member" : "scala.tools.scalap.scalax.rules.RulesWithState.factory", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/ScalaSigAttributeParsers$.html#factory:scala.tools.scalap.scalax.rules.RulesWithState", "kind" : "val"}, {"label" : "repeatUntil", "tail" : "(rule: Rule[(T) => T, X])(finished: (T) => Boolean)(initial: T): rules.Rule[S, S, T, X]", "member" : "scala.tools.scalap.scalax.rules.StateRules.repeatUntil", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/ScalaSigAttributeParsers$.html#repeatUntil[T,X](rule:StateRules.this.Rule[T=>T,X])(finished:T=>Boolean)(initial:T):scala.tools.scalap.scalax.rules.Rule[StateRules.this.S,StateRules.this.S,T,X]", "kind" : "def"}, {"label" : "anyOf", "tail" : "(rules: Seq[Rule[A, X]]): rules.Rule[S, S, collection.immutable.List[A], X]", "member" : "scala.tools.scalap.scalax.rules.StateRules.anyOf", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/ScalaSigAttributeParsers$.html#anyOf[A,X](rules:Seq[StateRules.this.Rule[A,X]]):scala.tools.scalap.scalax.rules.Rule[StateRules.this.S,StateRules.this.S,List[A],X]", "kind" : "def"}, {"label" : "allOf", "tail" : "(rules: Seq[Rule[A, X]]): (S) => Result[S, List[A], X]", "member" : "scala.tools.scalap.scalax.rules.StateRules.allOf", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/ScalaSigAttributeParsers$.html#allOf[A,X](rules:Seq[StateRules.this.Rule[A,X]]):StateRules.this.S=>scala.tools.scalap.scalax.rules.Result[StateRules.this.S,List[A],X]", "kind" : "def"}, {"label" : "cond", "tail" : "(f: (S) => Boolean): rules.Rule[S, S, S, Nothing]", "member" : "scala.tools.scalap.scalax.rules.StateRules.cond", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/ScalaSigAttributeParsers$.html#cond(f:StateRules.this.S=>Boolean):scala.tools.scalap.scalax.rules.Rule[StateRules.this.S,StateRules.this.S,StateRules.this.S,Nothing]", "kind" : "def"}, {"label" : "none", "tail" : "(): rules.Rule[S, S, None.type, Nothing]", "member" : "scala.tools.scalap.scalax.rules.StateRules.none", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/ScalaSigAttributeParsers$.html#none:scala.tools.scalap.scalax.rules.Rule[StateRules.this.S,StateRules.this.S,None.type,Nothing]", "kind" : "def"}, {"label" : "nil", "tail" : "(): rules.Rule[S, S, collection.immutable.Nil.type, Nothing]", "member" : "scala.tools.scalap.scalax.rules.StateRules.nil", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/ScalaSigAttributeParsers$.html#nil:scala.tools.scalap.scalax.rules.Rule[StateRules.this.S,StateRules.this.S,scala.collection.immutable.Nil.type,Nothing]", "kind" : "def"}, {"label" : "update", "tail" : "(f: (S) => S): rules.Rule[S, S, S, Nothing]", "member" : "scala.tools.scalap.scalax.rules.StateRules.update", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/ScalaSigAttributeParsers$.html#update(f:StateRules.this.S=>StateRules.this.S):scala.tools.scalap.scalax.rules.Rule[StateRules.this.S,StateRules.this.S,StateRules.this.S,Nothing]", "kind" : "def"}, {"label" : "set", "tail" : "(s: => S): rules.Rule[S, S, S, Nothing]", "member" : "scala.tools.scalap.scalax.rules.StateRules.set", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/ScalaSigAttributeParsers$.html#set(s:=>StateRules.this.S):scala.tools.scalap.scalax.rules.Rule[StateRules.this.S,StateRules.this.S,StateRules.this.S,Nothing]", "kind" : "def"}, {"label" : "get", "tail" : "(): rules.Rule[S, S, S, Nothing]", "member" : "scala.tools.scalap.scalax.rules.StateRules.get", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/ScalaSigAttributeParsers$.html#get:scala.tools.scalap.scalax.rules.Rule[StateRules.this.S,StateRules.this.S,StateRules.this.S,Nothing]", "kind" : "def"}, {"label" : "read", "tail" : "(f: (S) => A): rules.Rule[S, S, A, Nothing]", "member" : "scala.tools.scalap.scalax.rules.StateRules.read", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/ScalaSigAttributeParsers$.html#read[A](f:StateRules.this.S=>A):scala.tools.scalap.scalax.rules.Rule[StateRules.this.S,StateRules.this.S,A,Nothing]", "kind" : "def"}, {"label" : "unit", "tail" : "(a: => A): rules.Rule[S, S, A, Nothing]", "member" : "scala.tools.scalap.scalax.rules.StateRules.unit", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/ScalaSigAttributeParsers$.html#unit[A](a:=>A):scala.tools.scalap.scalax.rules.Rule[StateRules.this.S,StateRules.this.S,A,Nothing]", "kind" : "def"}, {"label" : "apply", "tail" : "(f: (S) => Result[S, A, X]): rules.Rule[S, S, A, X]", "member" : "scala.tools.scalap.scalax.rules.StateRules.apply", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/ScalaSigAttributeParsers$.html#apply[A,X](f:StateRules.this.S=>scala.tools.scalap.scalax.rules.Result[StateRules.this.S,A,X]):scala.tools.scalap.scalax.rules.Rule[StateRules.this.S,StateRules.this.S,A,X]", "kind" : "def"}, {"label" : "Rule", "tail" : "", "member" : "scala.tools.scalap.scalax.rules.StateRules.Rule", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/ScalaSigAttributeParsers$.html#Rule[+A,+X]=scala.tools.scalap.scalax.rules.Rule[StateRules.this.S,StateRules.this.S,A,X]", "kind" : "type"}, {"label" : "expect", "tail" : "(rule: rules.Rule[In, Out, A, R]): (In) => A", "member" : "scala.tools.scalap.scalax.rules.Rules.expect", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/ScalaSigAttributeParsers$.html#expect[In,Out,A,R](rule:scala.tools.scalap.scalax.rules.Rule[In,Out,A,R]):In=>A", "kind" : "def"}, {"label" : "ruleWithName", "tail" : "(_name: String, f: (In) => Result[Out, A, X]): rules.Rule[In, Out, A, X] with Name", "member" : "scala.tools.scalap.scalax.rules.Rules.ruleWithName", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/ScalaSigAttributeParsers$.html#ruleWithName[In,Out,A,X](_name:String,f:In=>scala.tools.scalap.scalax.rules.Result[Out,A,X]):scala.tools.scalap.scalax.rules.Rule[In,Out,A,X]withscala.tools.scalap.scalax.rules.Name", "kind" : "def"}, {"label" : "oneOf", "tail" : "(rules: rules.Rule[In, Out, A, X]*): rules.Rule[In, Out, A, X]", "member" : "scala.tools.scalap.scalax.rules.Rules.oneOf", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/ScalaSigAttributeParsers$.html#oneOf[In,Out,A,X](rules:scala.tools.scalap.scalax.rules.Rule[In,Out,A,X]*):scala.tools.scalap.scalax.rules.Rule[In,Out,A,X]", "kind" : "def"}, {"label" : "error", "tail" : "(err: X): rules.Rule[Any, Nothing, Nothing, X]", "member" : "scala.tools.scalap.scalax.rules.Rules.error", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/ScalaSigAttributeParsers$.html#error[X](err:X):scala.tools.scalap.scalax.rules.Rule[Any,Nothing,Nothing,X]", "kind" : "def"}, {"label" : "error", "tail" : "(): rules.Rule[In, Nothing, Nothing, In]", "member" : "scala.tools.scalap.scalax.rules.Rules.error", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/ScalaSigAttributeParsers$.html#error[In]:scala.tools.scalap.scalax.rules.Rule[In,Nothing,Nothing,In]", "kind" : "def"}, {"label" : "failure", "tail" : "(): rules.Rule[Any, Nothing, Nothing, Nothing]", "member" : "scala.tools.scalap.scalax.rules.Rules.failure", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/ScalaSigAttributeParsers$.html#failure:scala.tools.scalap.scalax.rules.Rule[Any,Nothing,Nothing,Nothing]", "kind" : "def"}, {"label" : "success", "tail" : "(out: Out, a: A): rules.Rule[Any, Out, A, Nothing]", "member" : "scala.tools.scalap.scalax.rules.Rules.success", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/ScalaSigAttributeParsers$.html#success[Out,A](out:Out,a:A):scala.tools.scalap.scalax.rules.Rule[Any,Out,A,Nothing]", "kind" : "def"}, {"label" : "state", "tail" : "(): StateRules { type S = s }", "member" : "scala.tools.scalap.scalax.rules.Rules.state", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/ScalaSigAttributeParsers$.html#state[s]:scala.tools.scalap.scalax.rules.StateRules{typeS=s}", "kind" : "def"}, {"label" : "from", "tail" : "(): FromRule[In]", "member" : "scala.tools.scalap.scalax.rules.Rules.from", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/ScalaSigAttributeParsers$.html#from[In]:Rules.this.FromRule[In]", "kind" : "def"}, {"label" : "seqRule", "tail" : "(rule: rules.Rule[In, In, A, X]): SeqRule[In, A, X]", "member" : "scala.tools.scalap.scalax.rules.Rules.seqRule", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/ScalaSigAttributeParsers$.html#seqRule[In,A,X](rule:scala.tools.scalap.scalax.rules.Rule[In,In,A,X]):scala.tools.scalap.scalax.rules.SeqRule[In,A,X]", "kind" : "implicit def"}, {"label" : "inRule", "tail" : "(rule: rules.Rule[In, Out, A, X]): InRule[In, Out, A, X]", "member" : "scala.tools.scalap.scalax.rules.Rules.inRule", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/ScalaSigAttributeParsers$.html#inRule[In,Out,A,X](rule:scala.tools.scalap.scalax.rules.Rule[In,Out,A,X]):scala.tools.scalap.scalax.rules.InRule[In,Out,A,X]", "kind" : "implicit def"}, {"label" : "rule", "tail" : "(f: (In) => Result[Out, A, X]): rules.Rule[In, Out, A, X]", "member" : "scala.tools.scalap.scalax.rules.Rules.rule", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/ScalaSigAttributeParsers$.html#rule[In,Out,A,X](f:In=>scala.tools.scalap.scalax.rules.Result[Out,A,X]):scala.tools.scalap.scalax.rules.Rule[In,Out,A,X]", "kind" : "implicit def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/ScalaSigAttributeParsers$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/ScalaSigAttributeParsers$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/ScalaSigAttributeParsers$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/ScalaSigAttributeParsers$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/ScalaSigAttributeParsers$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/ScalaSigAttributeParsers$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/ScalaSigAttributeParsers$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/ScalaSigAttributeParsers$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/ScalaSigAttributeParsers$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/ScalaSigAttributeParsers$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/ScalaSigAttributeParsers$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/ScalaSigAttributeParsers$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/ScalaSigAttributeParsers$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/ScalaSigAttributeParsers$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/ScalaSigAttributeParsers$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/ScalaSigAttributeParsers$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/ScalaSigAttributeParsers$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/ScalaSigAttributeParsers$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/ScalaSigAttributeParsers$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "scala.tools.scalap.scalax.rules.scalasig.ScalaSigEntryParsers", "shortDescription" : "", "object" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/ScalaSigEntryParsers$.html", "members_object" : [{"label" : "DefaultRule", "tail" : "", "member" : "scala.tools.scalap.scalax.rules.Rules.DefaultRule", "link" : "scala\/tools\/scalap\/scalax\/rules\/Rules.html#DefaultRule[In,Out,A,X]extendsRule[In,Out,A,X]", "kind" : "class"}, {"label" : "FromRule", "tail" : "", "member" : "scala.tools.scalap.scalax.rules.Rules.FromRule", "link" : "scala\/tools\/scalap\/scalax\/rules\/Rules.html#FromRule[In]extendsAnyRef", "kind" : "trait"}, {"label" : "isTopLevelClass", "tail" : "(symbol: Symbol): Boolean", "member" : "scala.tools.scalap.scalax.rules.scalasig.ScalaSigEntryParsers.isTopLevelClass", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/ScalaSigEntryParsers$.html#isTopLevelClass(symbol:scala.tools.scalap.scalax.rules.scalasig.Symbol):Boolean", "kind" : "def"}, {"label" : "isTopLevel", "tail" : "(symbol: Symbol): Boolean", "member" : "scala.tools.scalap.scalax.rules.scalasig.ScalaSigEntryParsers.isTopLevel", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/ScalaSigEntryParsers$.html#isTopLevel(symbol:scala.tools.scalap.scalax.rules.scalasig.Symbol):Boolean", "kind" : "def"}, {"label" : "topLevelObject", "tail" : ": rules.Rule[S, S, ObjectSymbol, String]", "member" : "scala.tools.scalap.scalax.rules.scalasig.ScalaSigEntryParsers.topLevelObject", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/ScalaSigEntryParsers$.html#topLevelObject:scala.tools.scalap.scalax.rules.Rule[scala.tools.scalap.scalax.rules.scalasig.ScalaSigEntryParsers.S,scala.tools.scalap.scalax.rules.scalasig.ScalaSigEntryParsers.S,scala.tools.scalap.scalax.rules.scalasig.ObjectSymbol,String]", "kind" : "lazy val"}, {"label" : "topLevelClass", "tail" : ": rules.Rule[S, S, ClassSymbol, String]", "member" : "scala.tools.scalap.scalax.rules.scalasig.ScalaSigEntryParsers.topLevelClass", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/ScalaSigEntryParsers$.html#topLevelClass:scala.tools.scalap.scalax.rules.Rule[scala.tools.scalap.scalax.rules.scalasig.ScalaSigEntryParsers.S,scala.tools.scalap.scalax.rules.scalasig.ScalaSigEntryParsers.S,scala.tools.scalap.scalax.rules.scalasig.ClassSymbol,String]", "kind" : "lazy val"}, {"label" : "annotInfo", "tail" : ": rules.Rule[S, S, AnnotInfo, String]", "member" : "scala.tools.scalap.scalax.rules.scalasig.ScalaSigEntryParsers.annotInfo", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/ScalaSigEntryParsers$.html#annotInfo:scala.tools.scalap.scalax.rules.Rule[scala.tools.scalap.scalax.rules.scalasig.ScalaSigEntryParsers.S,scala.tools.scalap.scalax.rules.scalasig.ScalaSigEntryParsers.S,scala.tools.scalap.scalax.rules.scalasig.AnnotInfo,String]", "kind" : "lazy val"}, {"label" : "children", "tail" : ": rules.Rule[S, S, Children, String]", "member" : "scala.tools.scalap.scalax.rules.scalasig.ScalaSigEntryParsers.children", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/ScalaSigEntryParsers$.html#children:scala.tools.scalap.scalax.rules.Rule[scala.tools.scalap.scalax.rules.scalasig.ScalaSigEntryParsers.S,scala.tools.scalap.scalax.rules.scalasig.ScalaSigEntryParsers.S,scala.tools.scalap.scalax.rules.scalasig.Children,String]", "kind" : "lazy val"}, {"label" : "attributeInfo", "tail" : ": rules.Rule[S, S, AttributeInfo, String]", "member" : "scala.tools.scalap.scalax.rules.scalasig.ScalaSigEntryParsers.attributeInfo", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/ScalaSigEntryParsers$.html#attributeInfo:scala.tools.scalap.scalax.rules.Rule[scala.tools.scalap.scalax.rules.scalasig.ScalaSigEntryParsers.S,scala.tools.scalap.scalax.rules.scalasig.ScalaSigEntryParsers.S,scala.tools.scalap.scalax.rules.scalasig.AttributeInfo,String]", "kind" : "lazy val"}, {"label" : "literal", "tail" : ": EntryParser[Any]", "member" : "scala.tools.scalap.scalax.rules.scalasig.ScalaSigEntryParsers.literal", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/ScalaSigEntryParsers$.html#literal:scala.tools.scalap.scalax.rules.scalasig.ScalaSigEntryParsers.EntryParser[Any]", "kind" : "lazy val"}, {"label" : "typeEntry", "tail" : ": EntryParser[Type]", "member" : "scala.tools.scalap.scalax.rules.scalasig.ScalaSigEntryParsers.typeEntry", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/ScalaSigEntryParsers$.html#typeEntry:scala.tools.scalap.scalax.rules.scalasig.ScalaSigEntryParsers.EntryParser[scala.tools.scalap.scalax.rules.scalasig.Type]", "kind" : "lazy val"}, {"label" : "typeIndex", "tail" : ": rules.Rule[ScalaSigAttributeParsers.S, ScalaSigAttributeParsers.S, Int, Nothing]", "member" : "scala.tools.scalap.scalax.rules.scalasig.ScalaSigEntryParsers.typeIndex", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/ScalaSigEntryParsers$.html#typeIndex:scala.tools.scalap.scalax.rules.Rule[scala.tools.scalap.scalax.rules.scalasig.ScalaSigAttributeParsers.S,scala.tools.scalap.scalax.rules.scalasig.ScalaSigAttributeParsers.S,Int,Nothing]", "kind" : "val"}, {"label" : "typeLevel", "tail" : ": rules.Rule[ScalaSigAttributeParsers.S, ScalaSigAttributeParsers.S, Int, Nothing]", "member" : "scala.tools.scalap.scalax.rules.scalasig.ScalaSigEntryParsers.typeLevel", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/ScalaSigEntryParsers$.html#typeLevel:scala.tools.scalap.scalax.rules.Rule[scala.tools.scalap.scalax.rules.scalasig.ScalaSigAttributeParsers.S,scala.tools.scalap.scalax.rules.scalasig.ScalaSigAttributeParsers.S,Int,Nothing]", "kind" : "val"}, {"label" : "attribTreeRef", "tail" : ": EntryParser[Int]", "member" : "scala.tools.scalap.scalax.rules.scalasig.ScalaSigEntryParsers.attribTreeRef", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/ScalaSigEntryParsers$.html#attribTreeRef:scala.tools.scalap.scalax.rules.scalasig.ScalaSigEntryParsers.EntryParser[Int]", "kind" : "val"}, {"label" : "classSymRef", "tail" : ": EntryParser[ClassSymbol]", "member" : "scala.tools.scalap.scalax.rules.scalasig.ScalaSigEntryParsers.classSymRef", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/ScalaSigEntryParsers$.html#classSymRef:scala.tools.scalap.scalax.rules.scalasig.ScalaSigEntryParsers.EntryParser[scala.tools.scalap.scalax.rules.scalasig.ClassSymbol]", "kind" : "val"}, {"label" : "symbol", "tail" : ": EntryParser[Symbol]", "member" : "scala.tools.scalap.scalax.rules.scalasig.ScalaSigEntryParsers.symbol", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/ScalaSigEntryParsers$.html#symbol:scala.tools.scalap.scalax.rules.scalasig.ScalaSigEntryParsers.EntryParser[scala.tools.scalap.scalax.rules.scalasig.Symbol]", "kind" : "lazy val"}, {"label" : "extModClassRef", "tail" : ": rules.Rule[S, S, ExternalSymbol, String] with Name", "member" : "scala.tools.scalap.scalax.rules.scalasig.ScalaSigEntryParsers.extModClassRef", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/ScalaSigEntryParsers$.html#extModClassRef:scala.tools.scalap.scalax.rules.Rule[scala.tools.scalap.scalax.rules.scalasig.ScalaSigEntryParsers.S,scala.tools.scalap.scalax.rules.scalasig.ScalaSigEntryParsers.S,scala.tools.scalap.scalax.rules.scalasig.ExternalSymbol,String]withscala.tools.scalap.scalax.rules.Name", "kind" : "val"}, {"label" : "extRef", "tail" : ": rules.Rule[S, S, ExternalSymbol, String] with Name", "member" : "scala.tools.scalap.scalax.rules.scalasig.ScalaSigEntryParsers.extRef", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/ScalaSigEntryParsers$.html#extRef:scala.tools.scalap.scalax.rules.Rule[scala.tools.scalap.scalax.rules.scalasig.ScalaSigEntryParsers.S,scala.tools.scalap.scalax.rules.scalasig.ScalaSigEntryParsers.S,scala.tools.scalap.scalax.rules.scalasig.ExternalSymbol,String]withscala.tools.scalap.scalax.rules.Name", "kind" : "val"}, {"label" : "methodSymbol", "tail" : ": rules.Rule[S, S, MethodSymbol, String] with Name", "member" : "scala.tools.scalap.scalax.rules.scalasig.ScalaSigEntryParsers.methodSymbol", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/ScalaSigEntryParsers$.html#methodSymbol:scala.tools.scalap.scalax.rules.Rule[scala.tools.scalap.scalax.rules.scalasig.ScalaSigEntryParsers.S,scala.tools.scalap.scalax.rules.scalasig.ScalaSigEntryParsers.S,scala.tools.scalap.scalax.rules.scalasig.MethodSymbol,String]withscala.tools.scalap.scalax.rules.Name", "kind" : "val"}, {"label" : "objectSymbol", "tail" : ": rules.Rule[S, S, ObjectSymbol, String] with Name", "member" : "scala.tools.scalap.scalax.rules.scalasig.ScalaSigEntryParsers.objectSymbol", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/ScalaSigEntryParsers$.html#objectSymbol:scala.tools.scalap.scalax.rules.Rule[scala.tools.scalap.scalax.rules.scalasig.ScalaSigEntryParsers.S,scala.tools.scalap.scalax.rules.scalasig.ScalaSigEntryParsers.S,scala.tools.scalap.scalax.rules.scalasig.ObjectSymbol,String]withscala.tools.scalap.scalax.rules.Name", "kind" : "val"}, {"label" : "classSymbol", "tail" : ": rules.Rule[S, S, ClassSymbol, String] with Name", "member" : "scala.tools.scalap.scalax.rules.scalasig.ScalaSigEntryParsers.classSymbol", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/ScalaSigEntryParsers$.html#classSymbol:scala.tools.scalap.scalax.rules.Rule[scala.tools.scalap.scalax.rules.scalasig.ScalaSigEntryParsers.S,scala.tools.scalap.scalax.rules.scalasig.ScalaSigEntryParsers.S,scala.tools.scalap.scalax.rules.scalasig.ClassSymbol,String]withscala.tools.scalap.scalax.rules.Name", "kind" : "val"}, {"label" : "aliasSymbol", "tail" : ": rules.Rule[S, S, AliasSymbol, String] with Name", "member" : "scala.tools.scalap.scalax.rules.scalasig.ScalaSigEntryParsers.aliasSymbol", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/ScalaSigEntryParsers$.html#aliasSymbol:scala.tools.scalap.scalax.rules.Rule[scala.tools.scalap.scalax.rules.scalasig.ScalaSigEntryParsers.S,scala.tools.scalap.scalax.rules.scalasig.ScalaSigEntryParsers.S,scala.tools.scalap.scalax.rules.scalasig.AliasSymbol,String]withscala.tools.scalap.scalax.rules.Name", "kind" : "val"}, {"label" : "typeSymbol", "tail" : ": rules.Rule[S, S, TypeSymbol, String] with Name", "member" : "scala.tools.scalap.scalax.rules.scalasig.ScalaSigEntryParsers.typeSymbol", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/ScalaSigEntryParsers$.html#typeSymbol:scala.tools.scalap.scalax.rules.Rule[scala.tools.scalap.scalax.rules.scalasig.ScalaSigEntryParsers.S,scala.tools.scalap.scalax.rules.scalasig.ScalaSigEntryParsers.S,scala.tools.scalap.scalax.rules.scalasig.TypeSymbol,String]withscala.tools.scalap.scalax.rules.Name", "kind" : "val"}, {"label" : "noSymbol", "tail" : ": rules.Rule[S, S, NoSymbol.type, Nothing]", "member" : "scala.tools.scalap.scalax.rules.scalasig.ScalaSigEntryParsers.noSymbol", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/ScalaSigEntryParsers$.html#noSymbol:scala.tools.scalap.scalax.rules.Rule[scala.tools.scalap.scalax.rules.scalasig.ScalaSigEntryParsers.S,scala.tools.scalap.scalax.rules.scalasig.ScalaSigEntryParsers.S,scala.tools.scalap.scalax.rules.scalasig.NoSymbol.type,Nothing]", "kind" : "val"}, {"label" : "symbolEntry", "tail" : "(key: Int): rules.Rule[S, S, SymbolInfo, String]", "member" : "scala.tools.scalap.scalax.rules.scalasig.ScalaSigEntryParsers.symbolEntry", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/ScalaSigEntryParsers$.html#symbolEntry(key:Int):scala.tools.scalap.scalax.rules.Rule[scala.tools.scalap.scalax.rules.scalasig.ScalaSigEntryParsers.S,scala.tools.scalap.scalax.rules.scalasig.ScalaSigEntryParsers.S,scala.tools.scalap.scalax.rules.scalasig.SymbolInfo,String]", "kind" : "def"}, {"label" : "symHeader", "tail" : "(key: Int): EntryParser[Any]", "member" : "scala.tools.scalap.scalax.rules.scalasig.ScalaSigEntryParsers.symHeader", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/ScalaSigEntryParsers$.html#symHeader(key:Int):scala.tools.scalap.scalax.rules.scalasig.ScalaSigEntryParsers.EntryParser[Any]", "kind" : "def"}, {"label" : "symbolInfo", "tail" : ": rules.Rule[S, S, SymbolInfo, String]", "member" : "scala.tools.scalap.scalax.rules.scalasig.ScalaSigEntryParsers.symbolInfo", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/ScalaSigEntryParsers$.html#symbolInfo:scala.tools.scalap.scalax.rules.Rule[scala.tools.scalap.scalax.rules.scalasig.ScalaSigEntryParsers.S,scala.tools.scalap.scalax.rules.scalasig.ScalaSigEntryParsers.S,scala.tools.scalap.scalax.rules.scalasig.SymbolInfo,String]", "kind" : "val"}, {"label" : "constantRef", "tail" : ": EntryParser[Any]", "member" : "scala.tools.scalap.scalax.rules.scalasig.ScalaSigEntryParsers.constantRef", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/ScalaSigEntryParsers$.html#constantRef:scala.tools.scalap.scalax.rules.scalasig.ScalaSigEntryParsers.EntryParser[Any]", "kind" : "lazy val"}, {"label" : "typeRef", "tail" : ": EntryParser[Type]", "member" : "scala.tools.scalap.scalax.rules.scalasig.ScalaSigEntryParsers.typeRef", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/ScalaSigEntryParsers$.html#typeRef:scala.tools.scalap.scalax.rules.scalasig.ScalaSigEntryParsers.EntryParser[scala.tools.scalap.scalax.rules.scalasig.Type]", "kind" : "lazy val"}, {"label" : "symbolRef", "tail" : ": EntryParser[Symbol]", "member" : "scala.tools.scalap.scalax.rules.scalasig.ScalaSigEntryParsers.symbolRef", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/ScalaSigEntryParsers$.html#symbolRef:scala.tools.scalap.scalax.rules.scalasig.ScalaSigEntryParsers.EntryParser[scala.tools.scalap.scalax.rules.scalasig.Symbol]", "kind" : "lazy val"}, {"label" : "nameRef", "tail" : ": EntryParser[String]", "member" : "scala.tools.scalap.scalax.rules.scalasig.ScalaSigEntryParsers.nameRef", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/ScalaSigEntryParsers$.html#nameRef:scala.tools.scalap.scalax.rules.scalasig.ScalaSigEntryParsers.EntryParser[String]", "kind" : "lazy val"}, {"label" : "refTo", "tail" : "(rule: EntryParser[A]): EntryParser[A]", "member" : "scala.tools.scalap.scalax.rules.scalasig.ScalaSigEntryParsers.refTo", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/ScalaSigEntryParsers$.html#refTo[A](rule:scala.tools.scalap.scalax.rules.scalasig.ScalaSigEntryParsers.EntryParser[A]):scala.tools.scalap.scalax.rules.scalasig.ScalaSigEntryParsers.EntryParser[A]", "kind" : "def"}, {"label" : "name", "tail" : ": rules.Rule[S, S, String, String] with Name", "member" : "scala.tools.scalap.scalax.rules.scalasig.ScalaSigEntryParsers.name", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/ScalaSigEntryParsers$.html#name:scala.tools.scalap.scalax.rules.Rule[scala.tools.scalap.scalax.rules.scalasig.ScalaSigEntryParsers.S,scala.tools.scalap.scalax.rules.scalasig.ScalaSigEntryParsers.S,String,String]withscala.tools.scalap.scalax.rules.Name", "kind" : "val"}, {"label" : "typeName", "tail" : ": rules.Rule[S, S, String, String]", "member" : "scala.tools.scalap.scalax.rules.scalasig.ScalaSigEntryParsers.typeName", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/ScalaSigEntryParsers$.html#typeName:scala.tools.scalap.scalax.rules.Rule[scala.tools.scalap.scalax.rules.scalasig.ScalaSigEntryParsers.S,scala.tools.scalap.scalax.rules.scalasig.ScalaSigEntryParsers.S,String,String]", "kind" : "val"}, {"label" : "termName", "tail" : ": rules.Rule[S, S, String, String]", "member" : "scala.tools.scalap.scalax.rules.scalasig.ScalaSigEntryParsers.termName", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/ScalaSigEntryParsers$.html#termName:scala.tools.scalap.scalax.rules.Rule[scala.tools.scalap.scalax.rules.scalasig.ScalaSigEntryParsers.S,scala.tools.scalap.scalax.rules.scalasig.ScalaSigEntryParsers.S,String,String]", "kind" : "val"}, {"label" : "ref", "tail" : ": EntryParser[Int]", "member" : "scala.tools.scalap.scalax.rules.scalasig.ScalaSigEntryParsers.ref", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/ScalaSigEntryParsers$.html#ref:scala.tools.scalap.scalax.rules.scalasig.ScalaSigEntryParsers.EntryParser[Int]", "kind" : "val"}, {"label" : "entry", "tail" : ": EntryParser[Any]", "member" : "scala.tools.scalap.scalax.rules.scalasig.ScalaSigEntryParsers.entry", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/ScalaSigEntryParsers$.html#entry:scala.tools.scalap.scalax.rules.scalasig.ScalaSigEntryParsers.EntryParser[Any]", "kind" : "lazy val"}, {"label" : "key", "tail" : ": rules.Rule[S, S, Int, Nothing]", "member" : "scala.tools.scalap.scalax.rules.scalasig.ScalaSigEntryParsers.key", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/ScalaSigEntryParsers$.html#key:scala.tools.scalap.scalax.rules.Rule[scala.tools.scalap.scalax.rules.scalasig.ScalaSigEntryParsers.S,scala.tools.scalap.scalax.rules.scalasig.ScalaSigEntryParsers.S,Int,Nothing]", "kind" : "val"}, {"label" : "index", "tail" : ": rules.Rule[S, S, Int, Nothing]", "member" : "scala.tools.scalap.scalax.rules.scalasig.ScalaSigEntryParsers.index", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/ScalaSigEntryParsers$.html#index:scala.tools.scalap.scalax.rules.Rule[scala.tools.scalap.scalax.rules.scalasig.ScalaSigEntryParsers.S,scala.tools.scalap.scalax.rules.scalasig.ScalaSigEntryParsers.S,Int,Nothing]", "kind" : "val"}, {"label" : "entryType", "tail" : "(code: Int): rules.Rule[S, S, Int, Nothing]", "member" : "scala.tools.scalap.scalax.rules.scalasig.ScalaSigEntryParsers.entryType", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/ScalaSigEntryParsers$.html#entryType(code:Int):scala.tools.scalap.scalax.rules.Rule[scala.tools.scalap.scalax.rules.scalasig.ScalaSigEntryParsers.S,scala.tools.scalap.scalax.rules.scalasig.ScalaSigEntryParsers.S,Int,Nothing]", "kind" : "implicit def"}, {"label" : "parseEntry", "tail" : "(parser: EntryParser[A])(index: Int): rules.Rule[S, S, A, String]", "member" : "scala.tools.scalap.scalax.rules.scalasig.ScalaSigEntryParsers.parseEntry", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/ScalaSigEntryParsers$.html#parseEntry[A](parser:scala.tools.scalap.scalax.rules.scalasig.ScalaSigEntryParsers.EntryParser[A])(index:Int):scala.tools.scalap.scalax.rules.Rule[scala.tools.scalap.scalax.rules.scalasig.ScalaSigEntryParsers.S,scala.tools.scalap.scalax.rules.scalasig.ScalaSigEntryParsers.S,A,String]", "kind" : "def"}, {"label" : "toEntry", "tail" : "(index: Int): rules.Rule[S, S, Int, Nothing]", "member" : "scala.tools.scalap.scalax.rules.scalasig.ScalaSigEntryParsers.toEntry", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/ScalaSigEntryParsers$.html#toEntry[A](index:Int):scala.tools.scalap.scalax.rules.Rule[scala.tools.scalap.scalax.rules.scalasig.ScalaSigEntryParsers.S,scala.tools.scalap.scalax.rules.scalasig.ScalaSigEntryParsers.S,Int,Nothing]", "kind" : "def"}, {"label" : "byteCodeEntryParser", "tail" : "(rule: ScalaSigAttributeParsers.Parser[A]): EntryParser[A]", "member" : "scala.tools.scalap.scalax.rules.scalasig.ScalaSigEntryParsers.byteCodeEntryParser", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/ScalaSigEntryParsers$.html#byteCodeEntryParser[A](rule:scala.tools.scalap.scalax.rules.scalasig.ScalaSigAttributeParsers.Parser[A]):scala.tools.scalap.scalax.rules.scalasig.ScalaSigEntryParsers.EntryParser[A]", "kind" : "implicit def"}, {"label" : "EntryParser", "tail" : "", "member" : "scala.tools.scalap.scalax.rules.scalasig.ScalaSigEntryParsers.EntryParser", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/ScalaSigEntryParsers$.html#EntryParser[A]=scala.tools.scalap.scalax.rules.scalasig.ScalaSigEntryParsers.Rule[A,String]", "kind" : "type"}, {"label" : "S", "tail" : "", "member" : "scala.tools.scalap.scalax.rules.scalasig.ScalaSigEntryParsers.S", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/ScalaSigEntryParsers$.html#S=scala.tools.scalap.scalax.rules.scalasig.ScalaSig#Entry", "kind" : "type"}, {"label" : "ruleWithName", "tail" : "(name: String, f: (In) => Result[Out, A, X]): rules.Rule[In, Out, A, X] with Name", "member" : "scala.tools.scalap.scalax.rules.MemoisableRules.ruleWithName", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/ScalaSigEntryParsers$.html#ruleWithName[In,Out,A,X](name:String,f:In=>scala.tools.scalap.scalax.rules.Result[Out,A,X]):scala.tools.scalap.scalax.rules.Rule[In,Out,A,X]withscala.tools.scalap.scalax.rules.Name", "kind" : "def"}, {"label" : "memo", "tail" : "(key: AnyRef)(toRule: => (In) => Result[Out, A, X]): rules.Rule[In, Out, A, X]", "member" : "scala.tools.scalap.scalax.rules.MemoisableRules.memo", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/ScalaSigEntryParsers$.html#memo[In<:scala.tools.scalap.scalax.rules.Memoisable,Out,A,X](key:AnyRef)(toRule:=>In=>scala.tools.scalap.scalax.rules.Result[Out,A,X]):scala.tools.scalap.scalax.rules.Rule[In,Out,A,X]", "kind" : "def"}, {"label" : "factory", "tail" : ": RulesWithState", "member" : "scala.tools.scalap.scalax.rules.RulesWithState.factory", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/ScalaSigEntryParsers$.html#factory:scala.tools.scalap.scalax.rules.RulesWithState", "kind" : "val"}, {"label" : "repeatUntil", "tail" : "(rule: Rule[(T) => T, X])(finished: (T) => Boolean)(initial: T): rules.Rule[S, S, T, X]", "member" : "scala.tools.scalap.scalax.rules.StateRules.repeatUntil", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/ScalaSigEntryParsers$.html#repeatUntil[T,X](rule:StateRules.this.Rule[T=>T,X])(finished:T=>Boolean)(initial:T):scala.tools.scalap.scalax.rules.Rule[StateRules.this.S,StateRules.this.S,T,X]", "kind" : "def"}, {"label" : "anyOf", "tail" : "(rules: Seq[Rule[A, X]]): rules.Rule[S, S, collection.immutable.List[A], X]", "member" : "scala.tools.scalap.scalax.rules.StateRules.anyOf", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/ScalaSigEntryParsers$.html#anyOf[A,X](rules:Seq[StateRules.this.Rule[A,X]]):scala.tools.scalap.scalax.rules.Rule[StateRules.this.S,StateRules.this.S,List[A],X]", "kind" : "def"}, {"label" : "allOf", "tail" : "(rules: Seq[Rule[A, X]]): (S) => Result[S, List[A], X]", "member" : "scala.tools.scalap.scalax.rules.StateRules.allOf", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/ScalaSigEntryParsers$.html#allOf[A,X](rules:Seq[StateRules.this.Rule[A,X]]):StateRules.this.S=>scala.tools.scalap.scalax.rules.Result[StateRules.this.S,List[A],X]", "kind" : "def"}, {"label" : "cond", "tail" : "(f: (S) => Boolean): rules.Rule[S, S, S, Nothing]", "member" : "scala.tools.scalap.scalax.rules.StateRules.cond", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/ScalaSigEntryParsers$.html#cond(f:StateRules.this.S=>Boolean):scala.tools.scalap.scalax.rules.Rule[StateRules.this.S,StateRules.this.S,StateRules.this.S,Nothing]", "kind" : "def"}, {"label" : "none", "tail" : "(): rules.Rule[S, S, None.type, Nothing]", "member" : "scala.tools.scalap.scalax.rules.StateRules.none", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/ScalaSigEntryParsers$.html#none:scala.tools.scalap.scalax.rules.Rule[StateRules.this.S,StateRules.this.S,None.type,Nothing]", "kind" : "def"}, {"label" : "nil", "tail" : "(): rules.Rule[S, S, collection.immutable.Nil.type, Nothing]", "member" : "scala.tools.scalap.scalax.rules.StateRules.nil", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/ScalaSigEntryParsers$.html#nil:scala.tools.scalap.scalax.rules.Rule[StateRules.this.S,StateRules.this.S,scala.collection.immutable.Nil.type,Nothing]", "kind" : "def"}, {"label" : "update", "tail" : "(f: (S) => S): rules.Rule[S, S, S, Nothing]", "member" : "scala.tools.scalap.scalax.rules.StateRules.update", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/ScalaSigEntryParsers$.html#update(f:StateRules.this.S=>StateRules.this.S):scala.tools.scalap.scalax.rules.Rule[StateRules.this.S,StateRules.this.S,StateRules.this.S,Nothing]", "kind" : "def"}, {"label" : "set", "tail" : "(s: => S): rules.Rule[S, S, S, Nothing]", "member" : "scala.tools.scalap.scalax.rules.StateRules.set", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/ScalaSigEntryParsers$.html#set(s:=>StateRules.this.S):scala.tools.scalap.scalax.rules.Rule[StateRules.this.S,StateRules.this.S,StateRules.this.S,Nothing]", "kind" : "def"}, {"label" : "get", "tail" : "(): rules.Rule[S, S, S, Nothing]", "member" : "scala.tools.scalap.scalax.rules.StateRules.get", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/ScalaSigEntryParsers$.html#get:scala.tools.scalap.scalax.rules.Rule[StateRules.this.S,StateRules.this.S,StateRules.this.S,Nothing]", "kind" : "def"}, {"label" : "read", "tail" : "(f: (S) => A): rules.Rule[S, S, A, Nothing]", "member" : "scala.tools.scalap.scalax.rules.StateRules.read", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/ScalaSigEntryParsers$.html#read[A](f:StateRules.this.S=>A):scala.tools.scalap.scalax.rules.Rule[StateRules.this.S,StateRules.this.S,A,Nothing]", "kind" : "def"}, {"label" : "unit", "tail" : "(a: => A): rules.Rule[S, S, A, Nothing]", "member" : "scala.tools.scalap.scalax.rules.StateRules.unit", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/ScalaSigEntryParsers$.html#unit[A](a:=>A):scala.tools.scalap.scalax.rules.Rule[StateRules.this.S,StateRules.this.S,A,Nothing]", "kind" : "def"}, {"label" : "apply", "tail" : "(f: (S) => Result[S, A, X]): rules.Rule[S, S, A, X]", "member" : "scala.tools.scalap.scalax.rules.StateRules.apply", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/ScalaSigEntryParsers$.html#apply[A,X](f:StateRules.this.S=>scala.tools.scalap.scalax.rules.Result[StateRules.this.S,A,X]):scala.tools.scalap.scalax.rules.Rule[StateRules.this.S,StateRules.this.S,A,X]", "kind" : "def"}, {"label" : "Rule", "tail" : "", "member" : "scala.tools.scalap.scalax.rules.StateRules.Rule", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/ScalaSigEntryParsers$.html#Rule[+A,+X]=scala.tools.scalap.scalax.rules.Rule[StateRules.this.S,StateRules.this.S,A,X]", "kind" : "type"}, {"label" : "expect", "tail" : "(rule: rules.Rule[In, Out, A, R]): (In) => A", "member" : "scala.tools.scalap.scalax.rules.Rules.expect", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/ScalaSigEntryParsers$.html#expect[In,Out,A,R](rule:scala.tools.scalap.scalax.rules.Rule[In,Out,A,R]):In=>A", "kind" : "def"}, {"label" : "oneOf", "tail" : "(rules: rules.Rule[In, Out, A, X]*): rules.Rule[In, Out, A, X]", "member" : "scala.tools.scalap.scalax.rules.Rules.oneOf", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/ScalaSigEntryParsers$.html#oneOf[In,Out,A,X](rules:scala.tools.scalap.scalax.rules.Rule[In,Out,A,X]*):scala.tools.scalap.scalax.rules.Rule[In,Out,A,X]", "kind" : "def"}, {"label" : "error", "tail" : "(err: X): rules.Rule[Any, Nothing, Nothing, X]", "member" : "scala.tools.scalap.scalax.rules.Rules.error", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/ScalaSigEntryParsers$.html#error[X](err:X):scala.tools.scalap.scalax.rules.Rule[Any,Nothing,Nothing,X]", "kind" : "def"}, {"label" : "error", "tail" : "(): rules.Rule[In, Nothing, Nothing, In]", "member" : "scala.tools.scalap.scalax.rules.Rules.error", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/ScalaSigEntryParsers$.html#error[In]:scala.tools.scalap.scalax.rules.Rule[In,Nothing,Nothing,In]", "kind" : "def"}, {"label" : "failure", "tail" : "(): rules.Rule[Any, Nothing, Nothing, Nothing]", "member" : "scala.tools.scalap.scalax.rules.Rules.failure", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/ScalaSigEntryParsers$.html#failure:scala.tools.scalap.scalax.rules.Rule[Any,Nothing,Nothing,Nothing]", "kind" : "def"}, {"label" : "success", "tail" : "(out: Out, a: A): rules.Rule[Any, Out, A, Nothing]", "member" : "scala.tools.scalap.scalax.rules.Rules.success", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/ScalaSigEntryParsers$.html#success[Out,A](out:Out,a:A):scala.tools.scalap.scalax.rules.Rule[Any,Out,A,Nothing]", "kind" : "def"}, {"label" : "state", "tail" : "(): StateRules { type S = s }", "member" : "scala.tools.scalap.scalax.rules.Rules.state", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/ScalaSigEntryParsers$.html#state[s]:scala.tools.scalap.scalax.rules.StateRules{typeS=s}", "kind" : "def"}, {"label" : "from", "tail" : "(): FromRule[In]", "member" : "scala.tools.scalap.scalax.rules.Rules.from", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/ScalaSigEntryParsers$.html#from[In]:Rules.this.FromRule[In]", "kind" : "def"}, {"label" : "seqRule", "tail" : "(rule: rules.Rule[In, In, A, X]): SeqRule[In, A, X]", "member" : "scala.tools.scalap.scalax.rules.Rules.seqRule", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/ScalaSigEntryParsers$.html#seqRule[In,A,X](rule:scala.tools.scalap.scalax.rules.Rule[In,In,A,X]):scala.tools.scalap.scalax.rules.SeqRule[In,A,X]", "kind" : "implicit def"}, {"label" : "inRule", "tail" : "(rule: rules.Rule[In, Out, A, X]): InRule[In, Out, A, X]", "member" : "scala.tools.scalap.scalax.rules.Rules.inRule", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/ScalaSigEntryParsers$.html#inRule[In,Out,A,X](rule:scala.tools.scalap.scalax.rules.Rule[In,Out,A,X]):scala.tools.scalap.scalax.rules.InRule[In,Out,A,X]", "kind" : "implicit def"}, {"label" : "rule", "tail" : "(f: (In) => Result[Out, A, X]): rules.Rule[In, Out, A, X]", "member" : "scala.tools.scalap.scalax.rules.Rules.rule", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/ScalaSigEntryParsers$.html#rule[In,Out,A,X](f:In=>scala.tools.scalap.scalax.rules.Result[Out,A,X]):scala.tools.scalap.scalax.rules.Rule[In,Out,A,X]", "kind" : "implicit def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/ScalaSigEntryParsers$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/ScalaSigEntryParsers$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/ScalaSigEntryParsers$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/ScalaSigEntryParsers$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/ScalaSigEntryParsers$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/ScalaSigEntryParsers$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/ScalaSigEntryParsers$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/ScalaSigEntryParsers$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/ScalaSigEntryParsers$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/ScalaSigEntryParsers$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/ScalaSigEntryParsers$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/ScalaSigEntryParsers$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/ScalaSigEntryParsers$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/ScalaSigEntryParsers$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/ScalaSigEntryParsers$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/ScalaSigEntryParsers$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/ScalaSigEntryParsers$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/ScalaSigEntryParsers$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/ScalaSigEntryParsers$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "scala.tools.scalap.scalax.rules.scalasig.ScalaSigParser", "shortDescription" : "", "object" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/ScalaSigParser$.html", "members_object" : [{"label" : "parse", "tail" : "(clazz: Class[_]): Option[ScalaSig]", "member" : "scala.tools.scalap.scalax.rules.scalasig.ScalaSigParser.parse", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/ScalaSigParser$.html#parse(clazz:Class[_]):Option[scala.tools.scalap.scalax.rules.scalasig.ScalaSig]", "kind" : "def"}, {"label" : "parse", "tail" : "(classFile: ClassFile): Option[ScalaSig]", "member" : "scala.tools.scalap.scalax.rules.scalasig.ScalaSigParser.parse", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/ScalaSigParser$.html#parse(classFile:scala.tools.scalap.scalax.rules.scalasig.ClassFile):Option[scala.tools.scalap.scalax.rules.scalasig.ScalaSig]", "kind" : "def"}, {"label" : "scalaSigFromAttribute", "tail" : "(classFile: ClassFile): Option[ScalaSig]", "member" : "scala.tools.scalap.scalax.rules.scalasig.ScalaSigParser.scalaSigFromAttribute", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/ScalaSigParser$.html#scalaSigFromAttribute(classFile:scala.tools.scalap.scalax.rules.scalasig.ClassFile):Option[scala.tools.scalap.scalax.rules.scalasig.ScalaSig]", "kind" : "def"}, {"label" : "scalaSigFromAnnotation", "tail" : "(classFile: ClassFile): Option[ScalaSig]", "member" : "scala.tools.scalap.scalax.rules.scalasig.ScalaSigParser.scalaSigFromAnnotation", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/ScalaSigParser$.html#scalaSigFromAnnotation(classFile:scala.tools.scalap.scalax.rules.scalasig.ClassFile):Option[scala.tools.scalap.scalax.rules.scalasig.ScalaSig]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/ScalaSigParser$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/ScalaSigParser$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/ScalaSigParser$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/ScalaSigParser$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/ScalaSigParser$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/ScalaSigParser$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/ScalaSigParser$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/ScalaSigParser$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/ScalaSigParser$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/ScalaSigParser$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/ScalaSigParser$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/ScalaSigParser$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/ScalaSigParser$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/ScalaSigParser$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/ScalaSigParser$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/ScalaSigParser$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/ScalaSigParser$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/ScalaSigParser$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/ScalaSigParser$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "scala.tools.scalap.scalax.rules.scalasig.ScalaSigParsers", "shortDescription" : "", "object" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/ScalaSigParsers$.html", "members_object" : [{"label" : "DefaultRule", "tail" : "", "member" : "scala.tools.scalap.scalax.rules.Rules.DefaultRule", "link" : "scala\/tools\/scalap\/scalax\/rules\/Rules.html#DefaultRule[In,Out,A,X]extendsRule[In,Out,A,X]", "kind" : "class"}, {"label" : "FromRule", "tail" : "", "member" : "scala.tools.scalap.scalax.rules.Rules.FromRule", "link" : "scala\/tools\/scalap\/scalax\/rules\/Rules.html#FromRule[In]extendsAnyRef", "kind" : "trait"}, {"label" : "topLevelObjects", "tail" : ": rules.Rule[S, S, collection.immutable.List[ObjectSymbol], String]", "member" : "scala.tools.scalap.scalax.rules.scalasig.ScalaSigParsers.topLevelObjects", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/ScalaSigParsers$.html#topLevelObjects:scala.tools.scalap.scalax.rules.Rule[scala.tools.scalap.scalax.rules.scalasig.ScalaSigParsers.S,scala.tools.scalap.scalax.rules.scalasig.ScalaSigParsers.S,List[scala.tools.scalap.scalax.rules.scalasig.ObjectSymbol],String]", "kind" : "lazy val"}, {"label" : "topLevelClasses", "tail" : ": rules.Rule[S, S, collection.immutable.List[ClassSymbol], String]", "member" : "scala.tools.scalap.scalax.rules.scalasig.ScalaSigParsers.topLevelClasses", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/ScalaSigParsers$.html#topLevelClasses:scala.tools.scalap.scalax.rules.Rule[scala.tools.scalap.scalax.rules.scalasig.ScalaSigParsers.S,scala.tools.scalap.scalax.rules.scalasig.ScalaSigParsers.S,List[scala.tools.scalap.scalax.rules.scalasig.ClassSymbol],String]", "kind" : "lazy val"}, {"label" : "attributes", "tail" : ": rules.Rule[S, S, collection.immutable.List[AttributeInfo], String] with Name", "member" : "scala.tools.scalap.scalax.rules.scalasig.ScalaSigParsers.attributes", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/ScalaSigParsers$.html#attributes:scala.tools.scalap.scalax.rules.Rule[scala.tools.scalap.scalax.rules.scalasig.ScalaSigParsers.S,scala.tools.scalap.scalax.rules.scalasig.ScalaSigParsers.S,List[scala.tools.scalap.scalax.rules.scalasig.AttributeInfo],String]withscala.tools.scalap.scalax.rules.Name", "kind" : "lazy val"}, {"label" : "methods", "tail" : ": rules.Rule[S, S, collection.immutable.List[MethodSymbol], String] with Name", "member" : "scala.tools.scalap.scalax.rules.scalasig.ScalaSigParsers.methods", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/ScalaSigParsers$.html#methods:scala.tools.scalap.scalax.rules.Rule[scala.tools.scalap.scalax.rules.scalasig.ScalaSigParsers.S,scala.tools.scalap.scalax.rules.scalasig.ScalaSigParsers.S,List[scala.tools.scalap.scalax.rules.scalasig.MethodSymbol],String]withscala.tools.scalap.scalax.rules.Name", "kind" : "lazy val"}, {"label" : "symbols", "tail" : ": rules.Rule[S, S, collection.immutable.List[Symbol], String] with Name", "member" : "scala.tools.scalap.scalax.rules.scalasig.ScalaSigParsers.symbols", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/ScalaSigParsers$.html#symbols:scala.tools.scalap.scalax.rules.Rule[scala.tools.scalap.scalax.rules.scalasig.ScalaSigParsers.S,scala.tools.scalap.scalax.rules.scalasig.ScalaSigParsers.S,List[scala.tools.scalap.scalax.rules.scalasig.Symbol],String]withscala.tools.scalap.scalax.rules.Name", "kind" : "lazy val"}, {"label" : "entries", "tail" : ": rules.Rule[S, S, collection.immutable.List[Any], String] with Name", "member" : "scala.tools.scalap.scalax.rules.scalasig.ScalaSigParsers.entries", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/ScalaSigParsers$.html#entries:scala.tools.scalap.scalax.rules.Rule[scala.tools.scalap.scalax.rules.scalasig.ScalaSigParsers.S,scala.tools.scalap.scalax.rules.scalasig.ScalaSigParsers.S,List[Any],String]withscala.tools.scalap.scalax.rules.Name", "kind" : "lazy val"}, {"label" : "allEntries", "tail" : "(f: EntryParser[A]): rules.Rule[S, S, collection.immutable.List[A], String]", "member" : "scala.tools.scalap.scalax.rules.scalasig.ScalaSigParsers.allEntries", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/ScalaSigParsers$.html#allEntries[A](f:scala.tools.scalap.scalax.rules.scalasig.ScalaSigEntryParsers.EntryParser[A]):scala.tools.scalap.scalax.rules.Rule[scala.tools.scalap.scalax.rules.scalasig.ScalaSigParsers.S,scala.tools.scalap.scalax.rules.scalasig.ScalaSigParsers.S,List[A],String]", "kind" : "def"}, {"label" : "parseEntry", "tail" : "(parser: EntryParser[A])(index: Int): Parser[A]", "member" : "scala.tools.scalap.scalax.rules.scalasig.ScalaSigParsers.parseEntry", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/ScalaSigParsers$.html#parseEntry[A](parser:scala.tools.scalap.scalax.rules.scalasig.ScalaSigEntryParsers.EntryParser[A])(index:Int):scala.tools.scalap.scalax.rules.scalasig.ScalaSigParsers.Parser[A]", "kind" : "def"}, {"label" : "entry", "tail" : "(index: Int): rules.Rule[S, Entry, Int, Nothing]", "member" : "scala.tools.scalap.scalax.rules.scalasig.ScalaSigParsers.entry", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/ScalaSigParsers$.html#entry(index:Int):scala.tools.scalap.scalax.rules.Rule[scala.tools.scalap.scalax.rules.scalasig.ScalaSigParsers.S,scala.tools.scalap.scalax.rules.scalasig.ScalaSigParsers.S#Entry,Int,Nothing]", "kind" : "def"}, {"label" : "size", "tail" : ": rules.Rule[S, S, Int, Nothing]", "member" : "scala.tools.scalap.scalax.rules.scalasig.ScalaSigParsers.size", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/ScalaSigParsers$.html#size:scala.tools.scalap.scalax.rules.Rule[scala.tools.scalap.scalax.rules.scalasig.ScalaSigParsers.S,scala.tools.scalap.scalax.rules.scalasig.ScalaSigParsers.S,Int,Nothing]", "kind" : "val"}, {"label" : "symTab", "tail" : ": rules.Rule[S, S, Seq[~[Int, ByteCode]], Nothing]", "member" : "scala.tools.scalap.scalax.rules.scalasig.ScalaSigParsers.symTab", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/ScalaSigParsers$.html#symTab:scala.tools.scalap.scalax.rules.Rule[scala.tools.scalap.scalax.rules.scalasig.ScalaSigParsers.S,scala.tools.scalap.scalax.rules.scalasig.ScalaSigParsers.S,Seq[Int~scala.tools.scalap.scalax.rules.scalasig.ByteCode],Nothing]", "kind" : "val"}, {"label" : "Parser", "tail" : "", "member" : "scala.tools.scalap.scalax.rules.scalasig.ScalaSigParsers.Parser", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/ScalaSigParsers$.html#Parser[A]=scala.tools.scalap.scalax.rules.scalasig.ScalaSigParsers.Rule[A,String]", "kind" : "type"}, {"label" : "S", "tail" : "", "member" : "scala.tools.scalap.scalax.rules.scalasig.ScalaSigParsers.S", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/ScalaSigParsers$.html#S=scala.tools.scalap.scalax.rules.scalasig.ScalaSig", "kind" : "type"}, {"label" : "ruleWithName", "tail" : "(name: String, f: (In) => Result[Out, A, X]): rules.Rule[In, Out, A, X] with Name", "member" : "scala.tools.scalap.scalax.rules.MemoisableRules.ruleWithName", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/ScalaSigParsers$.html#ruleWithName[In,Out,A,X](name:String,f:In=>scala.tools.scalap.scalax.rules.Result[Out,A,X]):scala.tools.scalap.scalax.rules.Rule[In,Out,A,X]withscala.tools.scalap.scalax.rules.Name", "kind" : "def"}, {"label" : "memo", "tail" : "(key: AnyRef)(toRule: => (In) => Result[Out, A, X]): rules.Rule[In, Out, A, X]", "member" : "scala.tools.scalap.scalax.rules.MemoisableRules.memo", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/ScalaSigParsers$.html#memo[In<:scala.tools.scalap.scalax.rules.Memoisable,Out,A,X](key:AnyRef)(toRule:=>In=>scala.tools.scalap.scalax.rules.Result[Out,A,X]):scala.tools.scalap.scalax.rules.Rule[In,Out,A,X]", "kind" : "def"}, {"label" : "factory", "tail" : ": RulesWithState", "member" : "scala.tools.scalap.scalax.rules.RulesWithState.factory", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/ScalaSigParsers$.html#factory:scala.tools.scalap.scalax.rules.RulesWithState", "kind" : "val"}, {"label" : "repeatUntil", "tail" : "(rule: Rule[(T) => T, X])(finished: (T) => Boolean)(initial: T): rules.Rule[S, S, T, X]", "member" : "scala.tools.scalap.scalax.rules.StateRules.repeatUntil", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/ScalaSigParsers$.html#repeatUntil[T,X](rule:StateRules.this.Rule[T=>T,X])(finished:T=>Boolean)(initial:T):scala.tools.scalap.scalax.rules.Rule[StateRules.this.S,StateRules.this.S,T,X]", "kind" : "def"}, {"label" : "anyOf", "tail" : "(rules: Seq[Rule[A, X]]): rules.Rule[S, S, collection.immutable.List[A], X]", "member" : "scala.tools.scalap.scalax.rules.StateRules.anyOf", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/ScalaSigParsers$.html#anyOf[A,X](rules:Seq[StateRules.this.Rule[A,X]]):scala.tools.scalap.scalax.rules.Rule[StateRules.this.S,StateRules.this.S,List[A],X]", "kind" : "def"}, {"label" : "allOf", "tail" : "(rules: Seq[Rule[A, X]]): (S) => Result[S, List[A], X]", "member" : "scala.tools.scalap.scalax.rules.StateRules.allOf", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/ScalaSigParsers$.html#allOf[A,X](rules:Seq[StateRules.this.Rule[A,X]]):StateRules.this.S=>scala.tools.scalap.scalax.rules.Result[StateRules.this.S,List[A],X]", "kind" : "def"}, {"label" : "cond", "tail" : "(f: (S) => Boolean): rules.Rule[S, S, S, Nothing]", "member" : "scala.tools.scalap.scalax.rules.StateRules.cond", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/ScalaSigParsers$.html#cond(f:StateRules.this.S=>Boolean):scala.tools.scalap.scalax.rules.Rule[StateRules.this.S,StateRules.this.S,StateRules.this.S,Nothing]", "kind" : "def"}, {"label" : "none", "tail" : "(): rules.Rule[S, S, None.type, Nothing]", "member" : "scala.tools.scalap.scalax.rules.StateRules.none", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/ScalaSigParsers$.html#none:scala.tools.scalap.scalax.rules.Rule[StateRules.this.S,StateRules.this.S,None.type,Nothing]", "kind" : "def"}, {"label" : "nil", "tail" : "(): rules.Rule[S, S, collection.immutable.Nil.type, Nothing]", "member" : "scala.tools.scalap.scalax.rules.StateRules.nil", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/ScalaSigParsers$.html#nil:scala.tools.scalap.scalax.rules.Rule[StateRules.this.S,StateRules.this.S,scala.collection.immutable.Nil.type,Nothing]", "kind" : "def"}, {"label" : "update", "tail" : "(f: (S) => S): rules.Rule[S, S, S, Nothing]", "member" : "scala.tools.scalap.scalax.rules.StateRules.update", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/ScalaSigParsers$.html#update(f:StateRules.this.S=>StateRules.this.S):scala.tools.scalap.scalax.rules.Rule[StateRules.this.S,StateRules.this.S,StateRules.this.S,Nothing]", "kind" : "def"}, {"label" : "set", "tail" : "(s: => S): rules.Rule[S, S, S, Nothing]", "member" : "scala.tools.scalap.scalax.rules.StateRules.set", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/ScalaSigParsers$.html#set(s:=>StateRules.this.S):scala.tools.scalap.scalax.rules.Rule[StateRules.this.S,StateRules.this.S,StateRules.this.S,Nothing]", "kind" : "def"}, {"label" : "get", "tail" : "(): rules.Rule[S, S, S, Nothing]", "member" : "scala.tools.scalap.scalax.rules.StateRules.get", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/ScalaSigParsers$.html#get:scala.tools.scalap.scalax.rules.Rule[StateRules.this.S,StateRules.this.S,StateRules.this.S,Nothing]", "kind" : "def"}, {"label" : "read", "tail" : "(f: (S) => A): rules.Rule[S, S, A, Nothing]", "member" : "scala.tools.scalap.scalax.rules.StateRules.read", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/ScalaSigParsers$.html#read[A](f:StateRules.this.S=>A):scala.tools.scalap.scalax.rules.Rule[StateRules.this.S,StateRules.this.S,A,Nothing]", "kind" : "def"}, {"label" : "unit", "tail" : "(a: => A): rules.Rule[S, S, A, Nothing]", "member" : "scala.tools.scalap.scalax.rules.StateRules.unit", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/ScalaSigParsers$.html#unit[A](a:=>A):scala.tools.scalap.scalax.rules.Rule[StateRules.this.S,StateRules.this.S,A,Nothing]", "kind" : "def"}, {"label" : "apply", "tail" : "(f: (S) => Result[S, A, X]): rules.Rule[S, S, A, X]", "member" : "scala.tools.scalap.scalax.rules.StateRules.apply", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/ScalaSigParsers$.html#apply[A,X](f:StateRules.this.S=>scala.tools.scalap.scalax.rules.Result[StateRules.this.S,A,X]):scala.tools.scalap.scalax.rules.Rule[StateRules.this.S,StateRules.this.S,A,X]", "kind" : "def"}, {"label" : "Rule", "tail" : "", "member" : "scala.tools.scalap.scalax.rules.StateRules.Rule", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/ScalaSigParsers$.html#Rule[+A,+X]=scala.tools.scalap.scalax.rules.Rule[StateRules.this.S,StateRules.this.S,A,X]", "kind" : "type"}, {"label" : "expect", "tail" : "(rule: rules.Rule[In, Out, A, R]): (In) => A", "member" : "scala.tools.scalap.scalax.rules.Rules.expect", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/ScalaSigParsers$.html#expect[In,Out,A,R](rule:scala.tools.scalap.scalax.rules.Rule[In,Out,A,R]):In=>A", "kind" : "def"}, {"label" : "oneOf", "tail" : "(rules: rules.Rule[In, Out, A, X]*): rules.Rule[In, Out, A, X]", "member" : "scala.tools.scalap.scalax.rules.Rules.oneOf", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/ScalaSigParsers$.html#oneOf[In,Out,A,X](rules:scala.tools.scalap.scalax.rules.Rule[In,Out,A,X]*):scala.tools.scalap.scalax.rules.Rule[In,Out,A,X]", "kind" : "def"}, {"label" : "error", "tail" : "(err: X): rules.Rule[Any, Nothing, Nothing, X]", "member" : "scala.tools.scalap.scalax.rules.Rules.error", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/ScalaSigParsers$.html#error[X](err:X):scala.tools.scalap.scalax.rules.Rule[Any,Nothing,Nothing,X]", "kind" : "def"}, {"label" : "error", "tail" : "(): rules.Rule[In, Nothing, Nothing, In]", "member" : "scala.tools.scalap.scalax.rules.Rules.error", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/ScalaSigParsers$.html#error[In]:scala.tools.scalap.scalax.rules.Rule[In,Nothing,Nothing,In]", "kind" : "def"}, {"label" : "failure", "tail" : "(): rules.Rule[Any, Nothing, Nothing, Nothing]", "member" : "scala.tools.scalap.scalax.rules.Rules.failure", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/ScalaSigParsers$.html#failure:scala.tools.scalap.scalax.rules.Rule[Any,Nothing,Nothing,Nothing]", "kind" : "def"}, {"label" : "success", "tail" : "(out: Out, a: A): rules.Rule[Any, Out, A, Nothing]", "member" : "scala.tools.scalap.scalax.rules.Rules.success", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/ScalaSigParsers$.html#success[Out,A](out:Out,a:A):scala.tools.scalap.scalax.rules.Rule[Any,Out,A,Nothing]", "kind" : "def"}, {"label" : "state", "tail" : "(): StateRules { type S = s }", "member" : "scala.tools.scalap.scalax.rules.Rules.state", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/ScalaSigParsers$.html#state[s]:scala.tools.scalap.scalax.rules.StateRules{typeS=s}", "kind" : "def"}, {"label" : "from", "tail" : "(): FromRule[In]", "member" : "scala.tools.scalap.scalax.rules.Rules.from", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/ScalaSigParsers$.html#from[In]:Rules.this.FromRule[In]", "kind" : "def"}, {"label" : "seqRule", "tail" : "(rule: rules.Rule[In, In, A, X]): SeqRule[In, A, X]", "member" : "scala.tools.scalap.scalax.rules.Rules.seqRule", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/ScalaSigParsers$.html#seqRule[In,A,X](rule:scala.tools.scalap.scalax.rules.Rule[In,In,A,X]):scala.tools.scalap.scalax.rules.SeqRule[In,A,X]", "kind" : "implicit def"}, {"label" : "inRule", "tail" : "(rule: rules.Rule[In, Out, A, X]): InRule[In, Out, A, X]", "member" : "scala.tools.scalap.scalax.rules.Rules.inRule", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/ScalaSigParsers$.html#inRule[In,Out,A,X](rule:scala.tools.scalap.scalax.rules.Rule[In,Out,A,X]):scala.tools.scalap.scalax.rules.InRule[In,Out,A,X]", "kind" : "implicit def"}, {"label" : "rule", "tail" : "(f: (In) => Result[Out, A, X]): rules.Rule[In, Out, A, X]", "member" : "scala.tools.scalap.scalax.rules.Rules.rule", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/ScalaSigParsers$.html#rule[In,Out,A,X](f:In=>scala.tools.scalap.scalax.rules.Result[Out,A,X]):scala.tools.scalap.scalax.rules.Rule[In,Out,A,X]", "kind" : "implicit def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/ScalaSigParsers$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/ScalaSigParsers$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/ScalaSigParsers$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/ScalaSigParsers$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/ScalaSigParsers$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/ScalaSigParsers$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/ScalaSigParsers$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/ScalaSigParsers$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/ScalaSigParsers$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/ScalaSigParsers$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/ScalaSigParsers$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/ScalaSigParsers$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/ScalaSigParsers$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/ScalaSigParsers$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/ScalaSigParsers$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/ScalaSigParsers$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/ScalaSigParsers$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/ScalaSigParsers$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/ScalaSigParsers$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "scala.tools.scalap.scalax.rules.scalasig.ScalaSigPrinter", "shortDescription" : "", "members_class" : [{"label" : "+", "tail" : "(other: String): String", "member" : "scala.Predef.any2stringadd.+", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/ScalaSigPrinter.html#+(other:String):String", "kind" : "def"}, {"label" : "formatted", "tail" : "(fmtstr: String): String", "member" : "scala.Predef.StringFormat.formatted", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/ScalaSigPrinter.html#formatted(fmtstr:String):String", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: (ScalaSigPrinter) => Boolean, msg: => Any): ScalaSigPrinter", "member" : "scala.Predef.Ensuring.ensuring", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/ScalaSigPrinter.html#ensuring(cond:A=>Boolean,msg:=>Any):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: (ScalaSigPrinter) => Boolean): ScalaSigPrinter", "member" : "scala.Predef.Ensuring.ensuring", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/ScalaSigPrinter.html#ensuring(cond:A=>Boolean):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: Boolean, msg: => Any): ScalaSigPrinter", "member" : "scala.Predef.Ensuring.ensuring", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/ScalaSigPrinter.html#ensuring(cond:Boolean,msg:=>Any):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: Boolean): ScalaSigPrinter", "member" : "scala.Predef.Ensuring.ensuring", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/ScalaSigPrinter.html#ensuring(cond:Boolean):A", "kind" : "def"}, {"label" : "→", "tail" : "(y: B): (ScalaSigPrinter, B)", "member" : "scala.Predef.ArrowAssoc.→", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/ScalaSigPrinter.html#→[B](y:B):(A,B)", "kind" : "def"}, {"label" : "->", "tail" : "(y: B): (ScalaSigPrinter, B)", "member" : "scala.Predef.ArrowAssoc.->", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/ScalaSigPrinter.html#->[B](y:B):(A,B)", "kind" : "def"}, {"label" : "processName", "tail" : "(name: String): String", "member" : "scala.tools.scalap.scalax.rules.scalasig.ScalaSigPrinter.processName", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/ScalaSigPrinter.html#processName(name:String):String", "kind" : "def"}, {"label" : "placeholderPattern", "tail" : ": String", "member" : "scala.tools.scalap.scalax.rules.scalasig.ScalaSigPrinter.placeholderPattern", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/ScalaSigPrinter.html#placeholderPattern:String", "kind" : "val"}, {"label" : "pattern", "tail" : ": Pattern", "member" : "scala.tools.scalap.scalax.rules.scalasig.ScalaSigPrinter.pattern", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/ScalaSigPrinter.html#pattern:java.util.regex.Pattern", "kind" : "val"}, {"label" : "_syms", "tail" : ": Map[String, String]", "member" : "scala.tools.scalap.scalax.rules.scalasig.ScalaSigPrinter._syms", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/ScalaSigPrinter.html#_syms:scala.collection.immutable.Map[String,String]", "kind" : "val"}, {"label" : "typeParamString", "tail" : "(params: Seq[Symbol]): String", "member" : "scala.tools.scalap.scalax.rules.scalasig.ScalaSigPrinter.typeParamString", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/ScalaSigPrinter.html#typeParamString(params:Seq[scala.tools.scalap.scalax.rules.scalasig.Symbol]):String", "kind" : "def"}, {"label" : "typeArgString", "tail" : "(typeArgs: Seq[Type]): String", "member" : "scala.tools.scalap.scalax.rules.scalasig.ScalaSigPrinter.typeArgString", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/ScalaSigPrinter.html#typeArgString(typeArgs:Seq[scala.tools.scalap.scalax.rules.scalasig.Type]):String", "kind" : "def"}, {"label" : "toString", "tail" : "(symbol: Symbol): String", "member" : "scala.tools.scalap.scalax.rules.scalasig.ScalaSigPrinter.toString", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/ScalaSigPrinter.html#toString(symbol:scala.tools.scalap.scalax.rules.scalasig.Symbol):String", "kind" : "def"}, {"label" : "getVariance", "tail" : "(t: TypeSymbol): String", "member" : "scala.tools.scalap.scalax.rules.scalasig.ScalaSigPrinter.getVariance", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/ScalaSigPrinter.html#getVariance(t:scala.tools.scalap.scalax.rules.scalasig.TypeSymbol):String", "kind" : "def"}, {"label" : "toString", "tail" : "(t: Type, sep: String)(flags: TypeFlags): String", "member" : "scala.tools.scalap.scalax.rules.scalasig.ScalaSigPrinter.toString", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/ScalaSigPrinter.html#toString(t:scala.tools.scalap.scalax.rules.scalasig.Type,sep:String)(implicitflags:ScalaSigPrinter.this.TypeFlags):String", "kind" : "def"}, {"label" : "toString", "tail" : "(t: Type)(flags: TypeFlags): String", "member" : "scala.tools.scalap.scalax.rules.scalasig.ScalaSigPrinter.toString", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/ScalaSigPrinter.html#toString(t:scala.tools.scalap.scalax.rules.scalasig.Type)(implicitflags:ScalaSigPrinter.this.TypeFlags):String", "kind" : "def"}, {"label" : "printType", "tail" : "(t: Type, sep: String)(flags: TypeFlags): Unit", "member" : "scala.tools.scalap.scalax.rules.scalasig.ScalaSigPrinter.printType", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/ScalaSigPrinter.html#printType(t:scala.tools.scalap.scalax.rules.scalasig.Type,sep:String)(implicitflags:ScalaSigPrinter.this.TypeFlags):Unit", "kind" : "def"}, {"label" : "printType", "tail" : "(t: Type)(flags: TypeFlags): Unit", "member" : "scala.tools.scalap.scalax.rules.scalasig.ScalaSigPrinter.printType", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/ScalaSigPrinter.html#printType(t:scala.tools.scalap.scalax.rules.scalasig.Type)(implicitflags:ScalaSigPrinter.this.TypeFlags):Unit", "kind" : "def"}, {"label" : "printType", "tail" : "(sym: SymbolInfoSymbol)(flags: TypeFlags): Unit", "member" : "scala.tools.scalap.scalax.rules.scalasig.ScalaSigPrinter.printType", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/ScalaSigPrinter.html#printType(sym:scala.tools.scalap.scalax.rules.scalasig.SymbolInfoSymbol)(implicitflags:ScalaSigPrinter.this.TypeFlags):Unit", "kind" : "def"}, {"label" : "_tf", "tail" : "", "member" : "scala.tools.scalap.scalax.rules.scalasig.ScalaSigPrinter._tf", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/ScalaSigPrinter.html#_tf", "kind" : "implicit object"}, {"label" : "valueToString", "tail" : "(value: Any): String", "member" : "scala.tools.scalap.scalax.rules.scalasig.ScalaSigPrinter.valueToString", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/ScalaSigPrinter.html#valueToString(value:Any):String", "kind" : "def"}, {"label" : "toString", "tail" : "(attrib: AttributeInfo): String", "member" : "scala.tools.scalap.scalax.rules.scalasig.ScalaSigPrinter.toString", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/ScalaSigPrinter.html#toString(attrib:scala.tools.scalap.scalax.rules.scalasig.AttributeInfo):String", "kind" : "def"}, {"label" : "printTypeSymbol", "tail" : "(level: Int, t: TypeSymbol): Unit", "member" : "scala.tools.scalap.scalax.rules.scalasig.ScalaSigPrinter.printTypeSymbol", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/ScalaSigPrinter.html#printTypeSymbol(level:Int,t:scala.tools.scalap.scalax.rules.scalasig.TypeSymbol):Unit", "kind" : "def"}, {"label" : "printAlias", "tail" : "(level: Int, a: AliasSymbol): Unit", "member" : "scala.tools.scalap.scalax.rules.scalasig.ScalaSigPrinter.printAlias", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/ScalaSigPrinter.html#printAlias(level:Int,a:scala.tools.scalap.scalax.rules.scalasig.AliasSymbol):Unit", "kind" : "def"}, {"label" : "printMethod", "tail" : "(level: Int, m: MethodSymbol, indent: () => Unit): Unit", "member" : "scala.tools.scalap.scalax.rules.scalasig.ScalaSigPrinter.printMethod", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/ScalaSigPrinter.html#printMethod(level:Int,m:scala.tools.scalap.scalax.rules.scalasig.MethodSymbol,indent:()=>Unit):Unit", "kind" : "def"}, {"label" : "printMethodType", "tail" : "(t: Type, printResult: Boolean)(cont: => Unit): Unit", "member" : "scala.tools.scalap.scalax.rules.scalasig.ScalaSigPrinter.printMethodType", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/ScalaSigPrinter.html#printMethodType(t:scala.tools.scalap.scalax.rules.scalasig.Type,printResult:Boolean)(cont:=>Unit):Unit", "kind" : "def"}, {"label" : "printObject", "tail" : "(level: Int, o: ObjectSymbol): Unit", "member" : "scala.tools.scalap.scalax.rules.scalasig.ScalaSigPrinter.printObject", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/ScalaSigPrinter.html#printObject(level:Int,o:scala.tools.scalap.scalax.rules.scalasig.ObjectSymbol):Unit", "kind" : "def"}, {"label" : "printPackageObject", "tail" : "(level: Int, o: ObjectSymbol): Unit", "member" : "scala.tools.scalap.scalax.rules.scalasig.ScalaSigPrinter.printPackageObject", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/ScalaSigPrinter.html#printPackageObject(level:Int,o:scala.tools.scalap.scalax.rules.scalasig.ObjectSymbol):Unit", "kind" : "def"}, {"label" : "getPrinterByConstructor", "tail" : "(c: ClassSymbol): String", "member" : "scala.tools.scalap.scalax.rules.scalasig.ScalaSigPrinter.getPrinterByConstructor", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/ScalaSigPrinter.html#getPrinterByConstructor(c:scala.tools.scalap.scalax.rules.scalasig.ClassSymbol):String", "kind" : "def"}, {"label" : "printClass", "tail" : "(level: Int, c: ClassSymbol): Unit", "member" : "scala.tools.scalap.scalax.rules.scalasig.ScalaSigPrinter.printClass", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/ScalaSigPrinter.html#printClass(level:Int,c:scala.tools.scalap.scalax.rules.scalasig.ClassSymbol):Unit", "kind" : "def"}, {"label" : "printModifiers", "tail" : "(symbol: Symbol): Unit", "member" : "scala.tools.scalap.scalax.rules.scalasig.ScalaSigPrinter.printModifiers", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/ScalaSigPrinter.html#printModifiers(symbol:scala.tools.scalap.scalax.rules.scalasig.Symbol):Unit", "kind" : "def"}, {"label" : "printWithIndent", "tail" : "(level: Int, s: String): Unit", "member" : "scala.tools.scalap.scalax.rules.scalasig.ScalaSigPrinter.printWithIndent", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/ScalaSigPrinter.html#printWithIndent(level:Int,s:String):Unit", "kind" : "def"}, {"label" : "isCaseClassObject", "tail" : "(o: ObjectSymbol): Boolean", "member" : "scala.tools.scalap.scalax.rules.scalasig.ScalaSigPrinter.isCaseClassObject", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/ScalaSigPrinter.html#isCaseClassObject(o:scala.tools.scalap.scalax.rules.scalasig.ObjectSymbol):Boolean", "kind" : "def"}, {"label" : "printSymbol", "tail" : "(level: Int, symbol: Symbol): Unit", "member" : "scala.tools.scalap.scalax.rules.scalasig.ScalaSigPrinter.printSymbol", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/ScalaSigPrinter.html#printSymbol(level:Int,symbol:scala.tools.scalap.scalax.rules.scalasig.Symbol):Unit", "kind" : "def"}, {"label" : "printSymbolAttributes", "tail" : "(s: Symbol, onNewLine: Boolean, indent: => Unit): Unit", "member" : "scala.tools.scalap.scalax.rules.scalasig.ScalaSigPrinter.printSymbolAttributes", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/ScalaSigPrinter.html#printSymbolAttributes(s:scala.tools.scalap.scalax.rules.scalasig.Symbol,onNewLine:Boolean,indent:=>Unit):Unit", "kind" : "def"}, {"label" : "printSymbol", "tail" : "(symbol: Symbol): Unit", "member" : "scala.tools.scalap.scalax.rules.scalasig.ScalaSigPrinter.printSymbol", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/ScalaSigPrinter.html#printSymbol(symbol:scala.tools.scalap.scalax.rules.scalasig.Symbol):Unit", "kind" : "def"}, {"label" : "TypeFlags", "tail" : "", "member" : "scala.tools.scalap.scalax.rules.scalasig.ScalaSigPrinter.TypeFlags", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/ScalaSigPrinter.html#TypeFlagsextendsProductwithSerializable", "kind" : "case class"}, {"label" : "CONSTRUCTOR_NAME", "tail" : ": String", "member" : "scala.tools.scalap.scalax.rules.scalasig.ScalaSigPrinter.CONSTRUCTOR_NAME", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/ScalaSigPrinter.html#CONSTRUCTOR_NAME:String", "kind" : "val"}, {"member" : "scala.tools.scalap.scalax.rules.scalasig.ScalaSigPrinter#<init>", "error" : "unsupported entity"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/ScalaSigPrinter.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/ScalaSigPrinter.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/ScalaSigPrinter.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/ScalaSigPrinter.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/ScalaSigPrinter.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/ScalaSigPrinter.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/ScalaSigPrinter.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/ScalaSigPrinter.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/ScalaSigPrinter.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/ScalaSigPrinter.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/ScalaSigPrinter.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/ScalaSigPrinter.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/ScalaSigPrinter.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/ScalaSigPrinter.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/ScalaSigPrinter.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/ScalaSigPrinter.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/ScalaSigPrinter.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/ScalaSigPrinter.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/ScalaSigPrinter.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/ScalaSigPrinter.html", "kind" : "class"}, {"name" : "scala.tools.scalap.scalax.rules.scalasig.ScalaSigSymbol", "shortDescription" : "", "members_class" : [{"label" : "+", "tail" : "(other: String): String", "member" : "scala.Predef.any2stringadd.+", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/ScalaSigSymbol.html#+(other:String):String", "kind" : "def"}, {"label" : "formatted", "tail" : "(fmtstr: String): String", "member" : "scala.Predef.StringFormat.formatted", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/ScalaSigSymbol.html#formatted(fmtstr:String):String", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: (ScalaSigSymbol) => Boolean, msg: => Any): ScalaSigSymbol", "member" : "scala.Predef.Ensuring.ensuring", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/ScalaSigSymbol.html#ensuring(cond:A=>Boolean,msg:=>Any):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: (ScalaSigSymbol) => Boolean): ScalaSigSymbol", "member" : "scala.Predef.Ensuring.ensuring", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/ScalaSigSymbol.html#ensuring(cond:A=>Boolean):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: Boolean, msg: => Any): ScalaSigSymbol", "member" : "scala.Predef.Ensuring.ensuring", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/ScalaSigSymbol.html#ensuring(cond:Boolean,msg:=>Any):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: Boolean): ScalaSigSymbol", "member" : "scala.Predef.Ensuring.ensuring", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/ScalaSigSymbol.html#ensuring(cond:Boolean):A", "kind" : "def"}, {"label" : "→", "tail" : "(y: B): (ScalaSigSymbol, B)", "member" : "scala.Predef.ArrowAssoc.→", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/ScalaSigSymbol.html#→[B](y:B):(A,B)", "kind" : "def"}, {"label" : "->", "tail" : "(y: B): (ScalaSigSymbol, B)", "member" : "scala.Predef.ArrowAssoc.->", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/ScalaSigSymbol.html#->[B](y:B):(A,B)", "kind" : "def"}, {"label" : "attributes", "tail" : ": Seq[AttributeInfo]", "member" : "scala.tools.scalap.scalax.rules.scalasig.ScalaSigSymbol.attributes", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/ScalaSigSymbol.html#attributes:Seq[scala.tools.scalap.scalax.rules.scalasig.AttributeInfo]", "kind" : "lazy val"}, {"label" : "children", "tail" : ": Seq[Symbol]", "member" : "scala.tools.scalap.scalax.rules.scalasig.ScalaSigSymbol.children", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/ScalaSigSymbol.html#children:Seq[scala.tools.scalap.scalax.rules.scalasig.Symbol]", "kind" : "lazy val"}, {"label" : "index", "tail" : "(): Int", "member" : "scala.tools.scalap.scalax.rules.scalasig.ScalaSigSymbol.index", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/ScalaSigSymbol.html#index:Int", "kind" : "def"}, {"label" : "applyScalaSigRule", "tail" : "(rule: Parser[A]): A", "member" : "scala.tools.scalap.scalax.rules.scalasig.ScalaSigSymbol.applyScalaSigRule", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/ScalaSigSymbol.html#applyScalaSigRule[A](rule:scala.tools.scalap.scalax.rules.scalasig.ScalaSigParsers.Parser[A]):A", "kind" : "def"}, {"label" : "applyRule", "tail" : "(rule: EntryParser[A]): A", "member" : "scala.tools.scalap.scalax.rules.scalasig.ScalaSigSymbol.applyRule", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/ScalaSigSymbol.html#applyRule[A](rule:scala.tools.scalap.scalax.rules.scalasig.ScalaSigEntryParsers.EntryParser[A]):A", "kind" : "def"}, {"member" : "scala.tools.scalap.scalax.rules.scalasig.ScalaSigSymbol#<init>", "error" : "unsupported entity"}, {"label" : "path", "tail" : "(): String", "member" : "scala.tools.scalap.scalax.rules.scalasig.Symbol.path", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/ScalaSigSymbol.html#path:String", "kind" : "def"}, {"label" : "isPreSuper", "tail" : "(): Boolean", "member" : "scala.tools.scalap.scalax.rules.scalasig.Flags.isPreSuper", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/ScalaSigSymbol.html#isPreSuper:Boolean", "kind" : "def"}, {"label" : "isImplementationClass", "tail" : "(): Boolean", "member" : "scala.tools.scalap.scalax.rules.scalasig.Flags.isImplementationClass", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/ScalaSigSymbol.html#isImplementationClass:Boolean", "kind" : "def"}, {"label" : "isExpandedName", "tail" : "(): Boolean", "member" : "scala.tools.scalap.scalax.rules.scalasig.Flags.isExpandedName", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/ScalaSigSymbol.html#isExpandedName:Boolean", "kind" : "def"}, {"label" : "isExistential", "tail" : "(): Boolean", "member" : "scala.tools.scalap.scalax.rules.scalasig.Flags.isExistential", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/ScalaSigSymbol.html#isExistential:Boolean", "kind" : "def"}, {"label" : "isMixedIn", "tail" : "(): Boolean", "member" : "scala.tools.scalap.scalax.rules.scalasig.Flags.isMixedIn", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/ScalaSigSymbol.html#isMixedIn:Boolean", "kind" : "def"}, {"label" : "isLifted", "tail" : "(): Boolean", "member" : "scala.tools.scalap.scalax.rules.scalasig.Flags.isLifted", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/ScalaSigSymbol.html#isLifted:Boolean", "kind" : "def"}, {"label" : "isOverloaded", "tail" : "(): Boolean", "member" : "scala.tools.scalap.scalax.rules.scalasig.Flags.isOverloaded", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/ScalaSigSymbol.html#isOverloaded:Boolean", "kind" : "def"}, {"label" : "isError", "tail" : "(): Boolean", "member" : "scala.tools.scalap.scalax.rules.scalasig.Flags.isError", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/ScalaSigSymbol.html#isError:Boolean", "kind" : "def"}, {"label" : "isLazy", "tail" : "(): Boolean", "member" : "scala.tools.scalap.scalax.rules.scalasig.Flags.isLazy", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/ScalaSigSymbol.html#isLazy:Boolean", "kind" : "def"}, {"label" : "isMonomorphic", "tail" : "(): Boolean", "member" : "scala.tools.scalap.scalax.rules.scalasig.Flags.isMonomorphic", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/ScalaSigSymbol.html#isMonomorphic:Boolean", "kind" : "def"}, {"label" : "isModuleVar", "tail" : "(): Boolean", "member" : "scala.tools.scalap.scalax.rules.scalasig.Flags.isModuleVar", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/ScalaSigSymbol.html#isModuleVar:Boolean", "kind" : "def"}, {"label" : "isParamAccessor", "tail" : "(): Boolean", "member" : "scala.tools.scalap.scalax.rules.scalasig.Flags.isParamAccessor", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/ScalaSigSymbol.html#isParamAccessor:Boolean", "kind" : "def"}, {"label" : "isSuperAccessor", "tail" : "(): Boolean", "member" : "scala.tools.scalap.scalax.rules.scalasig.Flags.isSuperAccessor", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/ScalaSigSymbol.html#isSuperAccessor:Boolean", "kind" : "def"}, {"label" : "isAccessor", "tail" : "(): Boolean", "member" : "scala.tools.scalap.scalax.rules.scalasig.Flags.isAccessor", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/ScalaSigSymbol.html#isAccessor:Boolean", "kind" : "def"}, {"label" : "isBridge", "tail" : "(): Boolean", "member" : "scala.tools.scalap.scalax.rules.scalasig.Flags.isBridge", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/ScalaSigSymbol.html#isBridge:Boolean", "kind" : "def"}, {"label" : "isTrait", "tail" : "(): Boolean", "member" : "scala.tools.scalap.scalax.rules.scalasig.Flags.isTrait", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/ScalaSigSymbol.html#isTrait:Boolean", "kind" : "def"}, {"label" : "isCaseAccessor", "tail" : "(): Boolean", "member" : "scala.tools.scalap.scalax.rules.scalasig.Flags.isCaseAccessor", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/ScalaSigSymbol.html#isCaseAccessor:Boolean", "kind" : "def"}, {"label" : "isStatic", "tail" : "(): Boolean", "member" : "scala.tools.scalap.scalax.rules.scalasig.Flags.isStatic", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/ScalaSigSymbol.html#isStatic:Boolean", "kind" : "def"}, {"label" : "isStable", "tail" : "(): Boolean", "member" : "scala.tools.scalap.scalax.rules.scalasig.Flags.isStable", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/ScalaSigSymbol.html#isStable:Boolean", "kind" : "def"}, {"label" : "isSynthetic", "tail" : "(): Boolean", "member" : "scala.tools.scalap.scalax.rules.scalasig.Flags.isSynthetic", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/ScalaSigSymbol.html#isSynthetic:Boolean", "kind" : "def"}, {"label" : "isJava", "tail" : "(): Boolean", "member" : "scala.tools.scalap.scalax.rules.scalasig.Flags.isJava", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/ScalaSigSymbol.html#isJava:Boolean", "kind" : "def"}, {"label" : "isLocal", "tail" : "(): Boolean", "member" : "scala.tools.scalap.scalax.rules.scalasig.Flags.isLocal", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/ScalaSigSymbol.html#isLocal:Boolean", "kind" : "def"}, {"label" : "isAbstractOverride", "tail" : "(): Boolean", "member" : "scala.tools.scalap.scalax.rules.scalasig.Flags.isAbstractOverride", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/ScalaSigSymbol.html#isAbstractOverride:Boolean", "kind" : "def"}, {"label" : "isInConstructor", "tail" : "(): Boolean", "member" : "scala.tools.scalap.scalax.rules.scalasig.Flags.isInConstructor", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/ScalaSigSymbol.html#isInConstructor:Boolean", "kind" : "def"}, {"label" : "isLabel", "tail" : "(): Boolean", "member" : "scala.tools.scalap.scalax.rules.scalasig.Flags.isLabel", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/ScalaSigSymbol.html#isLabel:Boolean", "kind" : "def"}, {"label" : "isContravariant", "tail" : "(): Boolean", "member" : "scala.tools.scalap.scalax.rules.scalasig.Flags.isContravariant", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/ScalaSigSymbol.html#isContravariant:Boolean", "kind" : "def"}, {"label" : "isByNameParam", "tail" : "(): Boolean", "member" : "scala.tools.scalap.scalax.rules.scalasig.Flags.isByNameParam", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/ScalaSigSymbol.html#isByNameParam:Boolean", "kind" : "def"}, {"label" : "isCaptured", "tail" : "(): Boolean", "member" : "scala.tools.scalap.scalax.rules.scalasig.Flags.isCaptured", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/ScalaSigSymbol.html#isCaptured:Boolean", "kind" : "def"}, {"label" : "isCovariant", "tail" : "(): Boolean", "member" : "scala.tools.scalap.scalax.rules.scalasig.Flags.isCovariant", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/ScalaSigSymbol.html#isCovariant:Boolean", "kind" : "def"}, {"label" : "isDeprecated", "tail" : "(): Boolean", "member" : "scala.tools.scalap.scalax.rules.scalasig.Flags.isDeprecated", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/ScalaSigSymbol.html#isDeprecated:Boolean", "kind" : "def"}, {"label" : "isPackage", "tail" : "(): Boolean", "member" : "scala.tools.scalap.scalax.rules.scalasig.Flags.isPackage", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/ScalaSigSymbol.html#isPackage:Boolean", "kind" : "def"}, {"label" : "isParam", "tail" : "(): Boolean", "member" : "scala.tools.scalap.scalax.rules.scalasig.Flags.isParam", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/ScalaSigSymbol.html#isParam:Boolean", "kind" : "def"}, {"label" : "isMutable", "tail" : "(): Boolean", "member" : "scala.tools.scalap.scalax.rules.scalasig.Flags.isMutable", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/ScalaSigSymbol.html#isMutable:Boolean", "kind" : "def"}, {"label" : "isInterface", "tail" : "(): Boolean", "member" : "scala.tools.scalap.scalax.rules.scalasig.Flags.isInterface", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/ScalaSigSymbol.html#isInterface:Boolean", "kind" : "def"}, {"label" : "isModule", "tail" : "(): Boolean", "member" : "scala.tools.scalap.scalax.rules.scalasig.Flags.isModule", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/ScalaSigSymbol.html#isModule:Boolean", "kind" : "def"}, {"label" : "isMethod", "tail" : "(): Boolean", "member" : "scala.tools.scalap.scalax.rules.scalasig.Flags.isMethod", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/ScalaSigSymbol.html#isMethod:Boolean", "kind" : "def"}, {"label" : "isDeferred", "tail" : "(): Boolean", "member" : "scala.tools.scalap.scalax.rules.scalasig.Flags.isDeferred", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/ScalaSigSymbol.html#isDeferred:Boolean", "kind" : "def"}, {"label" : "isAbstract", "tail" : "(): Boolean", "member" : "scala.tools.scalap.scalax.rules.scalasig.Flags.isAbstract", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/ScalaSigSymbol.html#isAbstract:Boolean", "kind" : "def"}, {"label" : "isCase", "tail" : "(): Boolean", "member" : "scala.tools.scalap.scalax.rules.scalasig.Flags.isCase", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/ScalaSigSymbol.html#isCase:Boolean", "kind" : "def"}, {"label" : "isOverride", "tail" : "(): Boolean", "member" : "scala.tools.scalap.scalax.rules.scalasig.Flags.isOverride", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/ScalaSigSymbol.html#isOverride:Boolean", "kind" : "def"}, {"label" : "isSealed", "tail" : "(): Boolean", "member" : "scala.tools.scalap.scalax.rules.scalasig.Flags.isSealed", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/ScalaSigSymbol.html#isSealed:Boolean", "kind" : "def"}, {"label" : "isProtected", "tail" : "(): Boolean", "member" : "scala.tools.scalap.scalax.rules.scalasig.Flags.isProtected", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/ScalaSigSymbol.html#isProtected:Boolean", "kind" : "def"}, {"label" : "isPrivate", "tail" : "(): Boolean", "member" : "scala.tools.scalap.scalax.rules.scalasig.Flags.isPrivate", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/ScalaSigSymbol.html#isPrivate:Boolean", "kind" : "def"}, {"label" : "isFinal", "tail" : "(): Boolean", "member" : "scala.tools.scalap.scalax.rules.scalasig.Flags.isFinal", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/ScalaSigSymbol.html#isFinal:Boolean", "kind" : "def"}, {"label" : "isImplicit", "tail" : "(): Boolean", "member" : "scala.tools.scalap.scalax.rules.scalasig.Flags.isImplicit", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/ScalaSigSymbol.html#isImplicit:Boolean", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/ScalaSigSymbol.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/ScalaSigSymbol.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/ScalaSigSymbol.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/ScalaSigSymbol.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/ScalaSigSymbol.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/ScalaSigSymbol.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/ScalaSigSymbol.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/ScalaSigSymbol.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/ScalaSigSymbol.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/ScalaSigSymbol.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/ScalaSigSymbol.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/ScalaSigSymbol.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/ScalaSigSymbol.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/ScalaSigSymbol.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/ScalaSigSymbol.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/ScalaSigSymbol.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/ScalaSigSymbol.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/ScalaSigSymbol.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/ScalaSigSymbol.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "entry", "tail" : "(): Entry", "member" : "scala.tools.scalap.scalax.rules.scalasig.ScalaSigSymbol.entry", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/ScalaSigSymbol.html#entry:scala.tools.scalap.scalax.rules.scalasig.ScalaSig#Entry", "kind" : "abstract def"}, {"label" : "parent", "tail" : "(): Option[Symbol]", "member" : "scala.tools.scalap.scalax.rules.scalasig.Symbol.parent", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/ScalaSigSymbol.html#parent:Option[scala.tools.scalap.scalax.rules.scalasig.Symbol]", "kind" : "abstract def"}, {"label" : "name", "tail" : "(): String", "member" : "scala.tools.scalap.scalax.rules.scalasig.Symbol.name", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/ScalaSigSymbol.html#name:String", "kind" : "abstract def"}, {"label" : "hasFlag", "tail" : "(flag: Long): Boolean", "member" : "scala.tools.scalap.scalax.rules.scalasig.Flags.hasFlag", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/ScalaSigSymbol.html#hasFlag(flag:Long):Boolean", "kind" : "abstract def"}], "class" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/ScalaSigSymbol.html", "kind" : "class"}, {"name" : "scala.tools.scalap.scalax.rules.scalasig.SingleType", "shortDescription" : "", "members_case class" : [{"label" : "+", "tail" : "(other: String): String", "member" : "scala.Predef.any2stringadd.+", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/SingleType.html#+(other:String):String", "kind" : "def"}, {"label" : "formatted", "tail" : "(fmtstr: String): String", "member" : "scala.Predef.StringFormat.formatted", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/SingleType.html#formatted(fmtstr:String):String", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: (SingleType) => Boolean, msg: => Any): SingleType", "member" : "scala.Predef.Ensuring.ensuring", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/SingleType.html#ensuring(cond:A=>Boolean,msg:=>Any):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: (SingleType) => Boolean): SingleType", "member" : "scala.Predef.Ensuring.ensuring", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/SingleType.html#ensuring(cond:A=>Boolean):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: Boolean, msg: => Any): SingleType", "member" : "scala.Predef.Ensuring.ensuring", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/SingleType.html#ensuring(cond:Boolean,msg:=>Any):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: Boolean): SingleType", "member" : "scala.Predef.Ensuring.ensuring", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/SingleType.html#ensuring(cond:Boolean):A", "kind" : "def"}, {"label" : "→", "tail" : "(y: B): (SingleType, B)", "member" : "scala.Predef.ArrowAssoc.→", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/SingleType.html#→[B](y:B):(A,B)", "kind" : "def"}, {"label" : "->", "tail" : "(y: B): (SingleType, B)", "member" : "scala.Predef.ArrowAssoc.->", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/SingleType.html#->[B](y:B):(A,B)", "kind" : "def"}, {"member" : "scala.tools.scalap.scalax.rules.scalasig.SingleType#<init>", "error" : "unsupported entity"}, {"label" : "symbol", "tail" : ": Symbol", "member" : "scala.tools.scalap.scalax.rules.scalasig.SingleType.symbol", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/SingleType.html#symbol:scala.tools.scalap.scalax.rules.scalasig.Symbol", "kind" : "val"}, {"label" : "typeRef", "tail" : ": Type", "member" : "scala.tools.scalap.scalax.rules.scalasig.SingleType.typeRef", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/SingleType.html#typeRef:scala.tools.scalap.scalax.rules.scalasig.Type", "kind" : "val"}, {"label" : "productElementNames", "tail" : "(): Iterator[String]", "member" : "scala.Product.productElementNames", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/SingleType.html#productElementNames:Iterator[String]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/SingleType.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/SingleType.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/SingleType.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/SingleType.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/SingleType.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/SingleType.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/SingleType.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/SingleType.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/SingleType.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/SingleType.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/SingleType.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/SingleType.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/SingleType.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/SingleType.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/SingleType.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/SingleType.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/SingleType.html", "kind" : "case class"}, {"name" : "scala.tools.scalap.scalax.rules.scalasig.SourceFileAttributeParser", "shortDescription" : "", "object" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/SourceFileAttributeParser$.html", "members_object" : [{"label" : "DefaultRule", "tail" : "", "member" : "scala.tools.scalap.scalax.rules.Rules.DefaultRule", "link" : "scala\/tools\/scalap\/scalax\/rules\/Rules.html#DefaultRule[In,Out,A,X]extendsRule[In,Out,A,X]", "kind" : "class"}, {"label" : "FromRule", "tail" : "", "member" : "scala.tools.scalap.scalax.rules.Rules.FromRule", "link" : "scala\/tools\/scalap\/scalax\/rules\/Rules.html#FromRule[In]extendsAnyRef", "kind" : "trait"}, {"label" : "parse", "tail" : "(byteCode: ByteCode): SourceFileInfo", "member" : "scala.tools.scalap.scalax.rules.scalasig.SourceFileAttributeParser.parse", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/SourceFileAttributeParser$.html#parse(byteCode:scala.tools.scalap.scalax.rules.scalasig.ByteCode):scala.tools.scalap.scalax.rules.scalasig.SourceFileInfo", "kind" : "def"}, {"label" : "sourceFile", "tail" : ": rules.Rule[S, S, SourceFileInfo, Nothing]", "member" : "scala.tools.scalap.scalax.rules.scalasig.SourceFileAttributeParser.sourceFile", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/SourceFileAttributeParser$.html#sourceFile:scala.tools.scalap.scalax.rules.Rule[scala.tools.scalap.scalax.rules.scalasig.SourceFileAttributeParser.S,scala.tools.scalap.scalax.rules.scalasig.SourceFileAttributeParser.S,scala.tools.scalap.scalax.rules.scalasig.SourceFileInfo,Nothing]", "kind" : "val"}, {"label" : "bytes", "tail" : "(n: Int): rules.Rule[S, S, ByteCode, Nothing]", "member" : "scala.tools.scalap.scalax.rules.scalasig.ByteCodeReader.bytes", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/SourceFileAttributeParser$.html#bytes(n:Int):scala.tools.scalap.scalax.rules.Rule[ByteCodeReader.this.S,ByteCodeReader.this.S,scala.tools.scalap.scalax.rules.scalasig.ByteCode,Nothing]", "kind" : "def"}, {"label" : "u4", "tail" : ": rules.Rule[S, S, Int, Nothing]", "member" : "scala.tools.scalap.scalax.rules.scalasig.ByteCodeReader.u4", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/SourceFileAttributeParser$.html#u4:scala.tools.scalap.scalax.rules.Rule[ByteCodeReader.this.S,ByteCodeReader.this.S,Int,Nothing]", "kind" : "val"}, {"label" : "u2", "tail" : ": rules.Rule[S, S, Int, Nothing]", "member" : "scala.tools.scalap.scalax.rules.scalasig.ByteCodeReader.u2", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/SourceFileAttributeParser$.html#u2:scala.tools.scalap.scalax.rules.Rule[ByteCodeReader.this.S,ByteCodeReader.this.S,Int,Nothing]", "kind" : "val"}, {"label" : "u1", "tail" : ": rules.Rule[S, S, Int, Nothing]", "member" : "scala.tools.scalap.scalax.rules.scalasig.ByteCodeReader.u1", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/SourceFileAttributeParser$.html#u1:scala.tools.scalap.scalax.rules.Rule[ByteCodeReader.this.S,ByteCodeReader.this.S,Int,Nothing]", "kind" : "val"}, {"label" : "byte", "tail" : ": rules.Rule[S, S, Byte, Nothing]", "member" : "scala.tools.scalap.scalax.rules.scalasig.ByteCodeReader.byte", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/SourceFileAttributeParser$.html#byte:scala.tools.scalap.scalax.rules.Rule[ByteCodeReader.this.S,ByteCodeReader.this.S,Byte,Nothing]", "kind" : "val"}, {"label" : "Parser", "tail" : "", "member" : "scala.tools.scalap.scalax.rules.scalasig.ByteCodeReader.Parser", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/SourceFileAttributeParser$.html#Parser[A]=ByteCodeReader.this.Rule[A,String]", "kind" : "type"}, {"label" : "S", "tail" : "", "member" : "scala.tools.scalap.scalax.rules.scalasig.ByteCodeReader.S", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/SourceFileAttributeParser$.html#S=scala.tools.scalap.scalax.rules.scalasig.ByteCode", "kind" : "type"}, {"label" : "factory", "tail" : ": RulesWithState", "member" : "scala.tools.scalap.scalax.rules.RulesWithState.factory", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/SourceFileAttributeParser$.html#factory:scala.tools.scalap.scalax.rules.RulesWithState", "kind" : "val"}, {"label" : "repeatUntil", "tail" : "(rule: Rule[(T) => T, X])(finished: (T) => Boolean)(initial: T): rules.Rule[S, S, T, X]", "member" : "scala.tools.scalap.scalax.rules.StateRules.repeatUntil", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/SourceFileAttributeParser$.html#repeatUntil[T,X](rule:StateRules.this.Rule[T=>T,X])(finished:T=>Boolean)(initial:T):scala.tools.scalap.scalax.rules.Rule[StateRules.this.S,StateRules.this.S,T,X]", "kind" : "def"}, {"label" : "anyOf", "tail" : "(rules: Seq[Rule[A, X]]): rules.Rule[S, S, collection.immutable.List[A], X]", "member" : "scala.tools.scalap.scalax.rules.StateRules.anyOf", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/SourceFileAttributeParser$.html#anyOf[A,X](rules:Seq[StateRules.this.Rule[A,X]]):scala.tools.scalap.scalax.rules.Rule[StateRules.this.S,StateRules.this.S,List[A],X]", "kind" : "def"}, {"label" : "allOf", "tail" : "(rules: Seq[Rule[A, X]]): (S) => Result[S, List[A], X]", "member" : "scala.tools.scalap.scalax.rules.StateRules.allOf", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/SourceFileAttributeParser$.html#allOf[A,X](rules:Seq[StateRules.this.Rule[A,X]]):StateRules.this.S=>scala.tools.scalap.scalax.rules.Result[StateRules.this.S,List[A],X]", "kind" : "def"}, {"label" : "cond", "tail" : "(f: (S) => Boolean): rules.Rule[S, S, S, Nothing]", "member" : "scala.tools.scalap.scalax.rules.StateRules.cond", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/SourceFileAttributeParser$.html#cond(f:StateRules.this.S=>Boolean):scala.tools.scalap.scalax.rules.Rule[StateRules.this.S,StateRules.this.S,StateRules.this.S,Nothing]", "kind" : "def"}, {"label" : "none", "tail" : "(): rules.Rule[S, S, None.type, Nothing]", "member" : "scala.tools.scalap.scalax.rules.StateRules.none", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/SourceFileAttributeParser$.html#none:scala.tools.scalap.scalax.rules.Rule[StateRules.this.S,StateRules.this.S,None.type,Nothing]", "kind" : "def"}, {"label" : "nil", "tail" : "(): rules.Rule[S, S, collection.immutable.Nil.type, Nothing]", "member" : "scala.tools.scalap.scalax.rules.StateRules.nil", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/SourceFileAttributeParser$.html#nil:scala.tools.scalap.scalax.rules.Rule[StateRules.this.S,StateRules.this.S,scala.collection.immutable.Nil.type,Nothing]", "kind" : "def"}, {"label" : "update", "tail" : "(f: (S) => S): rules.Rule[S, S, S, Nothing]", "member" : "scala.tools.scalap.scalax.rules.StateRules.update", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/SourceFileAttributeParser$.html#update(f:StateRules.this.S=>StateRules.this.S):scala.tools.scalap.scalax.rules.Rule[StateRules.this.S,StateRules.this.S,StateRules.this.S,Nothing]", "kind" : "def"}, {"label" : "set", "tail" : "(s: => S): rules.Rule[S, S, S, Nothing]", "member" : "scala.tools.scalap.scalax.rules.StateRules.set", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/SourceFileAttributeParser$.html#set(s:=>StateRules.this.S):scala.tools.scalap.scalax.rules.Rule[StateRules.this.S,StateRules.this.S,StateRules.this.S,Nothing]", "kind" : "def"}, {"label" : "get", "tail" : "(): rules.Rule[S, S, S, Nothing]", "member" : "scala.tools.scalap.scalax.rules.StateRules.get", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/SourceFileAttributeParser$.html#get:scala.tools.scalap.scalax.rules.Rule[StateRules.this.S,StateRules.this.S,StateRules.this.S,Nothing]", "kind" : "def"}, {"label" : "read", "tail" : "(f: (S) => A): rules.Rule[S, S, A, Nothing]", "member" : "scala.tools.scalap.scalax.rules.StateRules.read", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/SourceFileAttributeParser$.html#read[A](f:StateRules.this.S=>A):scala.tools.scalap.scalax.rules.Rule[StateRules.this.S,StateRules.this.S,A,Nothing]", "kind" : "def"}, {"label" : "unit", "tail" : "(a: => A): rules.Rule[S, S, A, Nothing]", "member" : "scala.tools.scalap.scalax.rules.StateRules.unit", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/SourceFileAttributeParser$.html#unit[A](a:=>A):scala.tools.scalap.scalax.rules.Rule[StateRules.this.S,StateRules.this.S,A,Nothing]", "kind" : "def"}, {"label" : "apply", "tail" : "(f: (S) => Result[S, A, X]): rules.Rule[S, S, A, X]", "member" : "scala.tools.scalap.scalax.rules.StateRules.apply", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/SourceFileAttributeParser$.html#apply[A,X](f:StateRules.this.S=>scala.tools.scalap.scalax.rules.Result[StateRules.this.S,A,X]):scala.tools.scalap.scalax.rules.Rule[StateRules.this.S,StateRules.this.S,A,X]", "kind" : "def"}, {"label" : "Rule", "tail" : "", "member" : "scala.tools.scalap.scalax.rules.StateRules.Rule", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/SourceFileAttributeParser$.html#Rule[+A,+X]=scala.tools.scalap.scalax.rules.Rule[StateRules.this.S,StateRules.this.S,A,X]", "kind" : "type"}, {"label" : "expect", "tail" : "(rule: rules.Rule[In, Out, A, R]): (In) => A", "member" : "scala.tools.scalap.scalax.rules.Rules.expect", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/SourceFileAttributeParser$.html#expect[In,Out,A,R](rule:scala.tools.scalap.scalax.rules.Rule[In,Out,A,R]):In=>A", "kind" : "def"}, {"label" : "ruleWithName", "tail" : "(_name: String, f: (In) => Result[Out, A, X]): rules.Rule[In, Out, A, X] with Name", "member" : "scala.tools.scalap.scalax.rules.Rules.ruleWithName", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/SourceFileAttributeParser$.html#ruleWithName[In,Out,A,X](_name:String,f:In=>scala.tools.scalap.scalax.rules.Result[Out,A,X]):scala.tools.scalap.scalax.rules.Rule[In,Out,A,X]withscala.tools.scalap.scalax.rules.Name", "kind" : "def"}, {"label" : "oneOf", "tail" : "(rules: rules.Rule[In, Out, A, X]*): rules.Rule[In, Out, A, X]", "member" : "scala.tools.scalap.scalax.rules.Rules.oneOf", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/SourceFileAttributeParser$.html#oneOf[In,Out,A,X](rules:scala.tools.scalap.scalax.rules.Rule[In,Out,A,X]*):scala.tools.scalap.scalax.rules.Rule[In,Out,A,X]", "kind" : "def"}, {"label" : "error", "tail" : "(err: X): rules.Rule[Any, Nothing, Nothing, X]", "member" : "scala.tools.scalap.scalax.rules.Rules.error", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/SourceFileAttributeParser$.html#error[X](err:X):scala.tools.scalap.scalax.rules.Rule[Any,Nothing,Nothing,X]", "kind" : "def"}, {"label" : "error", "tail" : "(): rules.Rule[In, Nothing, Nothing, In]", "member" : "scala.tools.scalap.scalax.rules.Rules.error", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/SourceFileAttributeParser$.html#error[In]:scala.tools.scalap.scalax.rules.Rule[In,Nothing,Nothing,In]", "kind" : "def"}, {"label" : "failure", "tail" : "(): rules.Rule[Any, Nothing, Nothing, Nothing]", "member" : "scala.tools.scalap.scalax.rules.Rules.failure", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/SourceFileAttributeParser$.html#failure:scala.tools.scalap.scalax.rules.Rule[Any,Nothing,Nothing,Nothing]", "kind" : "def"}, {"label" : "success", "tail" : "(out: Out, a: A): rules.Rule[Any, Out, A, Nothing]", "member" : "scala.tools.scalap.scalax.rules.Rules.success", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/SourceFileAttributeParser$.html#success[Out,A](out:Out,a:A):scala.tools.scalap.scalax.rules.Rule[Any,Out,A,Nothing]", "kind" : "def"}, {"label" : "state", "tail" : "(): StateRules { type S = s }", "member" : "scala.tools.scalap.scalax.rules.Rules.state", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/SourceFileAttributeParser$.html#state[s]:scala.tools.scalap.scalax.rules.StateRules{typeS=s}", "kind" : "def"}, {"label" : "from", "tail" : "(): FromRule[In]", "member" : "scala.tools.scalap.scalax.rules.Rules.from", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/SourceFileAttributeParser$.html#from[In]:Rules.this.FromRule[In]", "kind" : "def"}, {"label" : "seqRule", "tail" : "(rule: rules.Rule[In, In, A, X]): SeqRule[In, A, X]", "member" : "scala.tools.scalap.scalax.rules.Rules.seqRule", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/SourceFileAttributeParser$.html#seqRule[In,A,X](rule:scala.tools.scalap.scalax.rules.Rule[In,In,A,X]):scala.tools.scalap.scalax.rules.SeqRule[In,A,X]", "kind" : "implicit def"}, {"label" : "inRule", "tail" : "(rule: rules.Rule[In, Out, A, X]): InRule[In, Out, A, X]", "member" : "scala.tools.scalap.scalax.rules.Rules.inRule", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/SourceFileAttributeParser$.html#inRule[In,Out,A,X](rule:scala.tools.scalap.scalax.rules.Rule[In,Out,A,X]):scala.tools.scalap.scalax.rules.InRule[In,Out,A,X]", "kind" : "implicit def"}, {"label" : "rule", "tail" : "(f: (In) => Result[Out, A, X]): rules.Rule[In, Out, A, X]", "member" : "scala.tools.scalap.scalax.rules.Rules.rule", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/SourceFileAttributeParser$.html#rule[In,Out,A,X](f:In=>scala.tools.scalap.scalax.rules.Result[Out,A,X]):scala.tools.scalap.scalax.rules.Rule[In,Out,A,X]", "kind" : "implicit def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/SourceFileAttributeParser$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/SourceFileAttributeParser$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/SourceFileAttributeParser$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/SourceFileAttributeParser$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/SourceFileAttributeParser$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/SourceFileAttributeParser$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/SourceFileAttributeParser$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/SourceFileAttributeParser$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/SourceFileAttributeParser$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/SourceFileAttributeParser$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/SourceFileAttributeParser$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/SourceFileAttributeParser$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/SourceFileAttributeParser$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/SourceFileAttributeParser$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/SourceFileAttributeParser$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/SourceFileAttributeParser$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/SourceFileAttributeParser$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/SourceFileAttributeParser$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/SourceFileAttributeParser$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "scala.tools.scalap.scalax.rules.scalasig.SourceFileInfo", "shortDescription" : "SourceFile_attribute {    \tu2 attribute_name_index;    \tu4 attribute_length;    \tu2 sourcefile_index;    }", "members_case class" : [{"label" : "+", "tail" : "(other: String): String", "member" : "scala.Predef.any2stringadd.+", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/SourceFileInfo.html#+(other:String):String", "kind" : "def"}, {"label" : "formatted", "tail" : "(fmtstr: String): String", "member" : "scala.Predef.StringFormat.formatted", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/SourceFileInfo.html#formatted(fmtstr:String):String", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: (SourceFileInfo) => Boolean, msg: => Any): SourceFileInfo", "member" : "scala.Predef.Ensuring.ensuring", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/SourceFileInfo.html#ensuring(cond:A=>Boolean,msg:=>Any):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: (SourceFileInfo) => Boolean): SourceFileInfo", "member" : "scala.Predef.Ensuring.ensuring", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/SourceFileInfo.html#ensuring(cond:A=>Boolean):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: Boolean, msg: => Any): SourceFileInfo", "member" : "scala.Predef.Ensuring.ensuring", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/SourceFileInfo.html#ensuring(cond:Boolean,msg:=>Any):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: Boolean): SourceFileInfo", "member" : "scala.Predef.Ensuring.ensuring", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/SourceFileInfo.html#ensuring(cond:Boolean):A", "kind" : "def"}, {"label" : "→", "tail" : "(y: B): (SourceFileInfo, B)", "member" : "scala.Predef.ArrowAssoc.→", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/SourceFileInfo.html#→[B](y:B):(A,B)", "kind" : "def"}, {"label" : "->", "tail" : "(y: B): (SourceFileInfo, B)", "member" : "scala.Predef.ArrowAssoc.->", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/SourceFileInfo.html#->[B](y:B):(A,B)", "kind" : "def"}, {"member" : "scala.tools.scalap.scalax.rules.scalasig.SourceFileInfo#<init>", "error" : "unsupported entity"}, {"label" : "sourceFileIndex", "tail" : ": Int", "member" : "scala.tools.scalap.scalax.rules.scalasig.SourceFileInfo.sourceFileIndex", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/SourceFileInfo.html#sourceFileIndex:Int", "kind" : "val"}, {"label" : "productElementNames", "tail" : "(): Iterator[String]", "member" : "scala.Product.productElementNames", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/SourceFileInfo.html#productElementNames:Iterator[String]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/SourceFileInfo.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/SourceFileInfo.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/SourceFileInfo.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/SourceFileInfo.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/SourceFileInfo.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/SourceFileInfo.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/SourceFileInfo.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/SourceFileInfo.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/SourceFileInfo.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/SourceFileInfo.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/SourceFileInfo.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/SourceFileInfo.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/SourceFileInfo.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/SourceFileInfo.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/SourceFileInfo.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/SourceFileInfo.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/SourceFileInfo.html", "kind" : "case class"}, {"name" : "scala.tools.scalap.scalax.rules.scalasig.StringBytesPair", "shortDescription" : "The wrapper for decode UTF-8 string", "members_case class" : [{"label" : "+", "tail" : "(other: String): String", "member" : "scala.Predef.any2stringadd.+", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/StringBytesPair.html#+(other:String):String", "kind" : "def"}, {"label" : "formatted", "tail" : "(fmtstr: String): String", "member" : "scala.Predef.StringFormat.formatted", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/StringBytesPair.html#formatted(fmtstr:String):String", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: (StringBytesPair) => Boolean, msg: => Any): StringBytesPair", "member" : "scala.Predef.Ensuring.ensuring", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/StringBytesPair.html#ensuring(cond:A=>Boolean,msg:=>Any):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: (StringBytesPair) => Boolean): StringBytesPair", "member" : "scala.Predef.Ensuring.ensuring", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/StringBytesPair.html#ensuring(cond:A=>Boolean):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: Boolean, msg: => Any): StringBytesPair", "member" : "scala.Predef.Ensuring.ensuring", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/StringBytesPair.html#ensuring(cond:Boolean,msg:=>Any):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: Boolean): StringBytesPair", "member" : "scala.Predef.Ensuring.ensuring", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/StringBytesPair.html#ensuring(cond:Boolean):A", "kind" : "def"}, {"label" : "→", "tail" : "(y: B): (StringBytesPair, B)", "member" : "scala.Predef.ArrowAssoc.→", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/StringBytesPair.html#→[B](y:B):(A,B)", "kind" : "def"}, {"label" : "->", "tail" : "(y: B): (StringBytesPair, B)", "member" : "scala.Predef.ArrowAssoc.->", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/StringBytesPair.html#->[B](y:B):(A,B)", "kind" : "def"}, {"member" : "scala.tools.scalap.scalax.rules.scalasig.StringBytesPair#<init>", "error" : "unsupported entity"}, {"label" : "bytes", "tail" : ": Array[Byte]", "member" : "scala.tools.scalap.scalax.rules.scalasig.StringBytesPair.bytes", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/StringBytesPair.html#bytes:Array[Byte]", "kind" : "val"}, {"label" : "string", "tail" : ": String", "member" : "scala.tools.scalap.scalax.rules.scalasig.StringBytesPair.string", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/StringBytesPair.html#string:String", "kind" : "val"}, {"label" : "productElementNames", "tail" : "(): Iterator[String]", "member" : "scala.Product.productElementNames", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/StringBytesPair.html#productElementNames:Iterator[String]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/StringBytesPair.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/StringBytesPair.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/StringBytesPair.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/StringBytesPair.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/StringBytesPair.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/StringBytesPair.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/StringBytesPair.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/StringBytesPair.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/StringBytesPair.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/StringBytesPair.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/StringBytesPair.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/StringBytesPair.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/StringBytesPair.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/StringBytesPair.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/StringBytesPair.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/StringBytesPair.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/StringBytesPair.html", "kind" : "case class"}, {"name" : "scala.tools.scalap.scalax.rules.scalasig.Symbol", "trait" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/Symbol.html", "kind" : "trait", "members_trait" : [{"label" : "+", "tail" : "(other: String): String", "member" : "scala.Predef.any2stringadd.+", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/Symbol.html#+(other:String):String", "kind" : "def"}, {"label" : "formatted", "tail" : "(fmtstr: String): String", "member" : "scala.Predef.StringFormat.formatted", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/Symbol.html#formatted(fmtstr:String):String", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: (Symbol) => Boolean, msg: => Any): Symbol", "member" : "scala.Predef.Ensuring.ensuring", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/Symbol.html#ensuring(cond:A=>Boolean,msg:=>Any):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: (Symbol) => Boolean): Symbol", "member" : "scala.Predef.Ensuring.ensuring", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/Symbol.html#ensuring(cond:A=>Boolean):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: Boolean, msg: => Any): Symbol", "member" : "scala.Predef.Ensuring.ensuring", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/Symbol.html#ensuring(cond:Boolean,msg:=>Any):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: Boolean): Symbol", "member" : "scala.Predef.Ensuring.ensuring", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/Symbol.html#ensuring(cond:Boolean):A", "kind" : "def"}, {"label" : "→", "tail" : "(y: B): (Symbol, B)", "member" : "scala.Predef.ArrowAssoc.→", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/Symbol.html#→[B](y:B):(A,B)", "kind" : "def"}, {"label" : "->", "tail" : "(y: B): (Symbol, B)", "member" : "scala.Predef.ArrowAssoc.->", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/Symbol.html#->[B](y:B):(A,B)", "kind" : "def"}, {"label" : "path", "tail" : "(): String", "member" : "scala.tools.scalap.scalax.rules.scalasig.Symbol.path", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/Symbol.html#path:String", "kind" : "def"}, {"label" : "isPreSuper", "tail" : "(): Boolean", "member" : "scala.tools.scalap.scalax.rules.scalasig.Flags.isPreSuper", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/Symbol.html#isPreSuper:Boolean", "kind" : "def"}, {"label" : "isImplementationClass", "tail" : "(): Boolean", "member" : "scala.tools.scalap.scalax.rules.scalasig.Flags.isImplementationClass", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/Symbol.html#isImplementationClass:Boolean", "kind" : "def"}, {"label" : "isExpandedName", "tail" : "(): Boolean", "member" : "scala.tools.scalap.scalax.rules.scalasig.Flags.isExpandedName", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/Symbol.html#isExpandedName:Boolean", "kind" : "def"}, {"label" : "isExistential", "tail" : "(): Boolean", "member" : "scala.tools.scalap.scalax.rules.scalasig.Flags.isExistential", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/Symbol.html#isExistential:Boolean", "kind" : "def"}, {"label" : "isMixedIn", "tail" : "(): Boolean", "member" : "scala.tools.scalap.scalax.rules.scalasig.Flags.isMixedIn", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/Symbol.html#isMixedIn:Boolean", "kind" : "def"}, {"label" : "isLifted", "tail" : "(): Boolean", "member" : "scala.tools.scalap.scalax.rules.scalasig.Flags.isLifted", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/Symbol.html#isLifted:Boolean", "kind" : "def"}, {"label" : "isOverloaded", "tail" : "(): Boolean", "member" : "scala.tools.scalap.scalax.rules.scalasig.Flags.isOverloaded", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/Symbol.html#isOverloaded:Boolean", "kind" : "def"}, {"label" : "isError", "tail" : "(): Boolean", "member" : "scala.tools.scalap.scalax.rules.scalasig.Flags.isError", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/Symbol.html#isError:Boolean", "kind" : "def"}, {"label" : "isLazy", "tail" : "(): Boolean", "member" : "scala.tools.scalap.scalax.rules.scalasig.Flags.isLazy", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/Symbol.html#isLazy:Boolean", "kind" : "def"}, {"label" : "isMonomorphic", "tail" : "(): Boolean", "member" : "scala.tools.scalap.scalax.rules.scalasig.Flags.isMonomorphic", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/Symbol.html#isMonomorphic:Boolean", "kind" : "def"}, {"label" : "isModuleVar", "tail" : "(): Boolean", "member" : "scala.tools.scalap.scalax.rules.scalasig.Flags.isModuleVar", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/Symbol.html#isModuleVar:Boolean", "kind" : "def"}, {"label" : "isParamAccessor", "tail" : "(): Boolean", "member" : "scala.tools.scalap.scalax.rules.scalasig.Flags.isParamAccessor", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/Symbol.html#isParamAccessor:Boolean", "kind" : "def"}, {"label" : "isSuperAccessor", "tail" : "(): Boolean", "member" : "scala.tools.scalap.scalax.rules.scalasig.Flags.isSuperAccessor", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/Symbol.html#isSuperAccessor:Boolean", "kind" : "def"}, {"label" : "isAccessor", "tail" : "(): Boolean", "member" : "scala.tools.scalap.scalax.rules.scalasig.Flags.isAccessor", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/Symbol.html#isAccessor:Boolean", "kind" : "def"}, {"label" : "isBridge", "tail" : "(): Boolean", "member" : "scala.tools.scalap.scalax.rules.scalasig.Flags.isBridge", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/Symbol.html#isBridge:Boolean", "kind" : "def"}, {"label" : "isTrait", "tail" : "(): Boolean", "member" : "scala.tools.scalap.scalax.rules.scalasig.Flags.isTrait", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/Symbol.html#isTrait:Boolean", "kind" : "def"}, {"label" : "isCaseAccessor", "tail" : "(): Boolean", "member" : "scala.tools.scalap.scalax.rules.scalasig.Flags.isCaseAccessor", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/Symbol.html#isCaseAccessor:Boolean", "kind" : "def"}, {"label" : "isStatic", "tail" : "(): Boolean", "member" : "scala.tools.scalap.scalax.rules.scalasig.Flags.isStatic", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/Symbol.html#isStatic:Boolean", "kind" : "def"}, {"label" : "isStable", "tail" : "(): Boolean", "member" : "scala.tools.scalap.scalax.rules.scalasig.Flags.isStable", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/Symbol.html#isStable:Boolean", "kind" : "def"}, {"label" : "isSynthetic", "tail" : "(): Boolean", "member" : "scala.tools.scalap.scalax.rules.scalasig.Flags.isSynthetic", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/Symbol.html#isSynthetic:Boolean", "kind" : "def"}, {"label" : "isJava", "tail" : "(): Boolean", "member" : "scala.tools.scalap.scalax.rules.scalasig.Flags.isJava", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/Symbol.html#isJava:Boolean", "kind" : "def"}, {"label" : "isLocal", "tail" : "(): Boolean", "member" : "scala.tools.scalap.scalax.rules.scalasig.Flags.isLocal", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/Symbol.html#isLocal:Boolean", "kind" : "def"}, {"label" : "isAbstractOverride", "tail" : "(): Boolean", "member" : "scala.tools.scalap.scalax.rules.scalasig.Flags.isAbstractOverride", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/Symbol.html#isAbstractOverride:Boolean", "kind" : "def"}, {"label" : "isInConstructor", "tail" : "(): Boolean", "member" : "scala.tools.scalap.scalax.rules.scalasig.Flags.isInConstructor", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/Symbol.html#isInConstructor:Boolean", "kind" : "def"}, {"label" : "isLabel", "tail" : "(): Boolean", "member" : "scala.tools.scalap.scalax.rules.scalasig.Flags.isLabel", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/Symbol.html#isLabel:Boolean", "kind" : "def"}, {"label" : "isContravariant", "tail" : "(): Boolean", "member" : "scala.tools.scalap.scalax.rules.scalasig.Flags.isContravariant", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/Symbol.html#isContravariant:Boolean", "kind" : "def"}, {"label" : "isByNameParam", "tail" : "(): Boolean", "member" : "scala.tools.scalap.scalax.rules.scalasig.Flags.isByNameParam", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/Symbol.html#isByNameParam:Boolean", "kind" : "def"}, {"label" : "isCaptured", "tail" : "(): Boolean", "member" : "scala.tools.scalap.scalax.rules.scalasig.Flags.isCaptured", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/Symbol.html#isCaptured:Boolean", "kind" : "def"}, {"label" : "isCovariant", "tail" : "(): Boolean", "member" : "scala.tools.scalap.scalax.rules.scalasig.Flags.isCovariant", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/Symbol.html#isCovariant:Boolean", "kind" : "def"}, {"label" : "isDeprecated", "tail" : "(): Boolean", "member" : "scala.tools.scalap.scalax.rules.scalasig.Flags.isDeprecated", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/Symbol.html#isDeprecated:Boolean", "kind" : "def"}, {"label" : "isPackage", "tail" : "(): Boolean", "member" : "scala.tools.scalap.scalax.rules.scalasig.Flags.isPackage", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/Symbol.html#isPackage:Boolean", "kind" : "def"}, {"label" : "isParam", "tail" : "(): Boolean", "member" : "scala.tools.scalap.scalax.rules.scalasig.Flags.isParam", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/Symbol.html#isParam:Boolean", "kind" : "def"}, {"label" : "isMutable", "tail" : "(): Boolean", "member" : "scala.tools.scalap.scalax.rules.scalasig.Flags.isMutable", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/Symbol.html#isMutable:Boolean", "kind" : "def"}, {"label" : "isInterface", "tail" : "(): Boolean", "member" : "scala.tools.scalap.scalax.rules.scalasig.Flags.isInterface", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/Symbol.html#isInterface:Boolean", "kind" : "def"}, {"label" : "isModule", "tail" : "(): Boolean", "member" : "scala.tools.scalap.scalax.rules.scalasig.Flags.isModule", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/Symbol.html#isModule:Boolean", "kind" : "def"}, {"label" : "isMethod", "tail" : "(): Boolean", "member" : "scala.tools.scalap.scalax.rules.scalasig.Flags.isMethod", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/Symbol.html#isMethod:Boolean", "kind" : "def"}, {"label" : "isDeferred", "tail" : "(): Boolean", "member" : "scala.tools.scalap.scalax.rules.scalasig.Flags.isDeferred", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/Symbol.html#isDeferred:Boolean", "kind" : "def"}, {"label" : "isAbstract", "tail" : "(): Boolean", "member" : "scala.tools.scalap.scalax.rules.scalasig.Flags.isAbstract", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/Symbol.html#isAbstract:Boolean", "kind" : "def"}, {"label" : "isCase", "tail" : "(): Boolean", "member" : "scala.tools.scalap.scalax.rules.scalasig.Flags.isCase", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/Symbol.html#isCase:Boolean", "kind" : "def"}, {"label" : "isOverride", "tail" : "(): Boolean", "member" : "scala.tools.scalap.scalax.rules.scalasig.Flags.isOverride", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/Symbol.html#isOverride:Boolean", "kind" : "def"}, {"label" : "isSealed", "tail" : "(): Boolean", "member" : "scala.tools.scalap.scalax.rules.scalasig.Flags.isSealed", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/Symbol.html#isSealed:Boolean", "kind" : "def"}, {"label" : "isProtected", "tail" : "(): Boolean", "member" : "scala.tools.scalap.scalax.rules.scalasig.Flags.isProtected", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/Symbol.html#isProtected:Boolean", "kind" : "def"}, {"label" : "isPrivate", "tail" : "(): Boolean", "member" : "scala.tools.scalap.scalax.rules.scalasig.Flags.isPrivate", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/Symbol.html#isPrivate:Boolean", "kind" : "def"}, {"label" : "isFinal", "tail" : "(): Boolean", "member" : "scala.tools.scalap.scalax.rules.scalasig.Flags.isFinal", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/Symbol.html#isFinal:Boolean", "kind" : "def"}, {"label" : "isImplicit", "tail" : "(): Boolean", "member" : "scala.tools.scalap.scalax.rules.scalasig.Flags.isImplicit", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/Symbol.html#isImplicit:Boolean", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/Symbol.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/Symbol.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/Symbol.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/Symbol.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/Symbol.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/Symbol.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/Symbol.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/Symbol.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/Symbol.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/Symbol.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/Symbol.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/Symbol.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/Symbol.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/Symbol.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/Symbol.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/Symbol.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/Symbol.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/Symbol.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/Symbol.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "children", "tail" : "(): Seq[Symbol]", "member" : "scala.tools.scalap.scalax.rules.scalasig.Symbol.children", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/Symbol.html#children:Seq[scala.tools.scalap.scalax.rules.scalasig.Symbol]", "kind" : "abstract def"}, {"label" : "parent", "tail" : "(): Option[Symbol]", "member" : "scala.tools.scalap.scalax.rules.scalasig.Symbol.parent", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/Symbol.html#parent:Option[scala.tools.scalap.scalax.rules.scalasig.Symbol]", "kind" : "abstract def"}, {"label" : "name", "tail" : "(): String", "member" : "scala.tools.scalap.scalax.rules.scalasig.Symbol.name", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/Symbol.html#name:String", "kind" : "abstract def"}, {"label" : "hasFlag", "tail" : "(flag: Long): Boolean", "member" : "scala.tools.scalap.scalax.rules.scalasig.Flags.hasFlag", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/Symbol.html#hasFlag(flag:Long):Boolean", "kind" : "abstract def"}], "shortDescription" : ""}, {"name" : "scala.tools.scalap.scalax.rules.scalasig.SymbolInfo", "shortDescription" : "", "members_case class" : [{"label" : "+", "tail" : "(other: String): String", "member" : "scala.Predef.any2stringadd.+", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/SymbolInfo.html#+(other:String):String", "kind" : "def"}, {"label" : "formatted", "tail" : "(fmtstr: String): String", "member" : "scala.Predef.StringFormat.formatted", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/SymbolInfo.html#formatted(fmtstr:String):String", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: (SymbolInfo) => Boolean, msg: => Any): SymbolInfo", "member" : "scala.Predef.Ensuring.ensuring", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/SymbolInfo.html#ensuring(cond:A=>Boolean,msg:=>Any):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: (SymbolInfo) => Boolean): SymbolInfo", "member" : "scala.Predef.Ensuring.ensuring", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/SymbolInfo.html#ensuring(cond:A=>Boolean):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: Boolean, msg: => Any): SymbolInfo", "member" : "scala.Predef.Ensuring.ensuring", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/SymbolInfo.html#ensuring(cond:Boolean,msg:=>Any):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: Boolean): SymbolInfo", "member" : "scala.Predef.Ensuring.ensuring", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/SymbolInfo.html#ensuring(cond:Boolean):A", "kind" : "def"}, {"label" : "→", "tail" : "(y: B): (SymbolInfo, B)", "member" : "scala.Predef.ArrowAssoc.→", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/SymbolInfo.html#→[B](y:B):(A,B)", "kind" : "def"}, {"label" : "->", "tail" : "(y: B): (SymbolInfo, B)", "member" : "scala.Predef.ArrowAssoc.->", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/SymbolInfo.html#->[B](y:B):(A,B)", "kind" : "def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.tools.scalap.scalax.rules.scalasig.SymbolInfo.toString", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/SymbolInfo.html#toString():String", "kind" : "def"}, {"label" : "symbolString", "tail" : "(any: AnyRef): String", "member" : "scala.tools.scalap.scalax.rules.scalasig.SymbolInfo.symbolString", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/SymbolInfo.html#symbolString(any:AnyRef):String", "kind" : "def"}, {"member" : "scala.tools.scalap.scalax.rules.scalasig.SymbolInfo#<init>", "error" : "unsupported entity"}, {"label" : "entry", "tail" : ": Entry", "member" : "scala.tools.scalap.scalax.rules.scalasig.SymbolInfo.entry", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/SymbolInfo.html#entry:scala.tools.scalap.scalax.rules.scalasig.ScalaSig#Entry", "kind" : "val"}, {"label" : "info", "tail" : ": Int", "member" : "scala.tools.scalap.scalax.rules.scalasig.SymbolInfo.info", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/SymbolInfo.html#info:Int", "kind" : "val"}, {"label" : "privateWithin", "tail" : ": Option[AnyRef]", "member" : "scala.tools.scalap.scalax.rules.scalasig.SymbolInfo.privateWithin", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/SymbolInfo.html#privateWithin:Option[AnyRef]", "kind" : "val"}, {"label" : "flags", "tail" : ": Int", "member" : "scala.tools.scalap.scalax.rules.scalasig.SymbolInfo.flags", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/SymbolInfo.html#flags:Int", "kind" : "val"}, {"label" : "owner", "tail" : ": Symbol", "member" : "scala.tools.scalap.scalax.rules.scalasig.SymbolInfo.owner", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/SymbolInfo.html#owner:scala.tools.scalap.scalax.rules.scalasig.Symbol", "kind" : "val"}, {"label" : "name", "tail" : ": String", "member" : "scala.tools.scalap.scalax.rules.scalasig.SymbolInfo.name", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/SymbolInfo.html#name:String", "kind" : "val"}, {"label" : "productElementNames", "tail" : "(): Iterator[String]", "member" : "scala.Product.productElementNames", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/SymbolInfo.html#productElementNames:Iterator[String]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/SymbolInfo.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/SymbolInfo.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/SymbolInfo.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/SymbolInfo.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/SymbolInfo.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/SymbolInfo.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/SymbolInfo.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/SymbolInfo.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/SymbolInfo.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/SymbolInfo.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/SymbolInfo.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/SymbolInfo.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/SymbolInfo.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/SymbolInfo.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/SymbolInfo.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/SymbolInfo.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/SymbolInfo.html", "kind" : "case class"}, {"name" : "scala.tools.scalap.scalax.rules.scalasig.SymbolInfoSymbol", "shortDescription" : "", "members_class" : [{"label" : "+", "tail" : "(other: String): String", "member" : "scala.Predef.any2stringadd.+", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/SymbolInfoSymbol.html#+(other:String):String", "kind" : "def"}, {"label" : "formatted", "tail" : "(fmtstr: String): String", "member" : "scala.Predef.StringFormat.formatted", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/SymbolInfoSymbol.html#formatted(fmtstr:String):String", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: (SymbolInfoSymbol) => Boolean, msg: => Any): SymbolInfoSymbol", "member" : "scala.Predef.Ensuring.ensuring", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/SymbolInfoSymbol.html#ensuring(cond:A=>Boolean,msg:=>Any):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: (SymbolInfoSymbol) => Boolean): SymbolInfoSymbol", "member" : "scala.Predef.Ensuring.ensuring", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/SymbolInfoSymbol.html#ensuring(cond:A=>Boolean):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: Boolean, msg: => Any): SymbolInfoSymbol", "member" : "scala.Predef.Ensuring.ensuring", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/SymbolInfoSymbol.html#ensuring(cond:Boolean,msg:=>Any):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: Boolean): SymbolInfoSymbol", "member" : "scala.Predef.Ensuring.ensuring", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/SymbolInfoSymbol.html#ensuring(cond:Boolean):A", "kind" : "def"}, {"label" : "→", "tail" : "(y: B): (SymbolInfoSymbol, B)", "member" : "scala.Predef.ArrowAssoc.→", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/SymbolInfoSymbol.html#→[B](y:B):(A,B)", "kind" : "def"}, {"label" : "->", "tail" : "(y: B): (SymbolInfoSymbol, B)", "member" : "scala.Predef.ArrowAssoc.->", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/SymbolInfoSymbol.html#->[B](y:B):(A,B)", "kind" : "def"}, {"label" : "infoType", "tail" : ": Type", "member" : "scala.tools.scalap.scalax.rules.scalasig.SymbolInfoSymbol.infoType", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/SymbolInfoSymbol.html#infoType:scala.tools.scalap.scalax.rules.scalasig.Type", "kind" : "lazy val"}, {"label" : "hasFlag", "tail" : "(flag: Long): Boolean", "member" : "scala.tools.scalap.scalax.rules.scalasig.SymbolInfoSymbol.hasFlag", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/SymbolInfoSymbol.html#hasFlag(flag:Long):Boolean", "kind" : "def"}, {"label" : "parent", "tail" : "(): Some[Symbol]", "member" : "scala.tools.scalap.scalax.rules.scalasig.SymbolInfoSymbol.parent", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/SymbolInfoSymbol.html#parent:Some[scala.tools.scalap.scalax.rules.scalasig.Symbol]", "kind" : "def"}, {"label" : "name", "tail" : "(): String", "member" : "scala.tools.scalap.scalax.rules.scalasig.SymbolInfoSymbol.name", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/SymbolInfoSymbol.html#name:String", "kind" : "def"}, {"label" : "entry", "tail" : "(): Entry", "member" : "scala.tools.scalap.scalax.rules.scalasig.SymbolInfoSymbol.entry", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/SymbolInfoSymbol.html#entry:scala.tools.scalap.scalax.rules.scalasig.ScalaSig#Entry", "kind" : "def"}, {"member" : "scala.tools.scalap.scalax.rules.scalasig.SymbolInfoSymbol#<init>", "error" : "unsupported entity"}, {"label" : "attributes", "tail" : ": Seq[AttributeInfo]", "member" : "scala.tools.scalap.scalax.rules.scalasig.ScalaSigSymbol.attributes", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/SymbolInfoSymbol.html#attributes:Seq[scala.tools.scalap.scalax.rules.scalasig.AttributeInfo]", "kind" : "lazy val"}, {"label" : "children", "tail" : ": Seq[Symbol]", "member" : "scala.tools.scalap.scalax.rules.scalasig.ScalaSigSymbol.children", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/SymbolInfoSymbol.html#children:Seq[scala.tools.scalap.scalax.rules.scalasig.Symbol]", "kind" : "lazy val"}, {"label" : "index", "tail" : "(): Int", "member" : "scala.tools.scalap.scalax.rules.scalasig.ScalaSigSymbol.index", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/SymbolInfoSymbol.html#index:Int", "kind" : "def"}, {"label" : "applyScalaSigRule", "tail" : "(rule: Parser[A]): A", "member" : "scala.tools.scalap.scalax.rules.scalasig.ScalaSigSymbol.applyScalaSigRule", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/SymbolInfoSymbol.html#applyScalaSigRule[A](rule:scala.tools.scalap.scalax.rules.scalasig.ScalaSigParsers.Parser[A]):A", "kind" : "def"}, {"label" : "applyRule", "tail" : "(rule: EntryParser[A]): A", "member" : "scala.tools.scalap.scalax.rules.scalasig.ScalaSigSymbol.applyRule", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/SymbolInfoSymbol.html#applyRule[A](rule:scala.tools.scalap.scalax.rules.scalasig.ScalaSigEntryParsers.EntryParser[A]):A", "kind" : "def"}, {"label" : "path", "tail" : "(): String", "member" : "scala.tools.scalap.scalax.rules.scalasig.Symbol.path", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/SymbolInfoSymbol.html#path:String", "kind" : "def"}, {"label" : "isPreSuper", "tail" : "(): Boolean", "member" : "scala.tools.scalap.scalax.rules.scalasig.Flags.isPreSuper", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/SymbolInfoSymbol.html#isPreSuper:Boolean", "kind" : "def"}, {"label" : "isImplementationClass", "tail" : "(): Boolean", "member" : "scala.tools.scalap.scalax.rules.scalasig.Flags.isImplementationClass", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/SymbolInfoSymbol.html#isImplementationClass:Boolean", "kind" : "def"}, {"label" : "isExpandedName", "tail" : "(): Boolean", "member" : "scala.tools.scalap.scalax.rules.scalasig.Flags.isExpandedName", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/SymbolInfoSymbol.html#isExpandedName:Boolean", "kind" : "def"}, {"label" : "isExistential", "tail" : "(): Boolean", "member" : "scala.tools.scalap.scalax.rules.scalasig.Flags.isExistential", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/SymbolInfoSymbol.html#isExistential:Boolean", "kind" : "def"}, {"label" : "isMixedIn", "tail" : "(): Boolean", "member" : "scala.tools.scalap.scalax.rules.scalasig.Flags.isMixedIn", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/SymbolInfoSymbol.html#isMixedIn:Boolean", "kind" : "def"}, {"label" : "isLifted", "tail" : "(): Boolean", "member" : "scala.tools.scalap.scalax.rules.scalasig.Flags.isLifted", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/SymbolInfoSymbol.html#isLifted:Boolean", "kind" : "def"}, {"label" : "isOverloaded", "tail" : "(): Boolean", "member" : "scala.tools.scalap.scalax.rules.scalasig.Flags.isOverloaded", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/SymbolInfoSymbol.html#isOverloaded:Boolean", "kind" : "def"}, {"label" : "isError", "tail" : "(): Boolean", "member" : "scala.tools.scalap.scalax.rules.scalasig.Flags.isError", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/SymbolInfoSymbol.html#isError:Boolean", "kind" : "def"}, {"label" : "isLazy", "tail" : "(): Boolean", "member" : "scala.tools.scalap.scalax.rules.scalasig.Flags.isLazy", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/SymbolInfoSymbol.html#isLazy:Boolean", "kind" : "def"}, {"label" : "isMonomorphic", "tail" : "(): Boolean", "member" : "scala.tools.scalap.scalax.rules.scalasig.Flags.isMonomorphic", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/SymbolInfoSymbol.html#isMonomorphic:Boolean", "kind" : "def"}, {"label" : "isModuleVar", "tail" : "(): Boolean", "member" : "scala.tools.scalap.scalax.rules.scalasig.Flags.isModuleVar", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/SymbolInfoSymbol.html#isModuleVar:Boolean", "kind" : "def"}, {"label" : "isParamAccessor", "tail" : "(): Boolean", "member" : "scala.tools.scalap.scalax.rules.scalasig.Flags.isParamAccessor", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/SymbolInfoSymbol.html#isParamAccessor:Boolean", "kind" : "def"}, {"label" : "isSuperAccessor", "tail" : "(): Boolean", "member" : "scala.tools.scalap.scalax.rules.scalasig.Flags.isSuperAccessor", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/SymbolInfoSymbol.html#isSuperAccessor:Boolean", "kind" : "def"}, {"label" : "isAccessor", "tail" : "(): Boolean", "member" : "scala.tools.scalap.scalax.rules.scalasig.Flags.isAccessor", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/SymbolInfoSymbol.html#isAccessor:Boolean", "kind" : "def"}, {"label" : "isBridge", "tail" : "(): Boolean", "member" : "scala.tools.scalap.scalax.rules.scalasig.Flags.isBridge", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/SymbolInfoSymbol.html#isBridge:Boolean", "kind" : "def"}, {"label" : "isTrait", "tail" : "(): Boolean", "member" : "scala.tools.scalap.scalax.rules.scalasig.Flags.isTrait", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/SymbolInfoSymbol.html#isTrait:Boolean", "kind" : "def"}, {"label" : "isCaseAccessor", "tail" : "(): Boolean", "member" : "scala.tools.scalap.scalax.rules.scalasig.Flags.isCaseAccessor", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/SymbolInfoSymbol.html#isCaseAccessor:Boolean", "kind" : "def"}, {"label" : "isStatic", "tail" : "(): Boolean", "member" : "scala.tools.scalap.scalax.rules.scalasig.Flags.isStatic", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/SymbolInfoSymbol.html#isStatic:Boolean", "kind" : "def"}, {"label" : "isStable", "tail" : "(): Boolean", "member" : "scala.tools.scalap.scalax.rules.scalasig.Flags.isStable", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/SymbolInfoSymbol.html#isStable:Boolean", "kind" : "def"}, {"label" : "isSynthetic", "tail" : "(): Boolean", "member" : "scala.tools.scalap.scalax.rules.scalasig.Flags.isSynthetic", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/SymbolInfoSymbol.html#isSynthetic:Boolean", "kind" : "def"}, {"label" : "isJava", "tail" : "(): Boolean", "member" : "scala.tools.scalap.scalax.rules.scalasig.Flags.isJava", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/SymbolInfoSymbol.html#isJava:Boolean", "kind" : "def"}, {"label" : "isLocal", "tail" : "(): Boolean", "member" : "scala.tools.scalap.scalax.rules.scalasig.Flags.isLocal", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/SymbolInfoSymbol.html#isLocal:Boolean", "kind" : "def"}, {"label" : "isAbstractOverride", "tail" : "(): Boolean", "member" : "scala.tools.scalap.scalax.rules.scalasig.Flags.isAbstractOverride", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/SymbolInfoSymbol.html#isAbstractOverride:Boolean", "kind" : "def"}, {"label" : "isInConstructor", "tail" : "(): Boolean", "member" : "scala.tools.scalap.scalax.rules.scalasig.Flags.isInConstructor", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/SymbolInfoSymbol.html#isInConstructor:Boolean", "kind" : "def"}, {"label" : "isLabel", "tail" : "(): Boolean", "member" : "scala.tools.scalap.scalax.rules.scalasig.Flags.isLabel", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/SymbolInfoSymbol.html#isLabel:Boolean", "kind" : "def"}, {"label" : "isContravariant", "tail" : "(): Boolean", "member" : "scala.tools.scalap.scalax.rules.scalasig.Flags.isContravariant", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/SymbolInfoSymbol.html#isContravariant:Boolean", "kind" : "def"}, {"label" : "isByNameParam", "tail" : "(): Boolean", "member" : "scala.tools.scalap.scalax.rules.scalasig.Flags.isByNameParam", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/SymbolInfoSymbol.html#isByNameParam:Boolean", "kind" : "def"}, {"label" : "isCaptured", "tail" : "(): Boolean", "member" : "scala.tools.scalap.scalax.rules.scalasig.Flags.isCaptured", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/SymbolInfoSymbol.html#isCaptured:Boolean", "kind" : "def"}, {"label" : "isCovariant", "tail" : "(): Boolean", "member" : "scala.tools.scalap.scalax.rules.scalasig.Flags.isCovariant", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/SymbolInfoSymbol.html#isCovariant:Boolean", "kind" : "def"}, {"label" : "isDeprecated", "tail" : "(): Boolean", "member" : "scala.tools.scalap.scalax.rules.scalasig.Flags.isDeprecated", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/SymbolInfoSymbol.html#isDeprecated:Boolean", "kind" : "def"}, {"label" : "isPackage", "tail" : "(): Boolean", "member" : "scala.tools.scalap.scalax.rules.scalasig.Flags.isPackage", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/SymbolInfoSymbol.html#isPackage:Boolean", "kind" : "def"}, {"label" : "isParam", "tail" : "(): Boolean", "member" : "scala.tools.scalap.scalax.rules.scalasig.Flags.isParam", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/SymbolInfoSymbol.html#isParam:Boolean", "kind" : "def"}, {"label" : "isMutable", "tail" : "(): Boolean", "member" : "scala.tools.scalap.scalax.rules.scalasig.Flags.isMutable", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/SymbolInfoSymbol.html#isMutable:Boolean", "kind" : "def"}, {"label" : "isInterface", "tail" : "(): Boolean", "member" : "scala.tools.scalap.scalax.rules.scalasig.Flags.isInterface", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/SymbolInfoSymbol.html#isInterface:Boolean", "kind" : "def"}, {"label" : "isModule", "tail" : "(): Boolean", "member" : "scala.tools.scalap.scalax.rules.scalasig.Flags.isModule", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/SymbolInfoSymbol.html#isModule:Boolean", "kind" : "def"}, {"label" : "isMethod", "tail" : "(): Boolean", "member" : "scala.tools.scalap.scalax.rules.scalasig.Flags.isMethod", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/SymbolInfoSymbol.html#isMethod:Boolean", "kind" : "def"}, {"label" : "isDeferred", "tail" : "(): Boolean", "member" : "scala.tools.scalap.scalax.rules.scalasig.Flags.isDeferred", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/SymbolInfoSymbol.html#isDeferred:Boolean", "kind" : "def"}, {"label" : "isAbstract", "tail" : "(): Boolean", "member" : "scala.tools.scalap.scalax.rules.scalasig.Flags.isAbstract", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/SymbolInfoSymbol.html#isAbstract:Boolean", "kind" : "def"}, {"label" : "isCase", "tail" : "(): Boolean", "member" : "scala.tools.scalap.scalax.rules.scalasig.Flags.isCase", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/SymbolInfoSymbol.html#isCase:Boolean", "kind" : "def"}, {"label" : "isOverride", "tail" : "(): Boolean", "member" : "scala.tools.scalap.scalax.rules.scalasig.Flags.isOverride", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/SymbolInfoSymbol.html#isOverride:Boolean", "kind" : "def"}, {"label" : "isSealed", "tail" : "(): Boolean", "member" : "scala.tools.scalap.scalax.rules.scalasig.Flags.isSealed", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/SymbolInfoSymbol.html#isSealed:Boolean", "kind" : "def"}, {"label" : "isProtected", "tail" : "(): Boolean", "member" : "scala.tools.scalap.scalax.rules.scalasig.Flags.isProtected", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/SymbolInfoSymbol.html#isProtected:Boolean", "kind" : "def"}, {"label" : "isPrivate", "tail" : "(): Boolean", "member" : "scala.tools.scalap.scalax.rules.scalasig.Flags.isPrivate", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/SymbolInfoSymbol.html#isPrivate:Boolean", "kind" : "def"}, {"label" : "isFinal", "tail" : "(): Boolean", "member" : "scala.tools.scalap.scalax.rules.scalasig.Flags.isFinal", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/SymbolInfoSymbol.html#isFinal:Boolean", "kind" : "def"}, {"label" : "isImplicit", "tail" : "(): Boolean", "member" : "scala.tools.scalap.scalax.rules.scalasig.Flags.isImplicit", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/SymbolInfoSymbol.html#isImplicit:Boolean", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/SymbolInfoSymbol.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/SymbolInfoSymbol.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/SymbolInfoSymbol.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/SymbolInfoSymbol.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/SymbolInfoSymbol.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/SymbolInfoSymbol.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/SymbolInfoSymbol.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/SymbolInfoSymbol.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/SymbolInfoSymbol.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/SymbolInfoSymbol.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/SymbolInfoSymbol.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/SymbolInfoSymbol.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/SymbolInfoSymbol.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/SymbolInfoSymbol.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/SymbolInfoSymbol.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/SymbolInfoSymbol.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/SymbolInfoSymbol.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/SymbolInfoSymbol.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/SymbolInfoSymbol.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "symbolInfo", "tail" : "(): SymbolInfo", "member" : "scala.tools.scalap.scalax.rules.scalasig.SymbolInfoSymbol.symbolInfo", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/SymbolInfoSymbol.html#symbolInfo:scala.tools.scalap.scalax.rules.scalasig.SymbolInfo", "kind" : "abstract def"}], "class" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/SymbolInfoSymbol.html", "kind" : "class"}, {"name" : "scala.tools.scalap.scalax.rules.scalasig.ThisType", "shortDescription" : "", "members_case class" : [{"label" : "+", "tail" : "(other: String): String", "member" : "scala.Predef.any2stringadd.+", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/ThisType.html#+(other:String):String", "kind" : "def"}, {"label" : "formatted", "tail" : "(fmtstr: String): String", "member" : "scala.Predef.StringFormat.formatted", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/ThisType.html#formatted(fmtstr:String):String", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: (ThisType) => Boolean, msg: => Any): ThisType", "member" : "scala.Predef.Ensuring.ensuring", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/ThisType.html#ensuring(cond:A=>Boolean,msg:=>Any):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: (ThisType) => Boolean): ThisType", "member" : "scala.Predef.Ensuring.ensuring", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/ThisType.html#ensuring(cond:A=>Boolean):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: Boolean, msg: => Any): ThisType", "member" : "scala.Predef.Ensuring.ensuring", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/ThisType.html#ensuring(cond:Boolean,msg:=>Any):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: Boolean): ThisType", "member" : "scala.Predef.Ensuring.ensuring", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/ThisType.html#ensuring(cond:Boolean):A", "kind" : "def"}, {"label" : "→", "tail" : "(y: B): (ThisType, B)", "member" : "scala.Predef.ArrowAssoc.→", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/ThisType.html#→[B](y:B):(A,B)", "kind" : "def"}, {"label" : "->", "tail" : "(y: B): (ThisType, B)", "member" : "scala.Predef.ArrowAssoc.->", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/ThisType.html#->[B](y:B):(A,B)", "kind" : "def"}, {"member" : "scala.tools.scalap.scalax.rules.scalasig.ThisType#<init>", "error" : "unsupported entity"}, {"label" : "symbol", "tail" : ": Symbol", "member" : "scala.tools.scalap.scalax.rules.scalasig.ThisType.symbol", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/ThisType.html#symbol:scala.tools.scalap.scalax.rules.scalasig.Symbol", "kind" : "val"}, {"label" : "productElementNames", "tail" : "(): Iterator[String]", "member" : "scala.Product.productElementNames", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/ThisType.html#productElementNames:Iterator[String]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/ThisType.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/ThisType.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/ThisType.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/ThisType.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/ThisType.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/ThisType.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/ThisType.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/ThisType.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/ThisType.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/ThisType.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/ThisType.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/ThisType.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/ThisType.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/ThisType.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/ThisType.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/ThisType.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/ThisType.html", "kind" : "case class"}, {"name" : "scala.tools.scalap.scalax.rules.scalasig.Type", "shortDescription" : "", "members_class" : [{"label" : "+", "tail" : "(other: String): String", "member" : "scala.Predef.any2stringadd.+", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/Type.html#+(other:String):String", "kind" : "def"}, {"label" : "formatted", "tail" : "(fmtstr: String): String", "member" : "scala.Predef.StringFormat.formatted", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/Type.html#formatted(fmtstr:String):String", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: (Type) => Boolean, msg: => Any): Type", "member" : "scala.Predef.Ensuring.ensuring", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/Type.html#ensuring(cond:A=>Boolean,msg:=>Any):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: (Type) => Boolean): Type", "member" : "scala.Predef.Ensuring.ensuring", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/Type.html#ensuring(cond:A=>Boolean):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: Boolean, msg: => Any): Type", "member" : "scala.Predef.Ensuring.ensuring", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/Type.html#ensuring(cond:Boolean,msg:=>Any):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: Boolean): Type", "member" : "scala.Predef.Ensuring.ensuring", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/Type.html#ensuring(cond:Boolean):A", "kind" : "def"}, {"label" : "→", "tail" : "(y: B): (Type, B)", "member" : "scala.Predef.ArrowAssoc.→", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/Type.html#→[B](y:B):(A,B)", "kind" : "def"}, {"label" : "->", "tail" : "(y: B): (Type, B)", "member" : "scala.Predef.ArrowAssoc.->", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/Type.html#->[B](y:B):(A,B)", "kind" : "def"}, {"member" : "scala.tools.scalap.scalax.rules.scalasig.Type#<init>", "error" : "unsupported entity"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/Type.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/Type.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/Type.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/Type.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/Type.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/Type.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/Type.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/Type.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/Type.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/Type.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/Type.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/Type.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/Type.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/Type.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/Type.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/Type.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/Type.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/Type.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/Type.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/Type.html", "kind" : "class"}, {"name" : "scala.tools.scalap.scalax.rules.scalasig.TypeBoundsType", "shortDescription" : "", "members_case class" : [{"label" : "+", "tail" : "(other: String): String", "member" : "scala.Predef.any2stringadd.+", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/TypeBoundsType.html#+(other:String):String", "kind" : "def"}, {"label" : "formatted", "tail" : "(fmtstr: String): String", "member" : "scala.Predef.StringFormat.formatted", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/TypeBoundsType.html#formatted(fmtstr:String):String", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: (TypeBoundsType) => Boolean, msg: => Any): TypeBoundsType", "member" : "scala.Predef.Ensuring.ensuring", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/TypeBoundsType.html#ensuring(cond:A=>Boolean,msg:=>Any):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: (TypeBoundsType) => Boolean): TypeBoundsType", "member" : "scala.Predef.Ensuring.ensuring", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/TypeBoundsType.html#ensuring(cond:A=>Boolean):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: Boolean, msg: => Any): TypeBoundsType", "member" : "scala.Predef.Ensuring.ensuring", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/TypeBoundsType.html#ensuring(cond:Boolean,msg:=>Any):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: Boolean): TypeBoundsType", "member" : "scala.Predef.Ensuring.ensuring", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/TypeBoundsType.html#ensuring(cond:Boolean):A", "kind" : "def"}, {"label" : "→", "tail" : "(y: B): (TypeBoundsType, B)", "member" : "scala.Predef.ArrowAssoc.→", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/TypeBoundsType.html#→[B](y:B):(A,B)", "kind" : "def"}, {"label" : "->", "tail" : "(y: B): (TypeBoundsType, B)", "member" : "scala.Predef.ArrowAssoc.->", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/TypeBoundsType.html#->[B](y:B):(A,B)", "kind" : "def"}, {"member" : "scala.tools.scalap.scalax.rules.scalasig.TypeBoundsType#<init>", "error" : "unsupported entity"}, {"label" : "upper", "tail" : ": Type", "member" : "scala.tools.scalap.scalax.rules.scalasig.TypeBoundsType.upper", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/TypeBoundsType.html#upper:scala.tools.scalap.scalax.rules.scalasig.Type", "kind" : "val"}, {"label" : "lower", "tail" : ": Type", "member" : "scala.tools.scalap.scalax.rules.scalasig.TypeBoundsType.lower", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/TypeBoundsType.html#lower:scala.tools.scalap.scalax.rules.scalasig.Type", "kind" : "val"}, {"label" : "productElementNames", "tail" : "(): Iterator[String]", "member" : "scala.Product.productElementNames", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/TypeBoundsType.html#productElementNames:Iterator[String]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/TypeBoundsType.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/TypeBoundsType.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/TypeBoundsType.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/TypeBoundsType.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/TypeBoundsType.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/TypeBoundsType.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/TypeBoundsType.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/TypeBoundsType.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/TypeBoundsType.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/TypeBoundsType.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/TypeBoundsType.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/TypeBoundsType.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/TypeBoundsType.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/TypeBoundsType.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/TypeBoundsType.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/TypeBoundsType.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/TypeBoundsType.html", "kind" : "case class"}, {"name" : "scala.tools.scalap.scalax.rules.scalasig.TypeRefType", "shortDescription" : "", "members_case class" : [{"label" : "+", "tail" : "(other: String): String", "member" : "scala.Predef.any2stringadd.+", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/TypeRefType.html#+(other:String):String", "kind" : "def"}, {"label" : "formatted", "tail" : "(fmtstr: String): String", "member" : "scala.Predef.StringFormat.formatted", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/TypeRefType.html#formatted(fmtstr:String):String", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: (TypeRefType) => Boolean, msg: => Any): TypeRefType", "member" : "scala.Predef.Ensuring.ensuring", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/TypeRefType.html#ensuring(cond:A=>Boolean,msg:=>Any):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: (TypeRefType) => Boolean): TypeRefType", "member" : "scala.Predef.Ensuring.ensuring", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/TypeRefType.html#ensuring(cond:A=>Boolean):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: Boolean, msg: => Any): TypeRefType", "member" : "scala.Predef.Ensuring.ensuring", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/TypeRefType.html#ensuring(cond:Boolean,msg:=>Any):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: Boolean): TypeRefType", "member" : "scala.Predef.Ensuring.ensuring", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/TypeRefType.html#ensuring(cond:Boolean):A", "kind" : "def"}, {"label" : "→", "tail" : "(y: B): (TypeRefType, B)", "member" : "scala.Predef.ArrowAssoc.→", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/TypeRefType.html#→[B](y:B):(A,B)", "kind" : "def"}, {"label" : "->", "tail" : "(y: B): (TypeRefType, B)", "member" : "scala.Predef.ArrowAssoc.->", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/TypeRefType.html#->[B](y:B):(A,B)", "kind" : "def"}, {"member" : "scala.tools.scalap.scalax.rules.scalasig.TypeRefType#<init>", "error" : "unsupported entity"}, {"label" : "typeArgs", "tail" : ": Seq[Type]", "member" : "scala.tools.scalap.scalax.rules.scalasig.TypeRefType.typeArgs", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/TypeRefType.html#typeArgs:Seq[scala.tools.scalap.scalax.rules.scalasig.Type]", "kind" : "val"}, {"label" : "symbol", "tail" : ": Symbol", "member" : "scala.tools.scalap.scalax.rules.scalasig.TypeRefType.symbol", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/TypeRefType.html#symbol:scala.tools.scalap.scalax.rules.scalasig.Symbol", "kind" : "val"}, {"label" : "prefix", "tail" : ": Type", "member" : "scala.tools.scalap.scalax.rules.scalasig.TypeRefType.prefix", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/TypeRefType.html#prefix:scala.tools.scalap.scalax.rules.scalasig.Type", "kind" : "val"}, {"label" : "productElementNames", "tail" : "(): Iterator[String]", "member" : "scala.Product.productElementNames", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/TypeRefType.html#productElementNames:Iterator[String]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/TypeRefType.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/TypeRefType.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/TypeRefType.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/TypeRefType.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/TypeRefType.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/TypeRefType.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/TypeRefType.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/TypeRefType.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/TypeRefType.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/TypeRefType.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/TypeRefType.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/TypeRefType.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/TypeRefType.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/TypeRefType.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/TypeRefType.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/TypeRefType.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/TypeRefType.html", "kind" : "case class"}, {"name" : "scala.tools.scalap.scalax.rules.scalasig.TypeSymbol", "shortDescription" : "", "members_case class" : [{"label" : "+", "tail" : "(other: String): String", "member" : "scala.Predef.any2stringadd.+", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/TypeSymbol.html#+(other:String):String", "kind" : "def"}, {"label" : "formatted", "tail" : "(fmtstr: String): String", "member" : "scala.Predef.StringFormat.formatted", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/TypeSymbol.html#formatted(fmtstr:String):String", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: (TypeSymbol) => Boolean, msg: => Any): TypeSymbol", "member" : "scala.Predef.Ensuring.ensuring", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/TypeSymbol.html#ensuring(cond:A=>Boolean,msg:=>Any):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: (TypeSymbol) => Boolean): TypeSymbol", "member" : "scala.Predef.Ensuring.ensuring", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/TypeSymbol.html#ensuring(cond:A=>Boolean):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: Boolean, msg: => Any): TypeSymbol", "member" : "scala.Predef.Ensuring.ensuring", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/TypeSymbol.html#ensuring(cond:Boolean,msg:=>Any):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: Boolean): TypeSymbol", "member" : "scala.Predef.Ensuring.ensuring", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/TypeSymbol.html#ensuring(cond:Boolean):A", "kind" : "def"}, {"label" : "→", "tail" : "(y: B): (TypeSymbol, B)", "member" : "scala.Predef.ArrowAssoc.→", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/TypeSymbol.html#→[B](y:B):(A,B)", "kind" : "def"}, {"label" : "->", "tail" : "(y: B): (TypeSymbol, B)", "member" : "scala.Predef.ArrowAssoc.->", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/TypeSymbol.html#->[B](y:B):(A,B)", "kind" : "def"}, {"label" : "path", "tail" : "(): String", "member" : "scala.tools.scalap.scalax.rules.scalasig.TypeSymbol.path", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/TypeSymbol.html#path:String", "kind" : "def"}, {"member" : "scala.tools.scalap.scalax.rules.scalasig.TypeSymbol#<init>", "error" : "unsupported entity"}, {"label" : "symbolInfo", "tail" : ": SymbolInfo", "member" : "scala.tools.scalap.scalax.rules.scalasig.TypeSymbol.symbolInfo", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/TypeSymbol.html#symbolInfo:scala.tools.scalap.scalax.rules.scalasig.SymbolInfo", "kind" : "val"}, {"label" : "productElementNames", "tail" : "(): Iterator[String]", "member" : "scala.Product.productElementNames", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/TypeSymbol.html#productElementNames:Iterator[String]", "kind" : "def"}, {"label" : "infoType", "tail" : ": Type", "member" : "scala.tools.scalap.scalax.rules.scalasig.SymbolInfoSymbol.infoType", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/TypeSymbol.html#infoType:scala.tools.scalap.scalax.rules.scalasig.Type", "kind" : "lazy val"}, {"label" : "hasFlag", "tail" : "(flag: Long): Boolean", "member" : "scala.tools.scalap.scalax.rules.scalasig.SymbolInfoSymbol.hasFlag", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/TypeSymbol.html#hasFlag(flag:Long):Boolean", "kind" : "def"}, {"label" : "parent", "tail" : "(): Some[Symbol]", "member" : "scala.tools.scalap.scalax.rules.scalasig.SymbolInfoSymbol.parent", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/TypeSymbol.html#parent:Some[scala.tools.scalap.scalax.rules.scalasig.Symbol]", "kind" : "def"}, {"label" : "name", "tail" : "(): String", "member" : "scala.tools.scalap.scalax.rules.scalasig.SymbolInfoSymbol.name", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/TypeSymbol.html#name:String", "kind" : "def"}, {"label" : "entry", "tail" : "(): Entry", "member" : "scala.tools.scalap.scalax.rules.scalasig.SymbolInfoSymbol.entry", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/TypeSymbol.html#entry:scala.tools.scalap.scalax.rules.scalasig.ScalaSig#Entry", "kind" : "def"}, {"label" : "attributes", "tail" : ": Seq[AttributeInfo]", "member" : "scala.tools.scalap.scalax.rules.scalasig.ScalaSigSymbol.attributes", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/TypeSymbol.html#attributes:Seq[scala.tools.scalap.scalax.rules.scalasig.AttributeInfo]", "kind" : "lazy val"}, {"label" : "children", "tail" : ": Seq[Symbol]", "member" : "scala.tools.scalap.scalax.rules.scalasig.ScalaSigSymbol.children", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/TypeSymbol.html#children:Seq[scala.tools.scalap.scalax.rules.scalasig.Symbol]", "kind" : "lazy val"}, {"label" : "index", "tail" : "(): Int", "member" : "scala.tools.scalap.scalax.rules.scalasig.ScalaSigSymbol.index", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/TypeSymbol.html#index:Int", "kind" : "def"}, {"label" : "applyScalaSigRule", "tail" : "(rule: Parser[A]): A", "member" : "scala.tools.scalap.scalax.rules.scalasig.ScalaSigSymbol.applyScalaSigRule", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/TypeSymbol.html#applyScalaSigRule[A](rule:scala.tools.scalap.scalax.rules.scalasig.ScalaSigParsers.Parser[A]):A", "kind" : "def"}, {"label" : "applyRule", "tail" : "(rule: EntryParser[A]): A", "member" : "scala.tools.scalap.scalax.rules.scalasig.ScalaSigSymbol.applyRule", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/TypeSymbol.html#applyRule[A](rule:scala.tools.scalap.scalax.rules.scalasig.ScalaSigEntryParsers.EntryParser[A]):A", "kind" : "def"}, {"label" : "isPreSuper", "tail" : "(): Boolean", "member" : "scala.tools.scalap.scalax.rules.scalasig.Flags.isPreSuper", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/TypeSymbol.html#isPreSuper:Boolean", "kind" : "def"}, {"label" : "isImplementationClass", "tail" : "(): Boolean", "member" : "scala.tools.scalap.scalax.rules.scalasig.Flags.isImplementationClass", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/TypeSymbol.html#isImplementationClass:Boolean", "kind" : "def"}, {"label" : "isExpandedName", "tail" : "(): Boolean", "member" : "scala.tools.scalap.scalax.rules.scalasig.Flags.isExpandedName", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/TypeSymbol.html#isExpandedName:Boolean", "kind" : "def"}, {"label" : "isExistential", "tail" : "(): Boolean", "member" : "scala.tools.scalap.scalax.rules.scalasig.Flags.isExistential", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/TypeSymbol.html#isExistential:Boolean", "kind" : "def"}, {"label" : "isMixedIn", "tail" : "(): Boolean", "member" : "scala.tools.scalap.scalax.rules.scalasig.Flags.isMixedIn", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/TypeSymbol.html#isMixedIn:Boolean", "kind" : "def"}, {"label" : "isLifted", "tail" : "(): Boolean", "member" : "scala.tools.scalap.scalax.rules.scalasig.Flags.isLifted", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/TypeSymbol.html#isLifted:Boolean", "kind" : "def"}, {"label" : "isOverloaded", "tail" : "(): Boolean", "member" : "scala.tools.scalap.scalax.rules.scalasig.Flags.isOverloaded", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/TypeSymbol.html#isOverloaded:Boolean", "kind" : "def"}, {"label" : "isError", "tail" : "(): Boolean", "member" : "scala.tools.scalap.scalax.rules.scalasig.Flags.isError", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/TypeSymbol.html#isError:Boolean", "kind" : "def"}, {"label" : "isLazy", "tail" : "(): Boolean", "member" : "scala.tools.scalap.scalax.rules.scalasig.Flags.isLazy", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/TypeSymbol.html#isLazy:Boolean", "kind" : "def"}, {"label" : "isMonomorphic", "tail" : "(): Boolean", "member" : "scala.tools.scalap.scalax.rules.scalasig.Flags.isMonomorphic", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/TypeSymbol.html#isMonomorphic:Boolean", "kind" : "def"}, {"label" : "isModuleVar", "tail" : "(): Boolean", "member" : "scala.tools.scalap.scalax.rules.scalasig.Flags.isModuleVar", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/TypeSymbol.html#isModuleVar:Boolean", "kind" : "def"}, {"label" : "isParamAccessor", "tail" : "(): Boolean", "member" : "scala.tools.scalap.scalax.rules.scalasig.Flags.isParamAccessor", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/TypeSymbol.html#isParamAccessor:Boolean", "kind" : "def"}, {"label" : "isSuperAccessor", "tail" : "(): Boolean", "member" : "scala.tools.scalap.scalax.rules.scalasig.Flags.isSuperAccessor", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/TypeSymbol.html#isSuperAccessor:Boolean", "kind" : "def"}, {"label" : "isAccessor", "tail" : "(): Boolean", "member" : "scala.tools.scalap.scalax.rules.scalasig.Flags.isAccessor", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/TypeSymbol.html#isAccessor:Boolean", "kind" : "def"}, {"label" : "isBridge", "tail" : "(): Boolean", "member" : "scala.tools.scalap.scalax.rules.scalasig.Flags.isBridge", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/TypeSymbol.html#isBridge:Boolean", "kind" : "def"}, {"label" : "isTrait", "tail" : "(): Boolean", "member" : "scala.tools.scalap.scalax.rules.scalasig.Flags.isTrait", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/TypeSymbol.html#isTrait:Boolean", "kind" : "def"}, {"label" : "isCaseAccessor", "tail" : "(): Boolean", "member" : "scala.tools.scalap.scalax.rules.scalasig.Flags.isCaseAccessor", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/TypeSymbol.html#isCaseAccessor:Boolean", "kind" : "def"}, {"label" : "isStatic", "tail" : "(): Boolean", "member" : "scala.tools.scalap.scalax.rules.scalasig.Flags.isStatic", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/TypeSymbol.html#isStatic:Boolean", "kind" : "def"}, {"label" : "isStable", "tail" : "(): Boolean", "member" : "scala.tools.scalap.scalax.rules.scalasig.Flags.isStable", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/TypeSymbol.html#isStable:Boolean", "kind" : "def"}, {"label" : "isSynthetic", "tail" : "(): Boolean", "member" : "scala.tools.scalap.scalax.rules.scalasig.Flags.isSynthetic", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/TypeSymbol.html#isSynthetic:Boolean", "kind" : "def"}, {"label" : "isJava", "tail" : "(): Boolean", "member" : "scala.tools.scalap.scalax.rules.scalasig.Flags.isJava", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/TypeSymbol.html#isJava:Boolean", "kind" : "def"}, {"label" : "isLocal", "tail" : "(): Boolean", "member" : "scala.tools.scalap.scalax.rules.scalasig.Flags.isLocal", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/TypeSymbol.html#isLocal:Boolean", "kind" : "def"}, {"label" : "isAbstractOverride", "tail" : "(): Boolean", "member" : "scala.tools.scalap.scalax.rules.scalasig.Flags.isAbstractOverride", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/TypeSymbol.html#isAbstractOverride:Boolean", "kind" : "def"}, {"label" : "isInConstructor", "tail" : "(): Boolean", "member" : "scala.tools.scalap.scalax.rules.scalasig.Flags.isInConstructor", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/TypeSymbol.html#isInConstructor:Boolean", "kind" : "def"}, {"label" : "isLabel", "tail" : "(): Boolean", "member" : "scala.tools.scalap.scalax.rules.scalasig.Flags.isLabel", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/TypeSymbol.html#isLabel:Boolean", "kind" : "def"}, {"label" : "isContravariant", "tail" : "(): Boolean", "member" : "scala.tools.scalap.scalax.rules.scalasig.Flags.isContravariant", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/TypeSymbol.html#isContravariant:Boolean", "kind" : "def"}, {"label" : "isByNameParam", "tail" : "(): Boolean", "member" : "scala.tools.scalap.scalax.rules.scalasig.Flags.isByNameParam", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/TypeSymbol.html#isByNameParam:Boolean", "kind" : "def"}, {"label" : "isCaptured", "tail" : "(): Boolean", "member" : "scala.tools.scalap.scalax.rules.scalasig.Flags.isCaptured", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/TypeSymbol.html#isCaptured:Boolean", "kind" : "def"}, {"label" : "isCovariant", "tail" : "(): Boolean", "member" : "scala.tools.scalap.scalax.rules.scalasig.Flags.isCovariant", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/TypeSymbol.html#isCovariant:Boolean", "kind" : "def"}, {"label" : "isDeprecated", "tail" : "(): Boolean", "member" : "scala.tools.scalap.scalax.rules.scalasig.Flags.isDeprecated", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/TypeSymbol.html#isDeprecated:Boolean", "kind" : "def"}, {"label" : "isPackage", "tail" : "(): Boolean", "member" : "scala.tools.scalap.scalax.rules.scalasig.Flags.isPackage", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/TypeSymbol.html#isPackage:Boolean", "kind" : "def"}, {"label" : "isParam", "tail" : "(): Boolean", "member" : "scala.tools.scalap.scalax.rules.scalasig.Flags.isParam", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/TypeSymbol.html#isParam:Boolean", "kind" : "def"}, {"label" : "isMutable", "tail" : "(): Boolean", "member" : "scala.tools.scalap.scalax.rules.scalasig.Flags.isMutable", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/TypeSymbol.html#isMutable:Boolean", "kind" : "def"}, {"label" : "isInterface", "tail" : "(): Boolean", "member" : "scala.tools.scalap.scalax.rules.scalasig.Flags.isInterface", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/TypeSymbol.html#isInterface:Boolean", "kind" : "def"}, {"label" : "isModule", "tail" : "(): Boolean", "member" : "scala.tools.scalap.scalax.rules.scalasig.Flags.isModule", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/TypeSymbol.html#isModule:Boolean", "kind" : "def"}, {"label" : "isMethod", "tail" : "(): Boolean", "member" : "scala.tools.scalap.scalax.rules.scalasig.Flags.isMethod", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/TypeSymbol.html#isMethod:Boolean", "kind" : "def"}, {"label" : "isDeferred", "tail" : "(): Boolean", "member" : "scala.tools.scalap.scalax.rules.scalasig.Flags.isDeferred", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/TypeSymbol.html#isDeferred:Boolean", "kind" : "def"}, {"label" : "isAbstract", "tail" : "(): Boolean", "member" : "scala.tools.scalap.scalax.rules.scalasig.Flags.isAbstract", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/TypeSymbol.html#isAbstract:Boolean", "kind" : "def"}, {"label" : "isCase", "tail" : "(): Boolean", "member" : "scala.tools.scalap.scalax.rules.scalasig.Flags.isCase", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/TypeSymbol.html#isCase:Boolean", "kind" : "def"}, {"label" : "isOverride", "tail" : "(): Boolean", "member" : "scala.tools.scalap.scalax.rules.scalasig.Flags.isOverride", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/TypeSymbol.html#isOverride:Boolean", "kind" : "def"}, {"label" : "isSealed", "tail" : "(): Boolean", "member" : "scala.tools.scalap.scalax.rules.scalasig.Flags.isSealed", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/TypeSymbol.html#isSealed:Boolean", "kind" : "def"}, {"label" : "isProtected", "tail" : "(): Boolean", "member" : "scala.tools.scalap.scalax.rules.scalasig.Flags.isProtected", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/TypeSymbol.html#isProtected:Boolean", "kind" : "def"}, {"label" : "isPrivate", "tail" : "(): Boolean", "member" : "scala.tools.scalap.scalax.rules.scalasig.Flags.isPrivate", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/TypeSymbol.html#isPrivate:Boolean", "kind" : "def"}, {"label" : "isFinal", "tail" : "(): Boolean", "member" : "scala.tools.scalap.scalax.rules.scalasig.Flags.isFinal", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/TypeSymbol.html#isFinal:Boolean", "kind" : "def"}, {"label" : "isImplicit", "tail" : "(): Boolean", "member" : "scala.tools.scalap.scalax.rules.scalasig.Flags.isImplicit", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/TypeSymbol.html#isImplicit:Boolean", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/TypeSymbol.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/TypeSymbol.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/TypeSymbol.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/TypeSymbol.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/TypeSymbol.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/TypeSymbol.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/TypeSymbol.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/TypeSymbol.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/TypeSymbol.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/TypeSymbol.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/TypeSymbol.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/TypeSymbol.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/TypeSymbol.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/TypeSymbol.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/TypeSymbol.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/TypeSymbol.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "scala\/tools\/scalap\/scalax\/rules\/scalasig\/TypeSymbol.html", "kind" : "case class"}], "scala.tools" : []};